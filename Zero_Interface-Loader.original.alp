<?xml version="1.0" encoding="UTF-8"?>
<AnyLogicWorkspace splitVersion="1"
                   WorkspaceVersion="1.9"
                   AnyLogicVersion="8.9.5.202506190548"
                   AlpVersion="8.9.5">
	<Model xmlns:al="http://anylogic.com">
		<Id>1658477103134</Id>
		<Name>Zero_Interface-Loader</Name>
		<EngineVersion>6</EngineVersion>
		<JavaPackageName>zerointerfaceloader</JavaPackageName>
		<ModelTimeUnit>Hour</ModelTimeUnit>
		<OptionLists>
			<OptionList>
				<Id>1658478100573</Id>
				<Name>OL_FilterOptionsGC</Name>
				<Option>
					<Id>1734448498882</Id>
					<Name>COMPANIES</Name>
				</Option>
				<Option>
					<Id>1734442884762</Id>
					<Name>HOUSES</Name>
				</Option>
				<Option>
					<Id>1734442348652</Id>
					<Name>DETAILED</Name>
				</Option>
				<Option>
					<Id>1734442871159</Id>
					<Name>NONDETAILED</Name>
				</Option>
				<Option>
					<Id>1734442372415</Id>
					<Name>HASPV</Name>
				</Option>
				<Option>
					<Id>1734442386815</Id>
					<Name>HASTRANSPORT</Name>
				</Option>
				<Option>
					<Id>1734444382736</Id>
					<Name>GRIDTOPOLOGY_SELECTEDLOOP</Name>
				</Option>
				<Option>
					<Id>1734442896763</Id>
					<Name>ENERGYASSETS</Name>
				</Option>
				<Option>
					<Id>1737653098541</Id>
					<Name>SELECTED_NEIGHBORHOOD</Name>
				</Option>
				<Option>
					<Id>1737656249784</Id>
					<Name>SELECTED_MUNICIPALITY</Name>
				</Option>
				<Option>
					<Id>1741874937291</Id>
					<Name>FARMER</Name>
				</Option>
				<Option>
					<Id>1742233248626</Id>
					<Name>MANUAL_SELECTION</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989698</Id>
				<Name>OL_GISBuildingTypes</Name>
				<Option>
					<Id>1750173978462</Id>
					<Name>DETAILED_COMPANY</Name>
				</Option>
				<Option>
					<Id>1750173986048</Id>
					<Name>DEFAULT_COMPANY</Name>
				</Option>
				<Option>
					<Id>1750173990031</Id>
					<Name>HOUSE</Name>
				</Option>
				<Option>
					<Id>1750173992447</Id>
					<Name>REMAINING</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989798</Id>
				<Name>OL_ProjectType</Name>
				<Option>
					<Id>1660743990769</Id>
					<Name>BUSINESSPARK</Name>
				</Option>
				<Option>
					<Id>1676307694256</Id>
					<Name>RESIDENTIAL</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1667742453792</Id>
				<Name>OL_UNUSED3</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
			</OptionList>
			<OptionList>
				<Id>1675025163072</Id>
				<Name>OL_UNUSED4</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
			</OptionList>
			<OptionList>
				<Id>1709718356700</Id>
				<Name>EnergyDemandTab</Name>
				<Option>
					<Id>1709718356702</Id>
					<Name>MOBILITY</Name>
				</Option>
				<Option>
					<Id>1709718356704</Id>
					<Name>ELECTRICITY</Name>
				</Option>
				<Option>
					<Id>1709718356706</Id>
					<Name>HEAT</Name>
				</Option>
				<Option>
					<Id>1714324722851</Id>
					<Name>HUB</Name>
				</Option>
				<Option>
					<Id>1721039647716</Id>
					<Name>NFATO</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1726584216672</Id>
				<Name>OL_IsolationLevelHouse</Name>
				<Option>
					<Id>1726584216674</Id>
					<Name>A</Name>
				</Option>
				<Option>
					<Id>1726584216676</Id>
					<Name>B</Name>
				</Option>
				<Option>
					<Id>1726584216678</Id>
					<Name>C</Name>
				</Option>
				<Option>
					<Id>1726584216680</Id>
					<Name>D</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1726584216682</Id>
				<Name>OL_SurveyType</Name>
				<Option>
					<Id>1726584216684</Id>
					<Name>ZORM</Name>
				</Option>
				<Option>
					<Id>1726584216686</Id>
					<Name>EXCEL</Name>
				</Option>
				<Option>
					<Id>1726584216688</Id>
					<Name>NONE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1753086929090</Id>
				<Name>OL_MapOverlayTypes</Name>
				<Option>
					<Id>1753086938862</Id>
					<Name>DEFAULT</Name>
				</Option>
				<Option>
					<Id>1753086944014</Id>
					<Name>ELECTRICITY_CONSUMPTION</Name>
				</Option>
				<Option>
					<Id>1753086951601</Id>
					<Name>PV_PRODUCTION</Name>
				</Option>
				<Option>
					<Id>1753086958969</Id>
					<Name>GRID_NEIGHBOURS</Name>
				</Option>
				<Option>
					<Id>1753086978373</Id>
					<Name>CONGESTION</Name>
				</Option>
				<Option>
					<Id>1753108825070</Id>
					<Name>ENERGY_LABEL</Name>
				</Option>
			</OptionList>
		</OptionLists>
		<Folders/>
		<ActiveObjectClasses>
			<ActiveObjectClass>
				<Id>1726584205528</Id>
				<Name>AVGC_data</Name>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1726584205523</Id>
					<Name>1726584205523</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089981</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1710835200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1726584205524</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1726584205534</CurrentLevel>
				<ConnectionsId>1726584205728</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1726584205532</Id>
						<Name>hourOfYearPerMonth</Name>
						<Description>Hour of year per month (not leap year) --&gt; Houdt dit rekening met zomer/winter tijd?</Description>
						<X>1070</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int[]</Type>
							<InitialValue Class="CodeValue">
								<Code>new int[] {0, 744, 1392, 2136, 2856, 3600, 4320, 5064, 5808, 6528, 7272, 7992}</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205579</Id>
						<Name>p_avgHouseConnectionCapacity_kW</Name>
						<Description>https://www.enexis.nl/aansluitingen/welke-aansluiting-heb-ik-nodig
3*25 A --&gt; 3*25*230 = 17.25 kW</Description>
						<X>50</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>17.25</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205577</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205582</Id>
						<Name>p_avgHouseHeatingMethod</Name>
						<X>50</X>
						<Y>188.976</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionHeatingType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_GridConnectionHeatingType.GASBURNER</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205580</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205585</Id>
						<Name>p_avgUtilityConnectionCapacity_kW</Name>
						<Description>https://www.enexis.nl/aansluitingen/welke-aansluiting-heb-ik-nodig
-&gt; 17.25 -&gt; set to 17, to prevent slider errors (stepsize cant be double, otherwise to small for user experience)

--&gt; 17.25 is way to small -&gt; 3x80 is taken : 55 kW</Description>
						<X>50</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>55</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205583</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205588</Id>
						<Name>p_avgUtilityHeatingMethod</Name>
						<X>50</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionHeatingType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_GridConnectionHeatingType.GASBURNER</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205586</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205591</Id>
						<Name>p_avgHouseElectricityConsumption_kWh_yr</Name>
						<Description>- https://www.milieucentraal.nl/energie-besparen/inzicht-in-je-energierekening/gemiddeld-energieverbruik/
- https://www.overstappen.nl/energie/gemiddeld-energieverbruik/ 
--&gt; 2479 kWh/yr is the average of NL
--&gt; Overwrite if numbers are available in the project selection agent
</Description>
						<X>50</X>
						<Y>148.976</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2479</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205589</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205594</Id>
						<Name>p_avgHouseGasConsumption_m3_yr</Name>
						<Description>- https://www.overstappen.nl/energie/gemiddeld-energieverbruik/
- https://www.milieucentraal.nl/energie-besparen/inzicht-in-je-energierekening/gemiddeld-energieverbruik/
 --&gt; 1169 m3 is the average of NL
--&gt; Overwrite if numbers are available in the project selection agent
</Description>
						<X>50</X>
						<Y>128.976</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>1169</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205592</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205597</Id>
						<Name>p_shareOfElectricVehicleOwnership</Name>
						<Description>share of EVs in the netherlands. --&gt; 5% (feb 2024).

https://www.rvo.nl/onderwerpen/elektrisch-vervoer/stand-van-zaken </Description>
						<X>50</X>
						<Y>208.976</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.05</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205595</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205600</Id>
						<Name>p_ratioHouseInstalledPV</Name>
						<Description>How many houses have installed PV in The Netherlands: 25% (end of 2022)
https://solarmagazine.nl/nieuws-zonne-energie/i34591/de-harde-cijfers-drenthe-verstevigt-koppositie-38-procent-woningen-heeft-zonnepanelen</Description>
						<X>50</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.25</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205598</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205603</Id>
						<Name>p_avgHousePVInstallationPower_kWp</Name>
						<Description>volgens gegevens van het CBS (Centraal Bureau voor de Statistiek) en RVO (Rijksdienst voor Ondernemend Nederland), was het gemiddelde geïnstalleerde piekvermogen van residentiële zonnepanelen in Nederland in 2020 ongeveer 4 kilowatt piek (kWp) per huishouden. --&gt; 4kWp</Description>
						<X>50</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>4</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205601</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205606</Id>
						<Name>p_avgEVStorageCar_kWh</Name>
						<Description>-https://www.eonenergy.com/electric-vehicle-charging/running-costs-and-benefits/battery-capacity-and-lifespan.html

-https://www.edi.be/blog/laadstation-3/hoe-is-het-gesteld-met-de-autonomie-van-de-elektrische-auto-in-2023-12

40 kWh (kleine autos)

50-80 kWh (middel grote autos) 

80-100 kWh (grote autos)

Minimaal: 116 kWh minimum nodig, anders soms negatieve SOC.</Description>
						<X>570</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>116</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205604</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205609</Id>
						<Name>p_avgEVMaxChargePowerCar_kW</Name>
						<Description>Bron???</Description>
						<X>570</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>11</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205607</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205612</Id>
						<Name>p_avgEVStorageVan_kWh</Name>
						<Description>????</Description>
						<X>570</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>200</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205610</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205615</Id>
						<Name>p_avgEVStorageTruck_kWh</Name>
						<Description>??</Description>
						<X>570</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>500</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205613</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205618</Id>
						<Name>p_avgEVMaxChargePowerVan_kW</Name>
						<Description>Bron???</Description>
						<X>570</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>11</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205616</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205621</Id>
						<Name>p_avgEVMaxChargePowerTruck_kW</Name>
						<Description>Bron???</Description>
						<X>570</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>200</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205619</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205624</Id>
						<Name>p_avgEVEnergyConsumptionCar_kWhpkm</Name>
						<Description>https://ev-database.org/nl/auto/1555/Tesla-Model-3: 0.142 kWh/km

https://www.vattenfall.nl/elektrische-auto/verbruik/

--&gt; Tesla model 3: 15.1 kWh per 100 km --&gt; 0.151 kWh/km
--&gt; Kia niro: 17.1 kWh per 100 km --&gt; 0.171 kWh/km
--&gt; taking 0.16 kWh/km as the average</Description>
						<X>570</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.16</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205622</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205627</Id>
						<Name>p_avgEVEnergyConsumptionVan_kWhpkm</Name>
						<Description>praktijkverbruik van 26,9 kWh per 100 kilometer:
https://www.debedrijfswagenadviseurs.nl/praktijkverbruik-elektrische-bedrijfswagen/ </Description>
						<X>570</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.269</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205625</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205630</Id>
						<Name>p_avgEVEnergyConsumptionTruck_kWhpkm</Name>
						<Description>https://www.elektrischevrachtwagen.nl/post/hoe-ver-kan-een-elektrische-vrachtwagen-rijden, https://topsectorlogistiek.nl/wp-content/uploads/2024/06/20240126_Stappenplan-ZE-vrachtwagens.pdf
0.9 - 1.7 kWh/km
--&gt; pak gemiddelde: 1.3</Description>
						<X>570</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>1.3</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205628</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205633</Id>
						<Name>p_gas_kWhpm3</Name>
						<Description>- https://www.greenchoice.nl/stroom-en-gas/bosgecompenseerd-gas/hoeveel-is-1-kuub-gas/

- https://www.joostdevree.nl/shtmls/calorische_waarde.shtml</Description>
						<X>1070</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>9.7</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205631</Id>
								<Label>p_gas_kWh_per_m3</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205636</Id>
						<Name>p_hydrogenEnergyDensity_kWh_Nm3</Name>
						<Description>https://www.enapter.com/kb_post/what-is-the-energy-content-of-hydrogen 

LHV = 3.00 kWh/Nm3
HHV = 3.54 kWh/Nm3</Description>
						<X>1590</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>3.00</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205634</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205639</Id>
						<Name>p_hydrogenDensity_kg_Nm3</Name>
						<Description>https://keengas.com/gases/hydrogen/</Description>
						<X>1590</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.08988</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205637</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205642</Id>
						<Name>p_oxygenDensity_kg_Nm3</Name>
						<Description>http://www.uigi.com/o2_conv.html</Description>
						<X>1590</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>1.4291</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205640</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205645</Id>
						<Name>p_oxygenProduction_kgO2pkgH2</Name>
						<Description>H20 = 2H + O
MM H = 1.008 g/mol
MM O = 16 g/mol
--&gt; 1.008*2/16 = 0.126.
0.126 g waterstof per g water conversie.
1-0.126 = 0.874 g zuurstof per gram water conversie.

--&gt; 1/0.126 =7.9365 gram zuurstof productie per gram waterstof productie.</Description>
						<X>1590</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>7.9365</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205643</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205648</Id>
						<Name>p_hydrogenSpecificEnergy_kWh_kg</Name>
						<Description>https://www.cenex.co.uk/app/uploads/2021/05/Intro-to-hydrogen-1.pdf --&gt; 33.6</Description>
						<X>1590</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>33.6</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205646</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205651</Id>
						<Name>p_diesel_kWhpl</Name>
						<Description>https://www.joostdevree.nl/shtmls/calorische_waarde.shtml</Description>
						<X>1070</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>10</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205649</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205654</Id>
						<Name>p_avgDieselConsumptionCar_kmpl</Name>
						<Description>https://www.unitedconsumers.com/blog/auto/zuinig-rijden.jsp</Description>
						<X>570</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>21</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205652</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205657</Id>
						<Name>p_avgGasolineConsumptionCar_kmpl</Name>
						<Description>https://www.unitedconsumers.com/blog/auto/zuinig-rijden.jsp</Description>
						<X>570</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>15</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205655</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205660</Id>
						<Name>p_gasoline_kWhpl</Name>
						<Description>https://www.joostdevree.nl/shtmls/calorische_waarde.shtml</Description>
						<X>1070</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>8.8</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205658</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205663</Id>
						<Name>p_avgDieselConsumptionCar_kWhpkm</Name>
						<X>570</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>p_diesel_kWhpl/p_avgDieselConsumptionCar_kmpl</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205661</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205666</Id>
						<Name>p_avgGasolineConsumptionCar_kWhpkm</Name>
						<X>570</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>p_gasoline_kWhpl/p_avgGasolineConsumptionCar_kmpl</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205664</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205669</Id>
						<Name>p_avgDieselConsumptionVan_kmpl</Name>
						<Description>https://www.webfleet.com/nl_nl/webfleet/blog/hoeveel-diesel-verbruikt-een-vrachtwagen-per-kilometer/

11 liter per 100 km = 9.1 km per liter.
</Description>
						<X>570</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>9.1</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205667</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205672</Id>
						<Name>p_avgDieselConsumptionVan_kWhpkm</Name>
						<X>570</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>p_diesel_kWhpl/p_avgDieselConsumptionVan_kmpl</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205670</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205675</Id>
						<Name>p_avgDieselConsumptionTruck_kmpl</Name>
						<Description>https://www.webfleet.com/nl_nl/webfleet/blog/hoeveel-diesel-verbruikt-een-vrachtwagen-per-kilometer/

--&gt; 25 - 30 - 40 liter per 100 km. = 4 - 3.33 - 2.5 km per l
Heavely dependend on load, city/highway, etc.
For now: Picking 3.33 km per l</Description>
						<X>570</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>3.33</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205673</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205678</Id>
						<Name>p_avgDieselConsumptionTruck_kWhpkm</Name>
						<X>570</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>p_diesel_kWhpl/p_avgDieselConsumptionTruck_kmpl</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205676</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205681</Id>
						<Name>p_avgCOPHeatpump</Name>
						<Description>https://www.vaillant.be/consumenten/ons-advies/blog/het-rendement-van-een-warmtepomp/

Gemiddelde COP is 4.</Description>
						<X>70</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>4</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205679</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205684</Id>
						<Name>p_avgUtilityPVPower_kWp</Name>
						<Description>FIND SOURCE!!! ????????</Description>
						<X>50</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>1</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205682</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205687</Id>
						<Name>p_ratioElectricTrucks</Name>
						<Description>Ratio of how many trucks are electric vs diesel.
???
https://nos.nl/artikel/2483604-elektrische-vrachtwagens-blijven-achter-door-complexe-serie-aan-uitdagingen --&gt; 'volgens cbs nog geen half procent.'</Description>
						<X>50</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.005</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205685</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205690</Id>
						<Name>p_avgCompanyHeatingMethod</Name>
						<Description>Source?? --&gt; Should definatly be still the case in 2024</Description>
						<X>50</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionHeatingType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_GridConnectionHeatingType.GASBURNER</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205688</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205693</Id>
						<Name>p_avgPVPower_kWpm2</Name>
						<Description>https://hallostroom.nl/zonnepanelen/opbrengst/per-m2/ --&gt; 177 W/m2
https://www.zonneplan.nl/kenniscentrum/zonnepanelen/vermogen --&gt; 212 W/m2
https://www.zonnepanelennoord.nl/vermogen-zonnepanelen/ --&gt; 215 W/m2</Description>
						<X>50</X>
						<Y>910</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.2</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205691</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205696</Id>
						<Name>p_avgRatioBatteryCapacity_v_Power</Name>
						<Description>Average ratio of battery capacity over battery power.
--&gt; If battery capacity (in kWh) is twice the battery power (in kW) --&gt; ratio = 2.</Description>
						<X>50</X>
						<Y>1030</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205694</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205699</Id>
						<Name>p_avgHydrogenConsumptionCar_kWhpkm</Name>
						<Description>https://magnuscmd.com/hydrogen-fuel-cell-vehicles-a-threat-to-the-electric-car/

--&gt; avg: 29 kWh per 100 km --&gt; 0.29 kWh/km
</Description>
						<X>570</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.29</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205697</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205702</Id>
						<Name>p_avgHydrogenConsumptionVan_kWhpkm</Name>
						<Description>https://www.huiskes-kokkeler.nl/bedrijfswagens/volkswagen-bedrijfswagens/modellen/crafter-hymotion-concept
--&gt; 1.4 kg Waterstof per 100 km = 0.014 kg/km
--&gt;  0.014 * 33.6 (p_hydrogenSpecificEnergy_kWh_kg = 0.47 kWh/kg</Description>
						<X>570</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.47</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205700</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205705</Id>
						<Name>p_avgHydrogenConsumptionTruck_kWhpkm</Name>
						<Description>https://transportenmilieu.nl/nieuwsarchief/item/hyundai-op-waterstof-voor-havi-zwitserland
--&gt; 6.6 kg Waterstof per 100 km = 0.066 kg/km
--&gt; 0.066 * 33.6 (p_hydrogenSpecificEnergy_kWh_kg = 2.22 kWh/kg</Description>
						<X>570</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2.22</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205703</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205708</Id>
						<Name>p_avgRatioRoofPotentialPV</Name>
						<Description>value for the ratio of the avg Usable Roof Area For PV fr</Description>
						<X>50</X>
						<Y>930</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205706</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205711</Id>
						<Name>p_avgEfficiencyHeatpump_fr</Name>
						<Description>Efficiency (eta_r) used to calculate the COP in the energy asset based on temperature differences. 

'0.5' comes from old code, no source found for it yet.</Description>
						<X>70</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205709</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205714</Id>
						<Name>p_avgOutputTemperatureHeatpump_degC</Name>
						<Description>The avg output temperature of a heatpump in degC. Can be set manually, as an average 60 has been taken. </Description>
						<X>70</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>60</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205712</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205717</Id>
						<Name>p_avgEfficiencyGasBurner_fr</Name>
						<Description>Average heating efficiency of a gas burner.

--&gt; SOURCE?</Description>
						<X>70</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.99</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205715</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205720</Id>
						<Name>p_avgOutputTemperatureGasBurner_degC</Name>
						<Description>Average output temperature of a gas burner unit in degC.

--&gt; Source?</Description>
						<X>70</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>90</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205718</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205723</Id>
						<Name>p_avgEfficiencyHydrogenBurner_fr</Name>
						<Description>Average heating efficiency of a hydrogen burner.

- https://h2sciencecoalition.com/blog/hydrogen-for-heating-a-comparison-with-heat-pumps-part-1/

- https://www.csrf.ac.uk/blog/hydrogen-for-heating/</Description>
						<X>70</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.90</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205721</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584205726</Id>
						<Name>p_avgOutputTemperatureHydrogenBurner_degC</Name>
						<Description>Average output temperature of a hydrogen burner unit in degC.

--&gt; Source?</Description>
						<X>70</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>90</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726584205724</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726746753360</Id>
						<Name>p_avgVehiclesPerChargePoint</Name>
						<X>50</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726746753358</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728032263201</Id>
						<Name>p_avgAnnualTravelDistanceVan_km</Name>
						<Description>??</Description>
						<X>570</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>30000</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1728032263199</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728032304301</Id>
						<Name>p_avgAnnualTravelDistanceCar_km</Name>
						<X>570</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1728032304299</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728032305440</Id>
						<Name>p_avgAnnualTravelDistanceTruck_km</Name>
						<X>570</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1728032305438</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728034204646</Id>
						<Name>p_avgFullLoadHoursPV_hr</Name>
						<Description>Parameter used to estimate the total solar production in a year in a function like:
p_avgFullLoadHoursPV_hr * kWp_of_PV_panels = XXX kWh pv production in a year.</Description>
						<X>50</X>
						<Y>950</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>920</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1728034204644</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728390983761</Id>
						<Name>p_avgCompanyElectricityConsumption_kWhpm2</Name>
						<Description>https://www.odyssee-mure.eu/publications/efficiency-by-sector/services/offices-specific-energy-and-electricity-consumption.html

--&gt; 188 kWh/m2 for offices in NL</Description>
						<X>50</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>188</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1728390983759</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728391035656</Id>
						<Name>p_avgCompanyGasConsumption_m3pm2</Name>
						<Description>https://publications.tno.nl/publication/34629408/3xJn98/e16056.pdf -&gt; page 28

9 m3 p m2 for label A
12 m3 p m2 for label B
to 18 m3 p m2 for label G

--&gt; take 7 for now.</Description>
						<X>50</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>7</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1728391035654</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728394646404</Id>
						<Name>p_avgCompanyHeatConsumption_kWhpm2</Name>
						<Description>https://www.wearepossible.org/parks-toolkit/5-investigating-heat-demand

--&gt; estimated benchmark 100 kWh/m2</Description>
						<X>50</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>100</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1728394646402</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1733155392379</Id>
						<Name>p_avgSolarFieldPower_kWppha</Name>
						<Description>1000</Description>
						<X>50</X>
						<Y>970</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>1000</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1733155392377</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1745316053417</Id>
						<Name>p_avgEfficiencyCHP_thermal_fr</Name>
						<Description>50% -&gt; blijkt uit aangeleverde data door "kas als energiebron". (https://www.kasalsenergiebron.nl/)
Ook te vinden hier: https://www.kasalsenergiebron.nl/content/nieuws/2023/E22001_Rapport_WKK_Barometer_2023.pdf</Description>
						<X>70</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745316053415</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1745316110677</Id>
						<Name>p_avgEfficiencyCHP_electric_fr</Name>
						<Description>42% -&gt; blijkt uit aangeleverde data door "kas als energiebron". (https://www.kasalsenergiebron.nl/)
Ook te vinden hier: https://www.kasalsenergiebron.nl/content/nieuws/2023/E22001_Rapport_WKK_Barometer_2023.pdf</Description>
						<X>70</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.42</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745316110675</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1745326622582</Id>
						<Name>p_avgOutputTemperatureCHP_degC</Name>
						<Description>Average output temperature of a hydrogen burner unit in degC.

--&gt; Source?</Description>
						<X>70</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>90</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745326622580</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1747314895126</Id>
						<Name>p_avgEfficiencyDistrictHeatingDeliverySet_fr</Name>
						<Description>Average heating efficiency of a district heating delivery set
</Description>
						<X>70</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.99</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1747314895124</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1747314895129</Id>
						<Name>p_avgOutputTemperatureDistrictHeatingDeliverySet_degC</Name>
						<Description>Average output temperature of a districtheating delivery set in degC.

70 -&gt; https://www.nplw.nl/warmtenet/warmtetechnieken/middentemperatuur-warmtenet</Description>
						<X>70</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>70</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1747314895127</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749653366667</Id>
						<Name>p_v2gProbability</Name>
						<Description>SOURCE!?!?!?!</Description>
						<X>570</X>
						<Y>125</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.2</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1749653366665</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1750246849611</Id>
						<Name>p_v1gProbability</Name>
						<Description>SOURCE!?!?!?!</Description>
						<X>570</X>
						<Y>105</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.8</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1750246849609</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1750341289733</Id>
						<Name>p_avgEVsPerPublicCharger</Name>
						<Description>TODO: Determine this value</Description>
						<X>570</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1750341289731</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751893521012</Id>
						<Name>p_avgPTPower_kWpm2</Name>
						<X>530</X>
						<Y>930</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751893521010</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751893540583</Id>
						<Name>p_avgHeatBufferWaterVolumePerHPPower_m3pkW</Name>
						<Description>https://www.kachelplaats.nl/buffervaten-cv-houtkachels/ -&gt; 25 liter per kW warmtepomp vermogen = 0.025 m3/kW</Description>
						<X>530</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.025</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751893540581</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751893810778</Id>
						<Name>p_avgHeatBufferWaterVolumePerPTSurface_m3pm2</Name>
						<Description>https://www.kachelplaats.nl/buffervaten-cv-houtkachels/ -&gt; 50 liter per m2 zonnecollector = 0.050 m3/m2</Description>
						<X>530</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.05</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751893810776</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751896032002</Id>
						<Name>p_waterHeatCapacity_JpkgK</Name>
						<Description>https://www.engineeringtoolbox.com/water-thermal-properties-d_162.html -&gt; 4185 J/kg K bij 20 *C

-&gt; Verschilt eigenlijk met temperatuur, weer net iets lager bij 40 graden (4180), weer 4185 bij 60*C en net iets hoger bij 80 graden. (4197 bij 80 *C).

Voor nu gekozen voor 4185.
</Description>
						<X>1070</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>4185</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751896032000</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751905820546</Id>
						<Name>p_waterDensity_kgpm3</Name>
						<Description>https://www.sigmaaldrich.com/NL/en/substance/densitystandard998kgm318027732185 --&gt; 998 kg/m3</Description>
						<X>1070</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>998</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751905820544</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751906112800</Id>
						<Name>p_avgMaxHeatBufferTemperature_degC</Name>
						<Description>???</Description>
						<X>530</X>
						<Y>990</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>85</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751906112798</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1751906126857</Id>
						<Name>p_avgMinHeatBufferTemperature_degC</Name>
						<X>530</X>
						<Y>1010</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>60</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1751906126855</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205530</Id>
						<Name>f_setAVGC_data</Name>
						<X>30</X>
						<Y>50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>J_AVGC_data dataAVGC = new J_AVGC_data();&#xD;
zero_Loader.energyModel.avgc_data = dataAVGC;&#xD;
&#xD;
dataAVGC.p_avgHouseGasConsumption_m3_yr = p_avgHouseGasConsumption_m3_yr;&#xD;
dataAVGC.p_avgHouseElectricityConsumption_kWh_yr = p_avgHouseElectricityConsumption_kWh_yr;&#xD;
dataAVGC.p_avgEVMaxChargePowerVan_kW = p_avgEVMaxChargePowerVan_kW;&#xD;
dataAVGC.p_avgHouseConnectionCapacity_kW = p_avgHouseConnectionCapacity_kW;&#xD;
dataAVGC.p_avgHouseHeatingMethod = p_avgHouseHeatingMethod;&#xD;
dataAVGC.p_ratioEVHousePersonalCars = p_shareOfElectricVehicleOwnership;&#xD;
dataAVGC.p_avgEVMaxChargePowerCar_kW = p_avgEVMaxChargePowerCar_kW;&#xD;
dataAVGC.p_avgEVMaxChargePowerTruck_kW = p_avgEVMaxChargePowerTruck_kW;&#xD;
dataAVGC.p_avgEVStorageCar_kWh = p_avgEVStorageCar_kWh;&#xD;
dataAVGC.p_avgEVStorageVan_kWh = p_avgEVStorageVan_kWh;&#xD;
dataAVGC.p_avgHousePVInstallationPower_kWp = p_avgHousePVInstallationPower_kWp;&#xD;
dataAVGC.p_avgEVStorageTruck_kWh = p_avgEVStorageTruck_kWh;&#xD;
dataAVGC.p_ratioHouseInstalledPV = p_ratioHouseInstalledPV;&#xD;
dataAVGC.p_gas_kWhpm3 = p_gas_kWhpm3;&#xD;
dataAVGC.p_diesel_kWhpl = p_diesel_kWhpl;&#xD;
dataAVGC.p_gasoline_kWhpl = p_gasoline_kWhpl;&#xD;
dataAVGC.p_waterHeatCapacity_JpkgK = p_waterHeatCapacity_JpkgK;&#xD;
dataAVGC.p_waterDensity_kgpm3 = p_waterDensity_kgpm3;&#xD;
dataAVGC.p_avgUtilityHeatingMethod = p_avgUtilityHeatingMethod;&#xD;
dataAVGC.p_avgUtilityConnectionCapacity_kW = p_avgUtilityConnectionCapacity_kW;&#xD;
dataAVGC.p_avgUtilityPVPower_kWp = p_avgUtilityPVPower_kWp;&#xD;
dataAVGC.p_ratioElectricTrucks = p_ratioElectricTrucks;&#xD;
dataAVGC.p_avgCompanyHeatingMethod = p_avgCompanyHeatingMethod;&#xD;
dataAVGC.p_avgEVEnergyConsumptionCar_kWhpkm = p_avgEVEnergyConsumptionCar_kWhpkm;&#xD;
dataAVGC.p_avgEVEnergyConsumptionVan_kWhpkm = p_avgEVEnergyConsumptionVan_kWhpkm;&#xD;
dataAVGC.p_avgEVEnergyConsumptionTruck_kWhpkm = p_avgEVEnergyConsumptionTruck_kWhpkm;&#xD;
dataAVGC.p_hydrogenEnergyDensity_kWh_Nm3 = p_hydrogenEnergyDensity_kWh_Nm3;&#xD;
dataAVGC.p_avgDieselConsumptionCar_kmpl = p_avgDieselConsumptionCar_kmpl;&#xD;
dataAVGC.p_avgGasolineConsumptionCar_kmpl = p_avgGasolineConsumptionCar_kmpl;&#xD;
dataAVGC.p_hydrogenSpecificEnergy_kWh_kg = p_hydrogenSpecificEnergy_kWh_kg;&#xD;
dataAVGC.p_hydrogenDensity_kg_Nm3 = p_hydrogenDensity_kg_Nm3;&#xD;
dataAVGC.p_oxygenDensity_kg_Nm3 = p_oxygenDensity_kg_Nm3;&#xD;
dataAVGC.p_avgCOPHeatpump = p_avgCOPHeatpump;&#xD;
dataAVGC.p_avgEfficiencyHeatpump = p_avgEfficiencyHeatpump_fr;&#xD;
dataAVGC.p_avgDieselConsumptionCar_kWhpkm = p_avgDieselConsumptionCar_kWhpkm;&#xD;
dataAVGC.p_oxygenProduction_kgO2pkgH2 = p_oxygenProduction_kgO2pkgH2;&#xD;
dataAVGC.p_avgGasolineConsumptionCar_kWhpkm = p_avgGasolineConsumptionCar_kWhpkm;&#xD;
dataAVGC.p_avgDieselConsumptionVan_kmpl = p_avgDieselConsumptionVan_kmpl;&#xD;
dataAVGC.p_avgDieselConsumptionVan_kWhpkm = p_avgDieselConsumptionVan_kWhpkm;&#xD;
dataAVGC.p_avgDieselConsumptionTruck_kmpl = p_avgDieselConsumptionTruck_kmpl;&#xD;
dataAVGC.p_avgDieselConsumptionTruck_kWhpkm = p_avgDieselConsumptionTruck_kWhpkm;&#xD;
dataAVGC.p_avgOutputTemperatureHeatpump_degC = p_avgOutputTemperatureHeatpump_degC;&#xD;
dataAVGC.p_avgHydrogenConsumptionCar_kWhpkm = p_avgHydrogenConsumptionCar_kWhpkm;&#xD;
dataAVGC.p_avgEfficiencyGasBurner = p_avgEfficiencyGasBurner_fr;&#xD;
dataAVGC.p_avgHydrogenConsumptionVan_kWhpkm = p_avgHydrogenConsumptionVan_kWhpkm;&#xD;
dataAVGC.p_avgHydrogenConsumptionTruck_kWhpkm = p_avgHydrogenConsumptionTruck_kWhpkm;&#xD;
dataAVGC.p_avgOutputTemperatureGasBurner_degC = p_avgOutputTemperatureGasBurner_degC;&#xD;
dataAVGC.p_avgEfficiencyHydrogenBurner = p_avgEfficiencyHydrogenBurner_fr;&#xD;
dataAVGC.p_avgOutputTemperatureHydrogenBurner_degC = p_avgOutputTemperatureHydrogenBurner_degC;&#xD;
dataAVGC.p_avgPVPower_kWpm2= p_avgPVPower_kWpm2;&#xD;
dataAVGC.p_avgRatioRoofPotentialPV = p_avgRatioRoofPotentialPV;&#xD;
dataAVGC.p_avgRatioBatteryCapacity_v_Power = p_avgRatioBatteryCapacity_v_Power;&#xD;
dataAVGC.p_avgSolarFieldPower_kWppha = p_avgSolarFieldPower_kWppha;&#xD;
dataAVGC.p_avgEfficiencyCHP_thermal_fr = p_avgEfficiencyCHP_thermal_fr;&#xD;
dataAVGC.p_avgEfficiencyCHP_electric_fr = p_avgEfficiencyCHP_thermal_fr;&#xD;
dataAVGC.p_avgOutputTemperatureCHP_degC = p_avgEfficiencyCHP_thermal_fr;&#xD;
dataAVGC.p_avgEfficiencyDistrictHeatingDeliverySet_fr = p_avgEfficiencyDistrictHeatingDeliverySet_fr;&#xD;
dataAVGC.p_avgOutputTemperatureDistrictHeatingDeliverySet_degC = p_avgOutputTemperatureDistrictHeatingDeliverySet_degC;&#xD;
dataAVGC.p_v1gProbability = p_v1gProbability;&#xD;
dataAVGC.p_v2gProbability = p_v2gProbability;&#xD;
dataAVGC.p_avgEVsPerPublicCharger = p_avgEVsPerPublicCharger;&#xD;
dataAVGC.p_avgPTPower_kWpm2 = p_avgPTPower_kWpm2;&#xD;
dataAVGC.p_avgMaxHeatBufferTemperature_degC = p_avgMaxHeatBufferTemperature_degC;&#xD;
dataAVGC.p_avgMinHeatBufferTemperature_degC = p_avgMinHeatBufferTemperature_degC;&#xD;
dataAVGC.p_avgHeatBufferWaterVolumePerPTSurface_m3pm2 = p_avgHeatBufferWaterVolumePerPTSurface_m3pm2;&#xD;
dataAVGC.p_avgHeatBufferWaterVolumePerHPPower_m3pkW = p_avgHeatBufferWaterVolumePerHPPower_m3pkW;</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1726584205728</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1726584830548</Id>
						<Name>zero_Loader</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Loader</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1726584205534</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1726584205536</Id>
								<Name>rect_constants</Name>
								<X>958.816</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>958.0782918149466</Width>
								<Height>1100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1726584205538</Id>
								<Name>rect_avg</Name>
								<X>0.737</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>958.0782918149466</Width>
								<Height>1100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205540</Id>
								<Name>txt_houses</Name>
								<X>40</X>
								<Y>100</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Average values for houses</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205542</Id>
								<Name>txt_avgCompanies</Name>
								<X>40</X>
								<Y>280</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Average values for companies/utilities</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205544</Id>
								<Name>txt_avgEV</Name>
								<X>560</X>
								<Y>75</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Average values for Electric Vehicles</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205546</Id>
								<Name>text3</Name>
								<X>1440</X>
								<Y>40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Constants</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>24</Size>
									<Style>1</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1726584205548</Id>
								<Name>text4</Name>
								<X>1060</X>
								<Y>200</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Energy conversion constants</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205550</Id>
								<Name>text5</Name>
								<X>480</X>
								<Y>40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Averages</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>24</Size>
									<Style>1</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205552</Id>
								<Name>rect_hydrogenC</Name>
								<X>1560</X>
								<Y>100</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16711681</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>340</Width>
								<Height>200</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205554</Id>
								<Name>txt_hydrogenC</Name>
								<X>1580</X>
								<Y>120</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Hydrogen constants</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205556</Id>
								<Name>txt_avgFossil</Name>
								<X>560</X>
								<Y>360</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Average values for Fossil fueled vehicles</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205558</Id>
								<Name>txt_Heatassets</Name>
								<X>40</X>
								<Y>470</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heat assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205560</Id>
								<Name>txt_avgPV</Name>
								<X>40</X>
								<Y>880</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>PV panels</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205562</Id>
								<Name>txt_avgBat</Name>
								<X>40</X>
								<Y>1005</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Batteries</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205564</Id>
								<Name>txt_avgFCV</Name>
								<X>560</X>
								<Y>610</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Average values for Hydrogen vehicles</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205566</Id>
								<Name>txt_heatpumps</Name>
								<X>60</X>
								<Y>490</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heatpumps</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205568</Id>
								<Name>txt_gasburners</Name>
								<X>60</X>
								<Y>580</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Gasburners</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205570</Id>
								<Name>txt_hydrogenburners</Name>
								<X>60</X>
								<Y>650</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Hydrogenburners</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205572</Id>
								<Name>rect_sendToEngine</Name>
								<X>10</X>
								<Y>10</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-65536</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>170</Width>
								<Height>60</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205574</Id>
								<Name>txt_valuesToEngine</Name>
								<X>20</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Send values to Engine</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205576</Id>
								<Name>txt_timeC</Name>
								<X>1060</X>
								<Y>120</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Time constants</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726743791200</Id>
								<Name>text</Name>
								<X>40</X>
								<Y>1050</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Chargingcentres</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1728032240347</Id>
								<Name>txt_avgTravelDistances</Name>
								<X>560</X>
								<Y>700</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Average travel distances per vehicle type</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1745316061345</Id>
								<Name>txt_CHP</Name>
								<X>60</X>
								<Y>720</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>CHP</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1747314897311</Id>
								<Name>txt_districtHeatingDeliverySet</Name>
								<X>60</X>
								<Y>810</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>District Heating delivery set</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1751906160194</Id>
								<Name>txt_avgHeatBuffer</Name>
								<X>520</X>
								<Y>960</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heat Buffer</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1751906173848</Id>
								<Name>txt_avgPT</Name>
								<X>520</X>
								<Y>900</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>PT panels</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1709049506453</Id>
				<Name>tabArea</Name>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1709049506461</Id>
					<Name>1709049506461</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089980</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1709049506456</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1709049506460</CurrentLevel>
				<ConnectionsId>1709049506454</ConnectionsId>
				<AgentLinks>
					<AgentLink>
						<Id>1709049506454</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<Presentation>
					<Level>
						<Id>1709049506460</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1722253463895</Id>
				<Name>tabEHub</Name>
				<AdditionalClassCode>public ShapeGroup getGroupHubSliders() {&#xD;
	return this.gr_hubSliders;&#xD;
}&#xD;
&#xD;
public ShapeCheckBox getCb_powerChargingEVs() {&#xD;
	return this.cb_powerChargingEVs;&#xD;
}&#xD;
&#xD;
public ShapeCheckBox getCb_spreadChargingEVs() {&#xD;
	return this.cb_spreadChargingEVs;&#xD;
}&#xD;
&#xD;
public ShapeCheckBox getCb_curtailment() {&#xD;
	return this.cb_curtailment;&#xD;
}&#xD;
&#xD;
public ShapeButton getButton_remove_nfato() {&#xD;
	return this.button_remove_nfato;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSl_collectiveBattery_MWh() {&#xD;
	return this.sl_collectiveBattery_MWh;&#xD;
}</AdditionalClassCode>
				<ExtendsReference>
					<PackageName>zerointerfaceloader</PackageName>
					<ClassName>tabArea</ClassName>
				</ExtendsReference>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1722253463901</Id>
					<Name>1722253463901</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089979</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1722253463898</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1722253463902</CurrentLevel>
				<ConnectionsId>1722253463896</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1722256365490</Id>
						<Name>b_NFATOListener</Name>
						<X>740</X>
						<Y>915</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722256365499</Id>
						<Name>v_nfatoFirstGC</Name>
						<X>740</X>
						<Y>855</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>GridConnection</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722256365507</Id>
						<Name>v_nfatoSecondGC</Name>
						<X>740</X>
						<Y>875</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>GridConnection</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722256365515</Id>
						<Name>b_nfatoWeekendDistinction</Name>
						<X>740</X>
						<Y>895</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256335789</Id>
						<Name>f_setGridBatteries</Name>
						<Description>Function that takes a capacity in MWh as a parameter and sets the first GCGridBattery to this capacity, with the default ratio of storage to electric capacity from the AVGC data.</Description>
						<X>1100</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>capacity_MWh</Name>
							<Type>double</Type>
						</Parameter>
						<Body>// TODO: make this work nicer with the new pause function (when setting capacity to 0 pause again?)&#xD;
&#xD;
if ( zero_Interface.energyModel.GridBatteries.size() &gt; 0 ){	&#xD;
	GCGridBattery GC = findFirst(zero_Interface.energyModel.GridBatteries, GB -&gt; GB.p_isSliderGC);&#xD;
	if(GC == null){&#xD;
		traceln("WARNING: no specified slider grid battery in the model: random grid battery selected");&#xD;
		GC = zero_Interface.energyModel.GridBatteries.get(0);&#xD;
	}&#xD;
&#xD;
	if (!GC.v_isActive) {&#xD;
		GC.f_setActive(true);&#xD;
	}&#xD;
	GC.p_batteryAsset.setStorageCapacity_kWh(1000*capacity_MWh);&#xD;
	double capacityElectric_kW = 1000*capacity_MWh / zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;&#xD;
	GC.p_batteryAsset.setCapacityElectric_kW(capacityElectric_kW);&#xD;
	GC.v_liveConnectionMetaData.physicalCapacity_kW = capacityElectric_kW;&#xD;
	GC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = capacityElectric_kW;&#xD;
	GC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = capacityElectric_kW;&#xD;
}&#xD;
else {&#xD;
	throw new IllegalStateException("Model does not contain any GCGridBattery agent");&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1722256365452</Id>
						<Name>f_setNFATO</Name>
						<Description>Sets the relevant parameters in the engine for the NFATO. The first selected GC will receive capacity from the second GC.</Description>
						<X>740</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>weekCapacities</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>weekendCapacities</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>GridConnection gc1 = v_nfatoFirstGC;&#xD;
GridConnection gc2 = v_nfatoSecondGC;&#xD;
&#xD;
// Reset the GC Capacities if they already had a NF-ATO&#xD;
gc1.f_nfatoSetConnectionCapacity(true);&#xD;
gc2.f_nfatoSetConnectionCapacity(true);&#xD;
&#xD;
switch (rb_deliveryOrFeedin.getValue()) {&#xD;
	case 0: // Delivery&#xD;
		// Set the variables of the GCs&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			gc1.v_nfatoWeekDeliveryCapacity_kW[i] += weekCapacities[i];&#xD;
			gc2.v_nfatoWeekDeliveryCapacity_kW[i] += -weekCapacities[i];&#xD;
			gc1.v_nfatoWeekendDeliveryCapacity_kW[i] += weekendCapacities[i];&#xD;
			gc2.v_nfatoWeekendDeliveryCapacity_kW[i] += -weekendCapacities[i];&#xD;
		}&#xD;
		break;&#xD;
		&#xD;
	case 1: // Feed In&#xD;
		// Set the variables of the GCs&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			gc1.v_nfatoWeekFeedinCapacity_kW[i] += weekCapacities[i];&#xD;
			gc2.v_nfatoWeekFeedinCapacity_kW[i] += -weekCapacities[i];&#xD;
			gc1.v_nfatoWeekendFeedinCapacity_kW[i] += weekendCapacities[i];&#xD;
			gc2.v_nfatoWeekendFeedinCapacity_kW[i] += -weekendCapacities[i];&#xD;
		}&#xD;
		break;&#xD;
		&#xD;
	case 2: // Both&#xD;
		// Set the variables of the GCs&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			gc1.v_nfatoWeekDeliveryCapacity_kW[i] += weekCapacities[i];&#xD;
			gc2.v_nfatoWeekDeliveryCapacity_kW[i] += -weekCapacities[i];&#xD;
			gc1.v_nfatoWeekendDeliveryCapacity_kW[i] += weekendCapacities[i];&#xD;
			gc2.v_nfatoWeekendDeliveryCapacity_kW[i] += -weekendCapacities[i];&#xD;
			&#xD;
			gc1.v_nfatoWeekFeedinCapacity_kW[i] += weekCapacities[i];&#xD;
			gc2.v_nfatoWeekFeedinCapacity_kW[i] += -weekCapacities[i];&#xD;
			gc1.v_nfatoWeekendFeedinCapacity_kW[i] += weekendCapacities[i];&#xD;
			gc2.v_nfatoWeekendFeedinCapacity_kW[i] += -weekendCapacities[i];&#xD;
		}	&#xD;
		break;&#xD;
		&#xD;
	default:&#xD;
		throw new IllegalStateException("Invalid Setting in rb_deliveryOrFeedin");&#xD;
}&#xD;
&#xD;
// Update the Connection Capacity if it is needed at the current time&#xD;
gc1.f_nfatoSetConnectionCapacity(false);&#xD;
gc2.f_nfatoSetConnectionCapacity(false);&#xD;
&#xD;
gc1.v_enableNFato = true;&#xD;
gc2.v_enableNFato = true;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256365459</Id>
						<Name>f_checkGISRegion</Name>
						<Description>When b_NFATOListener is true checks wether the selected coordinates are a valid GC for the NFATO. If so saves the GC and updates the text fields</Description>
						<X>740</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>clickx</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>clicky</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//Check if click was on Building&#xD;
for ( GIS_Building b : zero_Interface.energyModel.pop_GIS_Buildings ){&#xD;
	if( b.gisRegion != null &amp;&amp; b.gisRegion.contains(clickx, clicky) ){&#xD;
		if (b.gisRegion.isVisible()) {&#xD;
			GridConnection GC = b.c_containedGridConnections.get(0);&#xD;
			if (GC != null &amp;&amp; GC != v_nfatoFirstGC) {&#xD;
				// found a valid GC&#xD;
				// Check if it is the first GC&#xD;
				if (v_nfatoFirstGC == null) {&#xD;
					t_nfatoFirstBuilding.setText(GC.p_ownerID + " zal ontvangen");&#xD;
					t_nfatoSecondBuilding.setText("Klik op een gebouw dat zijn capaciteit gaat afstaan");&#xD;
					v_nfatoFirstGC = GC;&#xD;
					//for (GIS_Building b : GC.c_connectedBuildings) {&#xD;
						//b.gisRegion.setFillColor(v_selectionColorAddBuildings);&#xD;
					//}&#xD;
				}&#xD;
				else {&#xD;
					v_nfatoSecondGC = GC;&#xD;
					t_nfatoSecondBuilding.setText(GC.p_ownerID + " zal leveren");&#xD;
					//for (GIS_Building b : GC.c_connectedBuildings) {&#xD;
						//b.gisRegion.setFillColor(v_selectionColorAddBuildings);&#xD;
					//}&#xD;
					// We found two buildings, return to the default clicking functionality&#xD;
					b_NFATOListener = false;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1722256365466</Id>
						<Name>f_checkNFATO</Name>
						<Description>Checks if the current NFATO settings could generate a valid contract. Returns true if NFATO is possible.</Description>
						<X>740</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>weekCapacities</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>weekendCapacities</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>GridConnection gc1 = v_nfatoFirstGC;&#xD;
GridConnection gc2 = v_nfatoSecondGC;&#xD;
&#xD;
if (gc1 == null || gc2 == null || gc1 == gc2) {&#xD;
	throw new IllegalStateException("Invalid Non-Firm ATO Settings, Please select two gridconnections");&#xD;
}&#xD;
&#xD;
double[] weekTestDelivery = new double[24];&#xD;
double[] weekendTestDelivery = new double[24];&#xD;
double[] weekTestFeedin = new double[24];&#xD;
double[] weekendTestFeedin = new double[24];&#xD;
&#xD;
double maxDeliveryCapacity_kW;&#xD;
double maxFeedinCapacity_kW;&#xD;
		&#xD;
switch (rb_deliveryOrFeedin.getValue()) {&#xD;
	case 0: // Delivery&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			weekTestDelivery[i] = weekCapacities[i] - gc2.v_nfatoWeekDeliveryCapacity_kW[i];&#xD;
			weekendTestDelivery[i] = weekendCapacities[i] - gc2.v_nfatoWeekendDeliveryCapacity_kW[i];&#xD;
		}&#xD;
		maxDeliveryCapacity_kW = max(max(weekTestDelivery), max(weekendTestDelivery));&#xD;
		// Reset the GC Capacity in case they already had a NF-ATO&#xD;
		gc2.f_nfatoSetConnectionCapacity(true);&#xD;
		// Check if gc2 has enough capacity with the original connection capacity&#xD;
		if ( maxDeliveryCapacity_kW &gt; gc2.v_liveConnectionMetaData.contractedDeliveryCapacity_kW ) {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a delivery capacity of " + maxDeliveryCapacity_kW + " kW available");&#xD;
		}&#xD;
		else {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
	case 1: // Feed In&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			weekTestFeedin[i] = weekCapacities[i] - gc2.v_nfatoWeekFeedinCapacity_kW[i];&#xD;
			weekendTestFeedin[i] = weekendCapacities[i] - gc2.v_nfatoWeekendFeedinCapacity_kW[i];&#xD;
		}&#xD;
		maxFeedinCapacity_kW = max(max(weekTestFeedin), max(weekendTestFeedin));&#xD;
		// Reset the GC Capacity in case they already had a NF-ATO&#xD;
		gc2.f_nfatoSetConnectionCapacity(true);&#xD;
		// Check if gc2 has enough capacity with the original connection capacity&#xD;
		if ( maxFeedinCapacity_kW &gt; gc2.v_liveConnectionMetaData.contractedFeedinCapacity_kW ) {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a feed in capacity of " + maxFeedinCapacity_kW + " kW available");&#xD;
		}&#xD;
		else {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
	case 2: // Both&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			weekTestDelivery[i] = weekCapacities[i] - gc2.v_nfatoWeekDeliveryCapacity_kW[i];&#xD;
			weekendTestDelivery[i] = weekendCapacities[i] - gc2.v_nfatoWeekendDeliveryCapacity_kW[i];&#xD;
		}&#xD;
		for (int i = 0; i &lt; 24; i++) {&#xD;
			weekTestFeedin[i] = weekCapacities[i] - gc2.v_nfatoWeekFeedinCapacity_kW[i];&#xD;
			weekendTestFeedin[i] = weekendCapacities[i] - gc2.v_nfatoWeekendFeedinCapacity_kW[i];&#xD;
		}&#xD;
		&#xD;
		maxDeliveryCapacity_kW = max(max(weekTestDelivery), max(weekendTestDelivery));&#xD;
		maxFeedinCapacity_kW = max(max(weekTestFeedin), max(weekendTestFeedin));&#xD;
		// Reset the GC Capacity in case they already had a NF-ATO&#xD;
		gc2.f_nfatoSetConnectionCapacity(true);&#xD;
		// Check if gc2 has enough capacity with the original connection capacity&#xD;
		if ( maxDeliveryCapacity_kW &gt; gc2.v_liveConnectionMetaData.contractedDeliveryCapacity_kW ) {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a delivery capacity of " + maxDeliveryCapacity_kW + " kW available");&#xD;
		}&#xD;
		else if ( maxFeedinCapacity_kW &gt; gc2.v_liveConnectionMetaData.contractedFeedinCapacity_kW ) {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			throw new IllegalStateException("Invalid Non-Firm ATO Settings, " + gc2.p_ownerID + " does not have a feed in capacity of " + maxFeedinCapacity_kW + " kW available");&#xD;
		}&#xD;
		else {&#xD;
			// Restore previous NF-ATO&#xD;
			gc2.f_nfatoSetConnectionCapacity(false);&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
	default:&#xD;
		throw new IllegalStateException("Invalid Setting in rb_deliveryOrFeedin");&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double[][]</ReturnType>
						<Id>1722256365474</Id>
						<Name>f_constructNFATOArrays</Name>
						<Description>Uses the NFATO slider values to construct two arrays of the change in capacity at every hour. One array for weekdays, one for weekends</Description>
						<X>740</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Construct arrays from slider values&#xD;
// Week&#xD;
int weekStart_h = (int) sl_nfatoWeekStartTime.getValue();&#xD;
int weekEnd_h = (int) sl_nfatoWeekEndTime.getValue();&#xD;
int weekCapacity_kW = (int) sl_nfatoWeekCapacity.getValue();&#xD;
&#xD;
double[] weekCapacities = new double[24];&#xD;
double[] weekendCapacities = new double[24];&#xD;
&#xD;
if (weekStart_h &lt; weekEnd_h) {&#xD;
	for (int i = 0; i &lt; weekStart_h; i++) {&#xD;
		weekCapacities[i] = 0;&#xD;
	}&#xD;
	for (int j = weekStart_h; j &lt; weekEnd_h; j ++) {&#xD;
		weekCapacities[j] = weekCapacity_kW;&#xD;
	}&#xD;
	for (int k = weekEnd_h; k &lt; 24; k ++) {&#xD;
		weekCapacities[k] = 0;&#xD;
	}&#xD;
}&#xD;
else { // If the start time is higher than the end time we share capacity at night&#xD;
	for (int i = 0; i &lt; weekEnd_h; i++) {&#xD;
		weekCapacities[i] = weekCapacity_kW;&#xD;
	}&#xD;
	for (int j = weekEnd_h; j &lt; weekStart_h ; j ++) {&#xD;
		weekCapacities[j] = 0;&#xD;
	}&#xD;
	for (int k = weekStart_h; k &lt; 24; k ++) {&#xD;
		weekCapacities[k] = weekCapacity_kW;&#xD;
	}&#xD;
}&#xD;
&#xD;
if (b_nfatoWeekendDistinction) {&#xD;
	// repeat above code for weekend&#xD;
	int weekendStart_h = (int) sl_nfatoWeekendStartTime.getValue();&#xD;
	int weekendEnd_h = (int) sl_nfatoWeekendEndTime.getValue();&#xD;
	int weekendCapacity_kW = (int) sl_nfatoWeekendCapacity.getValue();&#xD;
	&#xD;
	&#xD;
	if (weekendStart_h &lt; weekendEnd_h) {&#xD;
		for (int i = 0; i &lt; weekendStart_h; i++) {&#xD;
			weekendCapacities[i] = 0;&#xD;
		}&#xD;
		for (int j = weekendStart_h; j &lt; weekendEnd_h; j ++) {&#xD;
			weekendCapacities[j] = weekendCapacity_kW;&#xD;
		}&#xD;
		for (int k = weekendEnd_h; k &lt; 24; k ++) {&#xD;
			weekendCapacities[k] = 0;&#xD;
		}&#xD;
	}&#xD;
	else { // If the start time is higher than the end time we share capacity at night&#xD;
		for (int i = 0; i &lt; weekendEnd_h; i++) {&#xD;
			weekendCapacities[i] = weekendCapacity_kW;&#xD;
		}&#xD;
		for (int j = weekendEnd_h; j &lt; weekendStart_h; j ++) {&#xD;
			weekendCapacities[j] = 0;&#xD;
		}&#xD;
		for (int k = weekendStart_h; k &lt; 24; k ++) {&#xD;
			weekendCapacities[k] = weekendCapacity_kW;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// no distinction means the settings are the same during the weekend&#xD;
	weekendCapacities = weekCapacities;&#xD;
}&#xD;
&#xD;
double[][] arr = {weekCapacities, weekendCapacities};&#xD;
return arr;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256365483</Id>
						<Name>f_resetNFATOSettings</Name>
						<Description>Resets the group of NFATO Settings after a contract is added or canceled.</Description>
						<X>740</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>t_nfatoFirstBuilding.setText("Klik op een gebouw dat capaciteit gaat ontvangen");&#xD;
t_nfatoSecondBuilding.setText("");&#xD;
v_nfatoFirstGC = null;&#xD;
v_nfatoSecondGC = null;&#xD;
b_NFATOListener = false;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256998182</Id>
						<Name>f_setTab</Name>
						<Description>Function that ensures the correct tab is visible</Description>
						<X>480</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>selectedTabType</Name>
							<Type>EnergyDemandTab</Type>
						</Parameter>
						<Body>if (selectedTabType == EnergyDemandTab.NFATO) {&#xD;
	gr_nfatoSettings.setVisible(true);&#xD;
	gr_hubSliders.setVisible(false);&#xD;
}&#xD;
else {&#xD;
	gr_nfatoSettings.setVisible(false);&#xD;
	gr_hubSliders.setVisible(true);&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1722253463896</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1722253479511</Id>
						<Name>uI_Tabs</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Tabs</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
					<ContainerLink>
						<Id>1722253479513</Id>
						<Name>zero_Interface</Name>
						<X>150</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1722253463902</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1722344806530</Id>
								<Name>rect_generalFunctions</Name>
								<X>450</X>
								<Y>650</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>200</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1722344586686</Id>
								<Name>rect_nfatoFunctions</Name>
								<X>700</X>
								<Y>650</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16711936</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>300</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Group>
								<Id>1722253487925</Id>
								<Name>gr_hubSliders</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722253487927</Id>
										<Name>rect_hubSliders</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-3736634</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253487935</Id>
										<Name>cb_spreadChargingEVs</Name>
										<X>260</X>
										<Y>33</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="40" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (cb_spreadChargingEVs.isSelected()) {
	cb_powerChargingEVs.setSelected(false);
	zero_Interface.energyModel.f_getActiveGridConnections().forEach(x -&gt; x.p_chargingAttitudeVehicles = OL_ChargingAttitude.MAX_SPREAD);
} else {
	for(GridConnection GC : zero_Interface.energyModel.f_getActiveGridConnections()){
		if(GC instanceof GCPublicCharger){
			//Leave it on basic setting (MAX_SPREAD)
		}
		else{
			GC.p_chargingAttitudeVehicles = OL_ChargingAttitude.SIMPLE;
		}
	}
	
}


//Update variable to change to custom scenario
if(!zero_Interface.b_runningMainInterfaceScenarios){
	zero_Interface.b_changeToCustomScenario = true;
}

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText/>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722253487937</Id>
										<Name>t_collectiveBatteries1</Name>
										<X>220</X>
										<Y>100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_collectiveBattery_MWh.getIntValue() + " MWh"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Text>
										<Id>1722253487939</Id>
										<Name>t_spreadChargingEVsDescription</Name>
										<X>15</X>
										<Y>40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Slim laden</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253487941</Id>
										<Name>sl_collectiveBattery_MWh</Name>
										<X>255</X>
										<Y>95</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setGridBatteries(sl_collectiveBattery_MWh.getValue());

//Update variable to change to custom scenario
if(!zero_Interface.b_runningMainInterfaceScenarios){
	zero_Interface.b_changeToCustomScenario = true;
}

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>50</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722253487943</Id>
										<Name>t_curtailmentDescription</Name>
										<X>15</X>
										<Y>15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Curtailment opwek</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253487945</Id>
										<Name>t_collectiveBatteryDescription</Name>
										<X>15</X>
										<Y>100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Collectieve batterijen</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253487947</Id>
										<Name>cb_curtailment</Name>
										<X>260</X>
										<Y>7</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="40" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (cb_curtailment.isSelected()) {
	for (GridConnection GC : zero_Interface.energyModel.f_getActiveGridConnections()) {
		GC.v_enableCurtailment = true;
		
		if (zero_Interface.c_companyUIs.size()&gt;0){
			UI_company companyUI = zero_Interface.c_companyUIs.get(GC.p_owner.p_connectionOwnerIndexNr);
			if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == GC) { // should also check the setting of selected GC
				companyUI.cb_curtailmentCompany.setSelected(true, false);
			}
		}
	}
}
else {
	for (GridConnection GC : zero_Interface.energyModel.f_getActiveGridConnections()) {
		GC.v_enableCurtailment = false;
		
		if (zero_Interface.c_companyUIs.size()&gt;0){
			UI_company companyUI = zero_Interface.c_companyUIs.get(GC.p_owner.p_connectionOwnerIndexNr);
			if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == GC) { // should also check the setting of selected GC
				companyUI.cb_curtailmentCompany.setSelected(false, false);
			}
		}
	}
}

//Update variable to change to custom scenario
if(!zero_Interface.b_runningMainInterfaceScenarios){
	zero_Interface.b_changeToCustomScenario = true;
}

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText/>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253487949</Id>
										<Name>button_add_nfato</Name>
										<X>15</X>
										<Y>130</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="160" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<VisibleCode>//!zero_Interface.settings.isPublicModel()</VisibleCode>
											<Enabled>true</Enabled>
											<EnableExpression>!zero_Interface.settings.isPublicModel()</EnableExpression>
											<ActionCode>/*
if (v_NFATOListener) {
	// This should not be reachable anymore
	traceln("Quitting NF ATO settings");
	v_NFATOListener = false;
	return;
}
*/

if (zero_Interface.v_clickedObjectType != null &amp;&amp; zero_Interface.v_clickedObjectType == OL_GISObjectType.BUILDING &amp;&amp; zero_Interface.c_selectedGridConnections.size() != 0) {
	v_nfatoFirstGC = zero_Interface.c_selectedGridConnections.get(0);
	t_nfatoFirstBuilding.setText(v_nfatoFirstGC.p_ownerID + " zal ontvangen");
	t_nfatoSecondBuilding.setText("Klik op een gebouw dat zijn capaciteit gaat afstaan");	
}

// When this boolean is true clicking on the GIS Map will select another building for the NF ATO
b_NFATOListener = true;
f_setTab(NFATO);


if (b_nfatoWeekendDistinction) {
	t_nfatoWeek.setVisible(true);
	t_nfatoWeekend.setVisible(true);
	sl_nfatoWeekendStartTime.setVisible(true);
	sl_nfatoWeekendEndTime.setVisible(true);
	sl_nfatoWeekendCapacity.setVisible(true);
}
else {
	t_nfatoWeek.setVisible(false);
	t_nfatoWeekend.setVisible(false);
	sl_nfatoWeekendStartTime.setVisible(false);
	sl_nfatoWeekendEndTime.setVisible(false);
	sl_nfatoWeekendCapacity.setVisible(false);
}


// TODO: Color the companies on the GIS Map (e.g. according to grid topology)</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Voeg Non-Firm ATO toe</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253487951</Id>
										<Name>button_remove_nfato</Name>
										<X>185</X>
										<Y>130</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="160" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<VisibleCode>!zero_Interface.settings.isPublicModel()</VisibleCode>
											<Enabled>true</Enabled>
											<ActionCode>for (GridConnection GC : zero_Interface.energyModel.f_getActiveGridConnections()) {
	GC.f_nfatoSetConnectionCapacity(true);
	GC.v_enableNFato = false;
	GC.v_nfatoWeekDeliveryCapacity_kW = new double[24];
	GC.v_nfatoWeekendDeliveryCapacity_kW = new double[24];
	GC.v_nfatoWeekFeedinCapacity_kW = new double[24];
	GC.v_nfatoWeekendFeedinCapacity_kW = new double[24];
}

//Update variable to change to custom scenario
if(!zero_Interface.b_runningMainInterfaceScenarios){
	zero_Interface.b_changeToCustomScenario = true;
}

button_remove_nfato.setEnabled(false);

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Verwijder alle NF ATOs</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1725277950476</Id>
										<Name>cb_powerChargingEVs</Name>
										<X>260</X>
										<Y>59</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="40" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (cb_powerChargingEVs.isSelected()) {
	cb_spreadChargingEVs.setSelected(false);
	for(GridConnection GC : zero_Interface.energyModel.f_getActiveGridConnections()){
		if(GC instanceof GCPublicCharger){
			//Leave it on basic setting (MAX_SPREAD)
		}
		else{
			GC.p_chargingAttitudeVehicles = OL_ChargingAttitude.MAX_POWER;
		}
	}
	//zero_Interface.energyModel.f_getGridConnections().forEach(x -&gt; x.p_chargingAttitudeVehicles = OL_ChargingAttitude.MAX_POWER);
} else {
	for(GridConnection GC : zero_Interface.energyModel.f_getActiveGridConnections()){
		if(GC instanceof GCPublicCharger){
			//Leave it on basic setting (MAX_SPREAD)
		}
		else{
			GC.p_chargingAttitudeVehicles = OL_ChargingAttitude.SIMPLE;
		}
	}
	//zero_Interface.energyModel.f_getGridConnections().forEach(x -&gt; x.p_chargingAttitudeVehicles = OL_ChargingAttitude.SIMPLE);
}

//Update variable to change to custom scenario
if(!zero_Interface.b_runningMainInterfaceScenarios){
	zero_Interface.b_changeToCustomScenario = true;
}

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText/>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1725277950478</Id>
										<Name>t_powerChargingEVsDescription</Name>
										<X>15</X>
										<Y>66</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>cb_powerChargingEVs.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Max Power laden elek. trucks</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1736425642857</Id>
										<Name>cb_EHubSelect</Name>
										<X>20</X>
										<Y>170</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="230" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<VisibleCode>cb_EHubSelect.isEnabled()</VisibleCode>
											<Enabled>false</Enabled>
											<ActionCode>////Reset view

//After a click, reset previous clicked building/gridNode colors and text
zero_Interface.v_previousClickedObjectType = zero_Interface.v_clickedObjectType;
zero_Interface.c_previousSelectedObjects = new ArrayList&lt;GIS_Object&gt;(zero_Interface.c_selectedObjects);
ArrayList&lt;GIS_Object&gt; buildingsConnectedToSelectedBuildingsList = new ArrayList&lt;&gt;();
zero_Interface.c_selectedGridConnections.clear();
zero_Interface.c_selectedObjects.clear();

//Deselect previous selection
if( zero_Interface.v_previousClickedObjectType != null){
	zero_Interface.f_deselectPreviousSelect();
}

//Still no clicked object? :select basic region
zero_Interface.v_clickedObjectType = OL_GISObjectType.REGION;
zero_Interface.uI_Results.f_updateResultsUI(zero_Interface.energyModel);


if (cb_EHubSelect.isSelected()) {
	zero_Interface.cb_showFilterInterface.setSelected(true);
}

/*
if (!cb_EHubSelect.isSelected()) {
	zero_Interface.b_EHubSelect = false;
	zero_Interface.uI_Results.b_EHubConfiguration = false;
	zero_Interface.v_clickedObjectText = "None";
	
	// Reset the list of selected GCs and the individual AreaCollections in the ResultsUI
	zero_Interface.c_selectedGridConnections.clear();
	zero_Interface.uI_Results.c_individualGridConnections = new ArrayList&lt;AreaCollection&gt;();
	
	// Reset the building colors
	for (GridConnection GC: zero_Interface.energyModel.f_getGridConnections()) {
		for (GIS_Object GB : GC.c_connectedGISObjects) {
			zero_Interface.f_styleAreas(GB);
		}
	}
	
	// Reset the shown charts
	zero_Interface.uI_Results.f_updateUIresultsMainArea();
	zero_Interface.uI_Results.v_selectedObjectType = OL_GISObjectType.REGION;
	zero_Interface.uI_Results.f_showCorrectChart();
	
	//Reset the KPI summary button
	zero_Interface.uI_Results.getCheckbox_KPISummary().setEnabled(true);
	
	// Reset the groupATO Capacities
	zero_Interface.v_groupATODeliveryCapacity_kW = 0;
	zero_Interface.v_groupATOFeedInCapacity_kW = 0;
	
	// disable the WKK button
	//cb_wkk.setSelected(false, true);
	//cb_wkk.setEnabled(false);
}
else{

	// we create areacollection(s) for the currently selected GC(s) (could be multiple if the user was using multiselect before checking this box)
	zero_Interface.uI_Results.f_fillAreaCollectionsOfIndividualGCs(zero_Interface.c_selectedGridConnections);
	
	zero_Interface.b_EHubSelect = true;
	zero_Interface.uI_Results.b_EHubConfiguration = true;
	zero_Interface.v_clickedObjectText = "Selecteer een bedrijf om toe te voegen aan de E-Hub";
	
	//Make the companyUI button invisible
	zero_Interface.getButton_goToUI().setVisible(false);
	
	//Disable the KPI summary (button)
	zero_Interface.uI_Results.getCheckbox_KPISummary().setSelected(false, true);
	zero_Interface.uI_Results.getCheckbox_KPISummary().setEnabled(false);
}


// Energy-Hub Group connection capacity calculation
zero_Interface.f_calculateGroupATOConnectionCapacity(zero_Interface.c_selectedGridConnections);
zero_Interface.uI_Results.f_EHubCapacityDataSets(zero_Interface.c_selectedGridConnections);

zero_Interface.uI_Results.f_showCorrectChart();

*/</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="14" Style="0"/>
											<LabelText>Stel E-Hub configuratie samen</LabelText>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1736425642864</Id>
										<Name>t_baseGroepInfo</Name>
										<X>30</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1736425642870</Id>
										<Name>t_cumulatiefGTV_kW</Name>
										<X>30</X>
										<Y>250</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1736425642875</Id>
										<Name>t_warnings</Name>
										<X>30</X>
										<Y>270</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>cb_EHubSelect.isVisible()? true : false</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Nog geen E-Hub samengesteld</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1736425642881</Id>
										<Name>t_groepsGTV_kW</Name>
										<X>30</X>
										<Y>230</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1722253509588</Id>
								<Name>gr_nfatoSettings</Name>
								<X>0</X>
								<Y>410</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<YCode>0</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722253509590</Id>
										<Name>rect_nfatoSettings</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-3736634</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1722253509592</Id>
										<Name>t_nfatoFirstBuilding</Name>
										<X>25</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Klik op een gebouw dat capaciteit gaat ontvangen</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253509594</Id>
										<Name>t_nfatoSecondBuilding</Name>
										<X>25</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509596</Id>
										<Name>sl_nfatoWeekStartTime</Name>
										<X>125</X>
										<Y>180</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>8</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>24</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509598</Id>
										<Name>cb_nfatoWeekendDistinction</Name>
										<X>25</X>
										<Y>75</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="190" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (b_nfatoWeekendDistinction) {
	t_nfatoWeek.setVisible(true);
	t_nfatoWeekend.setVisible(true);
	sl_nfatoWeekendStartTime.setVisible(true);
	sl_nfatoWeekendEndTime.setVisible(true);
	sl_nfatoWeekendCapacity.setVisible(true);
}
else {
	t_nfatoWeek.setVisible(false);
	t_nfatoWeekend.setVisible(false);
	sl_nfatoWeekendStartTime.setVisible(false);
	sl_nfatoWeekendEndTime.setVisible(false);
	sl_nfatoWeekendCapacity.setVisible(false);
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="14" Style="0"/>
											<LabelText>verschil week &amp; weekend</LabelText>
											<LinkTo>true</LinkTo>
											<Link>b_nfatoWeekendDistinction</Link>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509600</Id>
										<Name>sl_nfatoWeekEndTime</Name>
										<X>125</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>20</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>24</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509602</Id>
										<Name>sl_nfatoWeekCapacity</Name>
										<X>125</X>
										<Y>245</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>100</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>2000</MaxValue>
											<Step>10</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509604</Id>
										<Name>button_confirm_nfato</Name>
										<X>45</X>
										<Y>285</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="155" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (sl_nfatoWeekStartTime.getValue() == sl_nfatoWeekEndTime.getValue()) {
	traceln("Week start time is the same as end time");
}
else if (sl_nfatoWeekendStartTime.getValue() == sl_nfatoWeekendEndTime.getValue()) {
	traceln("Weekend start time is the same as end time");
}
else {
	double[][] arr = f_constructNFATOArrays();
	//traceln("f_constructNFATOArraysFromSliders: " + Arrays.toString(arr[0]));
	//traceln("f_constructNFATOArraysFromSliders: " + Arrays.toString(arr[1]));
	
	double[] weekCapacities = arr[0];
	double[] weekendCapacities = arr[1];
	
	if (f_checkNFATO(weekCapacities, weekendCapacities)) {	
		f_setNFATO(weekCapacities, weekendCapacities);
		f_setTab(HUB);
		// reset the nfato settings
		f_resetNFATOSettings();
		zero_Interface.f_resetSettings();
		
		button_remove_nfato.setEnabled(true);
		
		//Update variable to change to custom scenario
		if(!zero_Interface.b_runningMainInterfaceScenarios){
			zero_Interface.b_changeToCustomScenario = true;
		}
	}
}

</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Voeg Non-Firm ATO toe</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509606</Id>
										<Name>button_cancel_nfato</Name>
										<X>275</X>
										<Y>285</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="75" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>f_setTab(HUB);
f_resetNFATOSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>cancel</LabelText>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722253509608</Id>
										<Name>t_nfatoWeekStartTime</Name>
										<X>20</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Start tijd (uur)</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253509610</Id>
										<Name>t_nfatoWeekEndTime</Name>
										<X>20</X>
										<Y>215</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Eind tijd (uur)</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253509612</Id>
										<Name>t_nfatoWeekStartTime2</Name>
										<X>10</X>
										<Y>250</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Capaciteit (kW)</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253509614</Id>
										<Name>t_nfatoWeek</Name>
										<X>155</X>
										<Y>155</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Week
</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253509616</Id>
										<Name>t_nfatoWeekend</Name>
										<X>265</X>
										<Y>155</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Weekend
</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509618</Id>
										<Name>sl_nfatoWeekendStartTime</Name>
										<X>247</X>
										<Y>180</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>8</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>24</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509620</Id>
										<Name>sl_nfatoWeekendEndTime</Name>
										<X>247</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>20</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>24</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253509622</Id>
										<Name>sl_nfatoWeekendCapacity</Name>
										<X>247</X>
										<Y>245</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>100</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>2000</MaxValue>
											<Step>10</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1725970287541</Id>
										<Name>rb_deliveryOrFeedin</Name>
										<X>25</X>
										<Y>105</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="70" Height="70">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<DefaultValueCode>2</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>Delivery</Button>
											<Button>Feed in</Button>
											<Button>Both</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
								</Presentation>
							</Group>
							<Text>
								<Id>1722256365442</Id>
								<Name>t_nfatoFunctionsDescription</Name>
								<X>850</X>
								<Y>655</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>NF ATO Functions</Text>
								<Font>
									<Name>Dialog</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1722344870135</Id>
								<Name>t_generalFunctionsDescription</Name>
								<X>480</X>
								<Y>660</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>General Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1722344920583</Id>
								<Name>rect_batteryFunctions</Name>
								<X>1050</X>
								<Y>650</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744320</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722344920585</Id>
								<Name>t_batteryFunctionsDescription</Name>
								<X>1200</X>
								<Y>655</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Battery Functions</Text>
								<Font>
									<Name>Dialog</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Group>
								<Id>1736429614133</Id>
								<Name>gr_groepscontract</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>500</X>
								<Y>-80</Y>
								<Label>
									<X>6.511</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>185</XCode>
								<YCode>180</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1736429614135</Id>
										<Name>text_basis1</Name>
										<X>0</X>
										<Y>-52.294</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Som huidige GTVs</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1736429614137</Id>
										<Name>text_basis2</Name>
										<X>-65.109</X>
										<Y>-52.294</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Groeps GTV</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<RoundedRectangle>
										<Id>1736429614139</Id>
										<Name>roundRectangle</Name>
										<X>-91.153</X>
										<Y>-39.221</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>58.598</Width>
										<Height>26.147</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1736429614141</Id>
										<Name>t_warnings1</Name>
										<X>-104.174</X>
										<Y>6.537</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Waarschuwingen: nog geen waarschuwingen</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1736429614143</Id>
										<Name>cb_wkk</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>-114.174</X>
										<Y>45.758</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="208" Height="26">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>GCEnergyConversion GCECS = findFirst(zero_Interface.energyModel.EnergyConversionSites, gc -&gt; gc.p_gridConnectionID.equals("GCECS2"));
if (GCECS == null) {
	throw new RuntimeException("Error: Could not find WKK");
}
if (cb_wkk.isSelected()) {
	// First we find the ring of the currently selected E-Hub
	if ( zero_Interface.c_selectedGridConnections.size() == 0 ) {
		throw new RuntimeException("Stel eerst je E-Hub samen door op een bedrijf te klikken.");
	}
	GridConnection GC = zero_Interface.c_selectedGridConnections.get(0);
	GridNode ringNode;
	if (GC.l_parentNodeElectric.getConnectedAgent().p_description.toLowerCase().contains("klantstation")) {
		ringNode = findFirst(zero_Interface.energyModel.pop_gridNodes, gn -&gt; gn.p_gridNodeID.equals( GC.l_parentNodeElectric.getConnectedAgent().p_parentNodeID) );
	}
	else {
		ringNode = GC.l_parentNodeElectric.getConnectedAgent();
	}
	
	// Remove from old gridnode
	GCECS.l_parentNodeElectric.getConnectedAgent().f_getConnectedGridConnections().remove(GCECS);
	GCECS.l_parentNodeElectric.disconnect();
	
	// Add to new gridnode
	GCECS.p_parentNodeElectricID = ringNode.p_gridNodeID;
	GCECS.l_parentNodeElectric.connectTo(ringNode);
	ringNode.f_getConnectedGridConnections().add(GCECS);
	
	// Add WKK to the selectedgridconnections in interface
	zero_Interface.c_selectedGridConnections.add(GCECS);
	zero_Interface.f_fillAreaCollectionsOfIndividualGCs();
	
	// Activate GC
	GCECS.f_setActive(true);
	
}
else {
	// Remove WKK from the selectedgridconnections in interface
	zero_Interface.c_selectedGridConnections.remove(GCECS);
	zero_Interface.f_fillAreaCollectionsOfIndividualGCs();
	
	GCECS.f_setActive(false);
}

zero_Interface.uI_Results.f_showCorrectChart();
zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="12" Style="0"/>
											<LabelText>Voeg HR-WKK aan E-Hub toe</LabelText>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1736429614145</Id>
										<Name>text_baseGroepInfo</Name>
										<X>-104.174</X>
										<Y>-78.442</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer minimaal twee panden</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1736429614149</Id>
										<Name>t_cumulatiefGTV_kW1</Name>
										<X>-61.854</X>
										<Y>-30.069</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>text</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<RoundedRectangle>
										<Id>1736429614151</Id>
										<Name>roundRectangle1</Name>
										<X>6.511</X>
										<Y>-39.221</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>58.598</Width>
										<Height>26.147</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1736429614153</Id>
										<Name>t_groepsGTV_kW1</Name>
										<X>32.555</X>
										<Y>-32.684</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>text</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1722247653561</Id>
				<Name>tabElectricity</Name>
				<AdditionalClassCode>// Default Sliders&#xD;
public ShapeGroup getGroupElectricityDemandSliders() {&#xD;
	return this.gr_electricityDemandSliders;&#xD;
}&#xD;
&#xD;
public ShapeGroup getGroupElectricityDemandSliders_Businesspark() {&#xD;
	return this.gr_electricityDemandSliders_Businesspark;&#xD;
}&#xD;
&#xD;
public ShapeGroup getGroupElectricityDemandSliders_ResidentialArea() {&#xD;
	return this.gr_electricityDemandSlidersResidentialArea;&#xD;
}&#xD;
public ShapeSlider getSliderElectricityDemandReduction_pct() {&#xD;
	return this.sl_electricityDemandReduction_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderRooftopPVCompanies_pct(){&#xD;
	return this.sl_rooftopPVCompanies_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderLargeScalePV_ha(){&#xD;
	return this.sl_largeScalePV_ha;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderLargeScalePV_ha_Businesspark(){&#xD;
	return this.sl_largeScalePV_ha_Businesspark;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderRooftopPVHouses_pct(){&#xD;
	return this.sl_rooftopPVHouses_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getWindSlider(){&#xD;
	return this.sl_largeScaleWind_MW;&#xD;
}&#xD;
</AdditionalClassCode>
				<ExtendsReference>
					<PackageName>zerointerfaceloader</PackageName>
					<ClassName>tabArea</ClassName>
				</ExtendsReference>
				<StartupCode>f_getCurrentPVOnLandAndWindturbineValues();</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1722247653567</Id>
					<Name>1722247653567</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089978</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1722247653564</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1722247653568</CurrentLevel>
				<ConnectionsId>1722247653562</ConnectionsId>
				<Variables>
					<Variable Class="Parameter">
						<Id>1745483322704</Id>
						<Name>p_currentPVOnLand_ha</Name>
						<X>50</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745483322702</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1745483371462</Id>
						<Name>p_currentWindTurbines_MW</Name>
						<X>50</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745483371460</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256117103</Id>
						<Name>f_setPVOnLand</Name>
						<Description>Function that changes the electric capacity of the energy asset of the "Solar field". Takes an area size in hectares as a parameter and assumes that 1 MWp of solarpannels fits on 1 ha. The variables for amount of installed PV are updated automatically in the zero_engine. The function also modifies the connection capacity of the energy production site to match the new installed PV Power.</Description>
						<X>70</X>
						<Y>880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>hectare</Name>
							<Type>double</Type>
						</Parameter>
						<Body>// TODO: Change to work for multiple solar fields in one model.&#xD;
// to do so it should probably first calculate the total installed pv in all solar fields&#xD;
&#xD;
// TODO: make this work nicer with the new pause function (when setting capacity to 0 pause again?)&#xD;
for ( GCEnergyProduction GCEP : zero_Interface.energyModel.EnergyProductionSites) {&#xD;
	for(J_EAProduction j_ea : GCEP.c_productionAssets) {&#xD;
		if (j_ea.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC &amp;&amp; GCEP.p_isSliderGC) {&#xD;
			if (!GCEP.v_isActive) {&#xD;
				GCEP.f_setActive(true);&#xD;
			}&#xD;
			&#xD;
			double solarFieldPower = (double)roundToInt(hectare * zero_Interface.energyModel.avgc_data.p_avgSolarFieldPower_kWppha);&#xD;
			j_ea.setCapacityElectric_kW(solarFieldPower);&#xD;
			GCEP.v_liveConnectionMetaData.physicalCapacity_kW = solarFieldPower;&#xD;
			GCEP.v_liveConnectionMetaData.contractedFeedinCapacity_kW = solarFieldPower;&#xD;
			&#xD;
			if(hectare == 0){&#xD;
				GCEP.f_setActive(false);&#xD;
			}&#xD;
			&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256142375</Id>
						<Name>f_setPVSystemHouses</Name>
						<Description>Function that adds or removes photovoltaic production assets to houses. Takes a percentage as a parameter and runs untill that percentage of all the houses has a PV asset. If a new asset is created it takes as its electric capacity a random value between 3 and 6 kW. The variables for amount of installed PV are updated automatically in the zero_engine.
</Description>
						<X>70</X>
						<Y>850</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCHouse&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>PV_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>ArrayList&lt;GCHouse&gt; houses = new ArrayList&lt;GCHouse&gt;(zero_Interface.c_orderedPVSystemsHouses.stream().filter(gcList::contains).toList());&#xD;
int nbHouses = houses.size();&#xD;
int nbHousesWithPV = count(houses, x -&gt; x.v_liveAssetsMetaData.hasPV == true);&#xD;
int nbHousesWithPVGoal = roundToInt(PV_pct / 100.0 * nbHouses);&#xD;
&#xD;
while ( nbHousesWithPVGoal &lt; nbHousesWithPV ) { // remove excess PV systems&#xD;
	GCHouse house = findFirst(houses, x -&gt; x.v_liveAssetsMetaData.hasPV == true);	&#xD;
	J_EA pvAsset = findFirst(house.c_productionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );&#xD;
	if (pvAsset != null) {&#xD;
		pvAsset.removeEnergyAsset();&#xD;
		houses.remove(house);&#xD;
		zero_Interface.c_orderedPVSystemsHouses.remove(house);&#xD;
		zero_Interface.c_orderedPVSystemsHouses.add(0, house);&#xD;
		nbHousesWithPV --; &#xD;
	}&#xD;
	else {&#xD;
		traceln(" cant find PV asset in house that should have PV asset in f_setPVHouses (Interface)");&#xD;
	}&#xD;
}&#xD;
&#xD;
while ( nbHousesWithPVGoal &gt; nbHousesWithPV ) {&#xD;
	GCHouse house = findFirst(houses, x -&gt; x.v_liveAssetsMetaData.hasPV == false);&#xD;
	if (house == null){&#xD;
		traceln("No gridconnection without PV panels found! Current PVsystems count: %s", nbHousesWithPV);&#xD;
		break;&#xD;
	}&#xD;
	else {&#xD;
		String assetName = "Rooftop PV";&#xD;
		double capacityHeat_kW = 0.0;&#xD;
		double yearlyProductionHydrogen_kWh = 0.0;&#xD;
		double yearlyProductionMethane_kWh = 0.0;&#xD;
		double installedPVCapacity_kW = roundToDecimal(uniform(3,6),2);&#xD;
&#xD;
		J_EAProduction productionAsset = new J_EAProduction ( house, OL_EnergyAssetType.PHOTOVOLTAIC, assetName, OL_EnergyCarriers.ELECTRICITY, installedPVCapacity_kW, zero_Interface.energyModel.p_timeStep_h, zero_Interface.energyModel.pp_PVProduction35DegSouth_fr );&#xD;
		houses.remove(house);&#xD;
		zero_Interface.c_orderedPVSystemsHouses.remove(house);&#xD;
		zero_Interface.c_orderedPVSystemsHouses.add(0, house);&#xD;
		nbHousesWithPV ++;	&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256248965</Id>
						<Name>f_setWindTurbines</Name>
						<Description>Function that changes the electric capacity of the energy asset of the "Wind Farm". Takes an amount of MW as a parameter. The variables for amount of installed Wind are updated automatically in the zero_engine. The function also modifies the connection capacity of the energy production site to match the new installed Wind Power.</Description>
						<X>80</X>
						<Y>1010</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>AllocatedWindPower_MW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>// TODO: Change to work for multiple wind farms in one model.&#xD;
// to do so it should probably first calculate the total installed wind power in all wind farms&#xD;
&#xD;
// TODO: make this work nicer with the new pause function (when setting capacity to 0 pause again?)&#xD;
&#xD;
for ( GCEnergyProduction GCEP : zero_Interface.energyModel.EnergyProductionSites) {&#xD;
	for(J_EAProduction j_ea : GCEP.c_productionAssets) {&#xD;
		if (j_ea.getEAType() == OL_EnergyAssetType.WINDMILL &amp;&amp; GCEP.p_isSliderGC) {&#xD;
			if (!GCEP.v_isActive) {&#xD;
				GCEP.f_setActive(true);&#xD;
			}&#xD;
			j_ea.setCapacityElectric_kW(roundToInt(1000*AllocatedWindPower_MW));&#xD;
			GCEP.v_liveConnectionMetaData.physicalCapacity_kW = (double)roundToInt(1000*AllocatedWindPower_MW);&#xD;
			GCEP.v_liveConnectionMetaData.contractedFeedinCapacity_kW = (double)roundToInt(1000*AllocatedWindPower_MW);&#xD;
			&#xD;
			if(AllocatedWindPower_MW == 0){&#xD;
				GCEP.f_setActive(false);&#xD;
			}&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722335253834</Id>
						<Name>f_setDemandReduction</Name>
						<Description>Function that reduces the electricity demand of all consumption assets. Takes as an argument a percentage to reduce by compared to the default value of the consumption assets.</Description>
						<X>60</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>demandReduction_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double scalingFactor = 1 - demandReduction_pct/100;&#xD;
&#xD;
for (GridConnection gc : gcList) {&#xD;
	// Set Consumption Assets&#xD;
	for (J_EAConsumption j_ea : gc.c_consumptionAssets) {&#xD;
		if (j_ea.getEAType() == OL_EnergyAssetType.ELECTRICITY_DEMAND) {&#xD;
			j_ea.setConsumptionScaling_fr( scalingFactor );&#xD;
		}&#xD;
	}&#xD;
	// Set Profile Assets&#xD;
	for (J_EAProfile j_ea : gc.c_profileAssets) {&#xD;
		if (j_ea.energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
			j_ea.resetEnergyProfile();&#xD;
			j_ea.scaleEnergyProfile( scalingFactor );&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	// Update Company UI&#xD;
	if (zero_Interface.c_companyUIs.size()&gt;0){&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			companyUI.sl_electricityDemandCompanyReduction.setValue(demandReduction_pct, false);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
// Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1745483988251</Id>
						<Name>f_getCurrentPVOnLandAndWindturbineValues</Name>
						<X>30</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for(GCEnergyProduction GCProd : zero_Interface.energyModel.EnergyProductionSites){&#xD;
	if(!GCProd.p_isSliderGC &amp;&amp; GCProd.v_isActive){&#xD;
		for(J_EAProduction ea : GCProd.c_productionAssets){&#xD;
			if(ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC){&#xD;
				p_currentPVOnLand_ha += ea.getCapacityElectric_kW()/zero_Interface.energyModel.avgc_data.p_avgSolarFieldPower_kWppha;&#xD;
			}&#xD;
			else if(ea.energyAssetType == OL_EnergyAssetType.WINDMILL){&#xD;
				p_currentWindTurbines_MW += ea.getCapacityElectric_kW()/1000;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Pair&lt;Double, Double&gt;</ReturnType>
						<Id>1747294812333</Id>
						<Name>f_getPVSystemPercentage</Name>
						<Description>Calculates the amount of installed PV compared to the total potential based on roof surface area. Assumes that 50% of the roof surface is available for PV. If a GridConnection already has more than this installed it takes the installed capacity instead.</Description>
						<X>90</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>double installedPV_kWp = 0.0;&#xD;
double PVPotential_kWp = 0.0;&#xD;
double averageEffectivePV_kWppm2 = zero_Interface.energyModel.avgc_data.p_avgRatioRoofPotentialPV * zero_Interface.energyModel.avgc_data.p_avgPVPower_kWpm2;&#xD;
&#xD;
for (GridConnection gc : gcList ) {&#xD;
	double gcInstalledPV_kWp = 0.0;&#xD;
	if ( gc.v_liveAssetsMetaData.hasPV ) {&#xD;
		for ( J_EAProduction j_ea : gc.c_productionAssets ) {&#xD;
			if ( j_ea.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC ) {&#xD;
				gcInstalledPV_kWp += j_ea.getCapacityElectric_kW();&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	installedPV_kWp += gcInstalledPV_kWp;&#xD;
	PVPotential_kWp += max( gcInstalledPV_kWp, max(0.1, gc.p_roofSurfaceArea_m2 * averageEffectivePV_kWppm2) );&#xD;
}&#xD;
&#xD;
return new Pair(installedPV_kWp, PVPotential_kWp);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747297871195</Id>
						<Name>f_setPVSystemCompanies</Name>
						<Description>Adds or removes photovoltaic production assets to GridConnections. Takes as arguments a list of Gridconnections and a target percentage. It runs untill that list of GCs has that percentage of PV installed, compared to the total potential PV. If a new asset is created it determines its electric capacity by the total roof area of all the buildings connected to the GC. The function also updates the PV slider in the company UI if the GC is a company. The variables in the engine that keep track of the amount of installed PV are updated automatically.</Description>
						<X>70</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCUtility&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>target_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>slider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>List&lt;GCUtility&gt; activeGCs = new ArrayList&lt;GCUtility&gt;(zero_Interface.c_orderedPVSystemsCompanies.stream().filter(x -&gt; x.v_isActive).filter(gcList::contains).toList());&#xD;
Pair&lt;Double, Double&gt; pair = f_getPVSystemPercentage( new ArrayList&lt;GridConnection&gt;(activeGCs) );&#xD;
double remaining_kWp = target_pct / 100 * pair.getSecond() - pair.getFirst();&#xD;
double averageEffectivePV_kWppm2 = zero_Interface.energyModel.avgc_data.p_avgRatioRoofPotentialPV * zero_Interface.energyModel.avgc_data.p_avgPVPower_kWpm2;&#xD;
if ( remaining_kWp &gt; 0 ) {&#xD;
	// add more PV&#xD;
	for ( GCUtility company : new ArrayList&lt;GCUtility&gt;(activeGCs) ) {&#xD;
		double remainingPotential_kWp = min( remaining_kWp, company.p_roofSurfaceArea_m2 * averageEffectivePV_kWppm2 - company.v_liveAssetsMetaData.totalInstalledPVPower_kW );&#xD;
		&#xD;
		if ( remainingPotential_kWp &gt; 0 ) {&#xD;
			remaining_kWp -= remainingPotential_kWp;&#xD;
			f_addPVSystem( company, remainingPotential_kWp );&#xD;
		}&#xD;
		&#xD;
		if ( remaining_kWp &lt;= 0 ) {&#xD;
			zero_Interface.f_resetSettings();		&#xD;
			return;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// remove pv&#xD;
	for ( GCUtility company : new ArrayList&lt;GCUtility&gt;(activeGCs) ) {&#xD;
		if ( company.v_liveAssetsMetaData.hasPV ) {&#xD;
			// find companyUI to check if the company already has PV on model startup			&#xD;
			remaining_kWp += company.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
			f_removePVSystem( company );		&#xD;
			double PVAtStartup_kWp = 0;&#xD;
			if (zero_Interface.c_companyUIs.size() &gt; 0) {&#xD;
				PVAtStartup_kWp = zero_Interface.c_scenarioMap_Current.get(company).getCurrentPV_kW();&#xD;
			}&#xD;
			if (PVAtStartup_kWp != 0) {&#xD;
				f_addPVSystem( company, PVAtStartup_kWp );&#xD;
				remaining_kWp -= PVAtStartup_kWp;&#xD;
			}&#xD;
		}&#xD;
		if ( remaining_kWp &gt;= 0 ) {&#xD;
			// removed slightly too much pv&#xD;
			f_addPVSystem( company, remaining_kWp );&#xD;
			zero_Interface.f_resetSettings();			&#xD;
			return;&#xD;
		}&#xD;
	}&#xD;
	// All companies are at the starting PV amount. Set slider to corresponding value.&#xD;
	pair = f_getPVSystemPercentage( new ArrayList&lt;GridConnection&gt;( activeGCs ) );&#xD;
	int installed_pct = roundToInt(100.0 * pair.getFirst() / pair.getSecond());	&#xD;
	slider.setValue(installed_pct, false);&#xD;
}&#xD;
&#xD;
// Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747306690517</Id>
						<Name>f_addPVSystem</Name>
						<Description>Takes as an argument a GridConnection and a capacity. If the GC already has a solar panel, it adds the capacity to the existing one. Otherwise it creates a new energy asset. If the GridConnection is a GCUtility it also updates the companyUI if it exists.</Description>
						<X>90</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gc</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>capacity_kWp</Name>
							<Type>double</Type>
						</Parameter>
						<Body>if ( gc.v_liveAssetsMetaData.hasPV ) {&#xD;
	// Add the capacity to the existing asset&#xD;
	J_EAProduction pvAsset = findFirst(gc.c_productionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC);&#xD;
	if ( pvAsset == null ) {&#xD;
		throw new RuntimeException("Could not find photovoltaic asset in GridConnection: " + gc.p_ownerID + ", even though hasPV is True.");&#xD;
	}&#xD;
	capacity_kWp += pvAsset.getCapacityElectric_kW();&#xD;
	pvAsset.setCapacityElectric_kW( capacity_kWp );&#xD;
}&#xD;
else {&#xD;
	// Create a new asset&#xD;
	OL_EnergyAssetType assetType = OL_EnergyAssetType.PHOTOVOLTAIC;&#xD;
	String assetName = "Rooftop PV";&#xD;
	double capacityHeat_kW = 0.0;&#xD;
	double yearlyProductionMethane_kWh = 0.0;&#xD;
	double yearlyProductionHydrogen_kWh = 0.0;&#xD;
	double outputTemperature_degC = 0.0;&#xD;
	&#xD;
	J_EAProduction productionAsset = new J_EAProduction ( gc, assetType, assetName, OL_EnergyCarriers.ELECTRICITY, capacity_kWp, zero_Interface.energyModel.p_timeStep_h, zero_Interface.energyModel.pp_PVProduction35DegSouth_fr );&#xD;
}&#xD;
&#xD;
// Update the ordered collection&#xD;
if ( gc instanceof GCHouse ) {&#xD;
	zero_Interface.c_orderedPVSystemsHouses.remove(gc);&#xD;
	zero_Interface.c_orderedPVSystemsHouses.add(0, (GCHouse)gc);	&#xD;
}&#xD;
else if ( gc instanceof GCUtility ) {&#xD;
	zero_Interface.c_orderedPVSystemsCompanies.remove(gc);&#xD;
	zero_Interface.c_orderedPVSystemsCompanies.add(0, (GCUtility)gc);&#xD;
	// update company UI&#xD;
	if ( zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
		if ( gc.p_owner != null ) {&#xD;
			UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
			companyUI.b_runningMainInterfaceSlider = true;&#xD;
			if(companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) != gc){&#xD;
				int i = indexOf(companyUI.c_ownedGridConnections.stream().toArray(), gc);&#xD;
				companyUI.GCnr_selection.setValue(i, true);&#xD;
			}&#xD;
			companyUI.b_runningMainInterfaceSlider = false;	&#xD;
			&#xD;
			companyUI.sl_rooftopPVCompany.setValue(roundToInt(capacity_kWp), false);&#xD;
			companyUI.v_defaultPVSlider = roundToInt(capacity_kWp);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	throw new RuntimeException("Unknown GridConnection type passed to f_addPVSystem.");&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747306699629</Id>
						<Name>f_removePVSystem</Name>
						<X>90</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gc</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>J_EAProduction pvAsset = findFirst(gc.c_productionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC);&#xD;
if ( pvAsset != null ) {&#xD;
	pvAsset.removeEnergyAsset();&#xD;
&#xD;
	if ( gc instanceof GCHouse ) {&#xD;
		zero_Interface.c_orderedPVSystemsHouses.remove(gc);&#xD;
		zero_Interface.c_orderedPVSystemsHouses.add(0, (GCHouse)gc);	&#xD;
	}&#xD;
	else if ( gc instanceof GCUtility ) {&#xD;
		zero_Interface.c_orderedPVSystemsCompanies.remove(gc);&#xD;
		zero_Interface.c_orderedPVSystemsCompanies.add(0, (GCUtility)gc);&#xD;
		if ( zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
			if ( gc.p_owner != null ) {&#xD;
				UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
				companyUI.b_runningMainInterfaceSlider = true;&#xD;
				if(companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) != gc){&#xD;
					int i = indexOf(companyUI.c_ownedGridConnections.stream().toArray(), gc);&#xD;
					companyUI.GCnr_selection.setValue(i, true);&#xD;
				}&#xD;
				companyUI.b_runningMainInterfaceSlider = false;	&#xD;
				&#xD;
				companyUI.sl_rooftopPVCompany.setValue(0, false);&#xD;
				companyUI.v_defaultPVSlider = roundToInt(0);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747825874398</Id>
						<Name>f_setPVSystemHouses1</Name>
						<Description>Adds or removes photovoltaic production assets to GridConnections. Takes as arguments a list of Gridconnections and a target percentage. It runs untill that list of GCs has that percentage of PV installed, compared to the total potential PV. If a new asset is created it determines its electric capacity by the total roof area of all the buildings connected to the GC. The function also updates the PV slider in the company UI if the GC is a company. The variables in the engine that keep track of the amount of installed PV are updated automatically.</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>70</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCHouse&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>target_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>Pair&lt;Double, Double&gt; pair = f_getPVSystemPercentage( new ArrayList&lt;GridConnection&gt;(gcList));&#xD;
&#xD;
double remaining_kWp = target_pct / 100 * pair.getSecond()  - pair.getFirst();&#xD;
double averageEffectivePV_kWppm2 = zero_Interface.energyModel.avgc_data.p_avgRatioRoofPotentialPV * zero_Interface.energyModel.avgc_data.p_avgPVPower_kWpm2;&#xD;
&#xD;
if ( remaining_kWp &gt; 0 ) {&#xD;
	// add more PV&#xD;
	for ( GCHouse house : new ArrayList&lt;GCHouse&gt;(zero_Interface.c_orderedPVSystemsHouses) ) {&#xD;
		double remainingPotential_kWp = min( remaining_kWp, house.p_roofSurfaceArea_m2 * averageEffectivePV_kWppm2 - house.v_liveAssetsMetaData.totalInstalledPVPower_kW );&#xD;
		if ( remainingPotential_kWp &gt; 0 ) {&#xD;
			remaining_kWp -= remainingPotential_kWp;&#xD;
			f_addPVSystem( house, remainingPotential_kWp );&#xD;
		}&#xD;
		&#xD;
		if ( remaining_kWp &lt;= 0 ) {&#xD;
			zero_Interface.f_resetSettings();		&#xD;
			return;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// remove pv&#xD;
	for ( GCHouse house : new ArrayList&lt;GCHouse&gt;(zero_Interface.c_orderedPVSystemsHouses) ) {&#xD;
		if ( house.v_liveAssetsMetaData.hasPV ) {&#xD;
			remaining_kWp += house.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
			f_removePVSystem( house );&#xD;
		}&#xD;
		if ( remaining_kWp &gt;= 0 ) {&#xD;
			// removed slightly too much pv&#xD;
			f_addPVSystem( house, remaining_kWp );&#xD;
			zero_Interface.f_resetSettings();			&#xD;
			return;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750063382310</Id>
						<Name>f_setResidentialBatteries</Name>
						<X>890</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>homeBatteries_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>// Setting houseBatteries&#xD;
double nbHouseBatteries = count(zero_Interface.energyModel.Houses, h -&gt; h.p_batteryAsset != null); //f_getEnergyAssets(), p -&gt; p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC &amp;&amp; p.getParentAgent() instanceof GCHouse);&#xD;
double nbHousesWithPV = count(zero_Interface.energyModel.Houses, x -&gt; x.v_liveAssetsMetaData.hasPV == true); //count(energyModel.f_getGridConnections(), p-&gt;p instanceof GCHouse);&#xD;
double nbHousesWithBatteryGoal = roundToInt(nbHousesWithPV * homeBatteries_pct / 100);&#xD;
&#xD;
if( nbHousesWithPV &gt; 0 ){&#xD;
	while ( nbHouseBatteries &gt; nbHousesWithBatteryGoal ) {&#xD;
		GCHouse house = findFirst(zero_Interface.energyModel.Houses, p -&gt; p.p_batteryAsset != null );&#xD;
		house.p_batteryAsset.removeEnergyAsset();&#xD;
		house.p_batteryAlgorithm = null;&#xD;
		nbHouseBatteries--;&#xD;
	}&#xD;
	while ( nbHouseBatteries &lt; nbHousesWithBatteryGoal) {&#xD;
		GCHouse house = findFirst(zero_Interface.energyModel.Houses, p -&gt; p.p_batteryAsset == null &amp;&amp; p.v_liveAssetsMetaData.hasPV == true);&#xD;
		&#xD;
		double batteryStorageCapacity_kWh = 15;&#xD;
		double batteryCapacity_kW = batteryStorageCapacity_kWh / zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;&#xD;
		double batteryStateOfCharge = 0.5;&#xD;
&#xD;
		new J_EAStorageElectric(house, batteryCapacity_kW, batteryStorageCapacity_kWh, batteryStateOfCharge, zero_Interface.energyModel.p_timeStep_h );&#xD;
		house.p_batteryAlgorithm = new J_BatteryManagementSelfConsumption( house );&#xD;
		nbHouseBatteries++;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750063382312</Id>
						<Name>f_setGridBatteries</Name>
						<X>890</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>storageCapacity_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Body>for ( GCGridBattery battery : zero_Interface.energyModel.GridBatteries) {&#xD;
	if(battery.p_isSliderGC){&#xD;
		for(J_EAStorage j_ea : battery.c_storageAssets) {&#xD;
			J_EAStorageElectric batteryAsset = ((J_EAStorageElectric)j_ea);&#xD;
			if (!battery.v_isActive) {&#xD;
				battery.f_setActive(true);&#xD;
			}&#xD;
			double capacity_kW = storageCapacity_kWh / zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;&#xD;
			batteryAsset.setCapacityElectric_kW( capacity_kW );&#xD;
			batteryAsset.setStorageCapacity_kWh( storageCapacity_kWh );&#xD;
			battery.v_liveConnectionMetaData.physicalCapacity_kW = capacity_kW;&#xD;
			battery.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = capacity_kW;&#xD;
			battery.v_liveConnectionMetaData.contractedFeedinCapacity_kW = capacity_kW;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750063382324</Id>
						<Name>f_setElectricCooking</Name>
						<X>890</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>electricCookingGoal_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int nbHousesWithElectricCooking = findAll(zero_Interface.energyModel.Houses, x -&gt; x.p_cookingMethod == OL_HouseholdCookingMethod.ELECTRIC).size();&#xD;
int nbHousesWithElectricCookingGoal = roundToInt(electricCookingGoal_pct / 100 * zero_Interface.energyModel.Houses.size());&#xD;
&#xD;
&#xD;
while ( nbHousesWithElectricCooking &gt; nbHousesWithElectricCookingGoal ) { // remove excess cooking systems&#xD;
	GCHouse house = randomWhere(zero_Interface.energyModel.Houses, x -&gt; x.p_cookingMethod == OL_HouseholdCookingMethod.ELECTRIC);		&#xD;
	J_EAConsumption cookingAsset = findFirst(house.c_consumptionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB );&#xD;
	if (cookingAsset != null) {&#xD;
		double yearlyCookingDemand_kWh = cookingAsset.yearlyDemand_kWh;&#xD;
		cookingAsset.removeEnergyAsset();&#xD;
   		&#xD;
		new J_EAConsumption(house, OL_EnergyAssetType.GAS_PIT, "default_house_cooking_demand_fr", yearlyCookingDemand_kWh, OL_EnergyCarriers.METHANE, zero_Interface.energyModel.p_timeStep_h, null);&#xD;
		house.p_cookingMethod = OL_HouseholdCookingMethod.GAS;&#xD;
		nbHousesWithElectricCooking --; &#xD;
	}&#xD;
	else {&#xD;
		throw new RuntimeException("Cant find cooking asset in house that should have cooking asset in f_ElectricCooking (tabElectricity)");&#xD;
	}&#xD;
}&#xD;
 &#xD;
while ( nbHousesWithElectricCooking &lt; nbHousesWithElectricCookingGoal) {&#xD;
	GCHouse house = randomWhere(zero_Interface.energyModel.Houses, x -&gt; x.p_cookingMethod == OL_HouseholdCookingMethod.GAS);&#xD;
	if (house == null){&#xD;
		throw new RuntimeException("No gridconnection without GAS cooking asset found! Current electric cooking count: " + nbHousesWithElectricCooking);&#xD;
	}&#xD;
	else {&#xD;
		J_EAConsumption cookingAsset = findFirst(house.c_consumptionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.GAS_PIT );&#xD;
		if (cookingAsset != null) {&#xD;
			double yearlyCookingDemand_kWh = cookingAsset.yearlyDemand_kWh;&#xD;
			cookingAsset.removeEnergyAsset();&#xD;
	&#xD;
			new J_EAConsumption(house, OL_EnergyAssetType.ELECTRIC_HOB, "default_house_cooking_demand_fr", yearlyCookingDemand_kWh, OL_EnergyCarriers.ELECTRICITY, zero_Interface.energyModel.p_timeStep_h, null);&#xD;
			house.p_cookingMethod = OL_HouseholdCookingMethod.ELECTRIC;&#xD;
			nbHousesWithElectricCooking ++; &#xD;
		}&#xD;
		else {&#xD;
			throw new RuntimeException("Cant find cooking asset in house that should have cooking asset in f_ElectricCooking (tabElectricity)");&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750063382330</Id>
						<Name>f_setPublicChargingStations</Name>
						<X>890</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>publicChargers_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int totalNbChargers = zero_Interface.c_orderedPublicChargers.size();&#xD;
int currentNbChargers = count(zero_Interface.c_orderedPublicChargers, x -&gt; x.v_isActive);&#xD;
int nbChargersGoal = roundToInt(publicChargers_pct / 100 * totalNbChargers) ;&#xD;
&#xD;
// TODO: for now we assume that a public charger supports two EVs. Just to implement the code that removes diesel vehicles.&#xD;
// We will need to decide if we want to make this a fixed number, or have it depend on the number of chargers / diesel vehicles.&#xD;
int amountOfVehiclesPerCharger = zero_Interface.energyModel.avgc_data.p_avgEVsPerPublicCharger;&#xD;
&#xD;
while ( currentNbChargers &gt; nbChargersGoal ) {&#xD;
	GCPublicCharger gc = findFirst(zero_Interface.c_orderedPublicChargers, x -&gt; x.v_isActive);&#xD;
	if (gc != null) {&#xD;
		gc.f_setActive(false);&#xD;
		zero_Interface.c_orderedPublicChargers.remove(gc);&#xD;
		zero_Interface.c_orderedPublicChargers.add(0, gc);&#xD;
		currentNbChargers--;&#xD;
		&#xD;
		List&lt;J_EADieselVehicle&gt; cars = new ArrayList&lt;&gt;(zero_Interface.c_orderedNonActiveVehiclesPublicParking.subList(0, amountOfVehiclesPerCharger));&#xD;
		for (J_EADieselVehicle car : cars) {&#xD;
			zero_Interface.c_orderedNonActiveVehiclesPublicParking.remove(car);&#xD;
			zero_Interface.c_orderedActiveVehiclesPublicParking.add(0, car);&#xD;
			car.reRegisterEnergyAsset();&#xD;
		}&#xD;
	}&#xD;
	else {&#xD;
		throw new RuntimeException("Charger slider error: there are not sufficient chargers to remove");&#xD;
	}&#xD;
}&#xD;
while ( currentNbChargers &lt; nbChargersGoal){&#xD;
	GCPublicCharger gc = findFirst(zero_Interface.c_orderedPublicChargers, x -&gt; !x.v_isActive);&#xD;
	if (gc != null) {&#xD;
		gc.f_setActive(true);&#xD;
		zero_Interface.c_orderedPublicChargers.remove(gc);&#xD;
		zero_Interface.c_orderedPublicChargers.add(0, gc);&#xD;
		currentNbChargers++;&#xD;
		&#xD;
		List&lt;J_EADieselVehicle&gt; cars = new ArrayList&lt;&gt;(zero_Interface.c_orderedActiveVehiclesPublicParking.subList(0, amountOfVehiclesPerCharger));&#xD;
		for (J_EADieselVehicle car : cars) {&#xD;
			zero_Interface.c_orderedActiveVehiclesPublicParking.remove(car);&#xD;
			zero_Interface.c_orderedNonActiveVehiclesPublicParking.add(0, car);&#xD;
			car.removeEnergyAsset();&#xD;
		}&#xD;
	}&#xD;
	else {&#xD;
		throw new RuntimeException("Charger slider error: there are no more chargers to add");&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750259219309</Id>
						<Name>f_setV1GChargerCapabilities</Name>
						<X>890</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>goal_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int totalNbChargers = zero_Interface.c_orderedV1GChargers.size();&#xD;
int currentNbChargers = count(zero_Interface.c_orderedV1GChargers, x -&gt; x.V1GCapable);&#xD;
int nbChargersGoal = roundToInt(goal_pct / 100.0 * totalNbChargers);&#xD;
&#xD;
while (currentNbChargers &lt; nbChargersGoal) {&#xD;
	J_EACharger j_ea = findFirst(zero_Interface.c_orderedV1GChargers, x -&gt; !x.V1GCapable);&#xD;
	j_ea.V1GCapable = true;&#xD;
	currentNbChargers++;&#xD;
	zero_Interface.c_orderedV1GChargers.remove(j_ea);&#xD;
	zero_Interface.c_orderedV1GChargers.add(0, j_ea);&#xD;
	&#xD;
}&#xD;
while (currentNbChargers &gt; nbChargersGoal) {&#xD;
	J_EACharger j_ea = findFirst(zero_Interface.c_orderedV1GChargers, x -&gt; x.V1GCapable);&#xD;
	j_ea.V1GCapable = false;&#xD;
	currentNbChargers--;&#xD;
	zero_Interface.c_orderedV1GChargers.remove(j_ea);&#xD;
	zero_Interface.c_orderedV1GChargers.add(0, j_ea);&#xD;
}&#xD;
&#xD;
// Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750259468109</Id>
						<Name>f_setV2GChargerCapabilities</Name>
						<X>890</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>goal_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int totalNbChargers = zero_Interface.c_orderedV2GChargers.size();&#xD;
int currentNbChargers = count(zero_Interface.c_orderedV2GChargers, x -&gt; x.V2GCapable);&#xD;
int nbChargersGoal = roundToInt(goal_pct / 100.0 * totalNbChargers);&#xD;
&#xD;
while (currentNbChargers &lt; nbChargersGoal) {&#xD;
	J_EACharger j_ea = findFirst(zero_Interface.c_orderedV2GChargers, x -&gt; !x.V2GCapable);&#xD;
	j_ea.V2GCapable = true;&#xD;
	currentNbChargers++;&#xD;
	zero_Interface.c_orderedV2GChargers.remove(j_ea);&#xD;
	zero_Interface.c_orderedV2GChargers.add(0, j_ea);&#xD;
	&#xD;
}&#xD;
while (currentNbChargers &gt; nbChargersGoal) {&#xD;
	J_EACharger j_ea = findFirst(zero_Interface.c_orderedV2GChargers, x -&gt; x.V2GCapable);&#xD;
	j_ea.V2GCapable = false;&#xD;
	currentNbChargers--;&#xD;
	zero_Interface.c_orderedV2GChargers.remove(j_ea);&#xD;
	zero_Interface.c_orderedV2GChargers.add(0, j_ea);&#xD;
}&#xD;
&#xD;
// Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750326729005</Id>
						<Name>f_setDemandIncrease</Name>
						<X>60</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>demandReduction_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>f_setDemandReduction(gcList, -demandReduction_pct);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750328750011</Id>
						<Name>f_setVehiclesPrivateParking</Name>
						<X>890</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>privateParking_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int nbHousesWithEV = count(zero_Interface.energyModel.Houses, x -&gt; x.p_eigenOprit &amp;&amp; x.p_householdEV != null);&#xD;
int desiredNbOfHousesWithEV = roundToInt(privateParking_pct / 100 * zero_Interface.c_orderedVehiclesPrivateParking.size());&#xD;
&#xD;
// we scale the consumption instead of getting the diesel/EV parameter from avgc data to represent the 'size' of the car&#xD;
double ratioEVToDieselConsumption = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm / zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionCar_kWhpkm;&#xD;
&#xD;
while ( nbHousesWithEV &gt; desiredNbOfHousesWithEV){&#xD;
	J_EAVehicle j_ea = findFirst( zero_Interface.c_orderedVehiclesPrivateParking, h -&gt; h instanceof J_EAEV);&#xD;
	if (j_ea.vehicleScaling != 1) {&#xD;
		throw new RuntimeException("f_setVehiclesPrivateParking does not work with vehicles that have a vehicleScaling other than 1");&#xD;
	}&#xD;
	J_ActivityTrackerTrips triptracker = j_ea.tripTracker;&#xD;
	double energyConsumption_kWhpkm = j_ea.getEnergyConsumption_kWhpkm() / ratioEVToDieselConsumption; &#xD;
	j_ea.removeEnergyAsset();&#xD;
	zero_Interface.c_orderedVehiclesPrivateParking.remove(j_ea);&#xD;
	J_EADieselVehicle dieselCar = new J_EADieselVehicle(j_ea.getParentAgent(), energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, 1, OL_EnergyAssetType.DIESEL_VEHICLE, triptracker);&#xD;
	zero_Interface.c_orderedVehiclesPrivateParking.add(dieselCar);&#xD;
	nbHousesWithEV --;&#xD;
}&#xD;
while ( nbHousesWithEV &lt; desiredNbOfHousesWithEV){&#xD;
	J_EAVehicle j_ea = findFirst( zero_Interface.c_orderedVehiclesPrivateParking, h -&gt; h instanceof J_EADieselVehicle);&#xD;
	if (j_ea.vehicleScaling != 1) {&#xD;
		throw new RuntimeException("f_setVehiclesPrivateParking does not work with vehicles that have a vehicleScaling other than 1");&#xD;
	}&#xD;
	J_ActivityTrackerTrips triptracker = j_ea.tripTracker;&#xD;
	double energyConsumption_kWhpkm = j_ea.getEnergyConsumption_kWhpkm() * ratioEVToDieselConsumption;&#xD;
	j_ea.removeEnergyAsset();	&#xD;
	zero_Interface.c_orderedVehiclesPrivateParking.remove(j_ea);&#xD;
	double capacityElectricity_kW = randomTrue(0.6) ? randomTrue(0.4) ? 3.2 : 5.6 : 11.0;&#xD;
	double storageCapacity_kWh = uniform_discr(65,90);&#xD;
	J_EAEV ev = new J_EAEV(j_ea.getParentAgent(), capacityElectricity_kW, storageCapacity_kWh, 1, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, 1, OL_EnergyAssetType.ELECTRIC_VEHICLE, triptracker);	&#xD;
	zero_Interface.c_orderedVehiclesPrivateParking.add(ev);&#xD;
	nbHousesWithEV++;&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1722247653562</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1744962391299</Id>
						<Name>uI_Tabs</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Tabs</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
					<ContainerLink>
						<Id>1744962391306</Id>
						<Name>zero_Interface</Name>
						<X>150</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1722247653568</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1722349953637</Id>
								<Name>rect_genericFunctions</Name>
								<X>10</X>
								<Y>480</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>370</Width>
								<Height>620</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Group>
								<Id>1722328776701</Id>
								<Name>gr_electricityDemandSliders</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722328776703</Id>
										<Name>rect_electricityDemandSliders</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-32</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1722328776711</Id>
										<Name>t_electricityDemandReduction_pct</Name>
										<X>230</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricityDemandReduction_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722328776713</Id>
										<Name>sl_electricityDemandReduction_pct</Name>
										<X>260</X>
										<Y>15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandReduction( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricityDemandReduction_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>-50</MinValue>
											<MaxValue>50</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722328776715</Id>
										<Name>t_electricityDemandReductionDescription</Name>
										<X>10</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing verbruik</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722328776717</Id>
										<Name>t_solarDescription</Name>
										<X>15</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722328776719</Id>
										<Name>t_rooftopPVCompanies_pct</Name>
										<X>230</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_rooftopPVCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722328776721</Id>
										<Name>sl_rooftopPVCompanies_pct</Name>
										<X>260</X>
										<Y>75</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVSystemCompanies( zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true), sl_rooftopPVCompanies_pct.getValue(), sl_rooftopPVCompanies_pct );

if(zero_Interface.c_loadedMapOverlayTypes.get(zero_Interface.rb_mapOverlay.getValue()) == OL_MapOverlayTypes.PV_PRODUCTION){
	zero_Interface.rb_mapOverlay.setValue(zero_Interface.c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.PV_PRODUCTION),true);
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722328776723</Id>
										<Name>t_rooftopPVCompaniesDescription</Name>
										<X>15</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon op dak bedrijven</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722328776725</Id>
										<Name>t_largeScalePV_ha</Name>
										<X>230</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_largeScalePV_ha.getValue() + " ha"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722328776727</Id>
										<Name>sl_largeScalePV_ha</Name>
										<X>260</X>
										<Y>105</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVOnLand(sl_largeScalePV_ha.getValue() - p_currentPVOnLand_ha);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>p_currentPVOnLand_ha</MinValue>
											<MaxValue>p_currentPVOnLand_ha + 50</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722328776729</Id>
										<Name>t_largeScalePVDescription</Name>
										<X>15</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon op land</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722328776731</Id>
										<Name>t_windDescription</Name>
										<X>15</X>
										<Y>175</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Wind</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722328776737</Id>
										<Name>sl_largeScaleWind_MW</Name>
										<X>260</X>
										<Y>200</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setWindTurbines( sl_largeScaleWind_MW.getValue() - p_currentWindTurbines_MW);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>p_currentWindTurbines_MW</MinValue>
											<MaxValue>p_currentWindTurbines_MW + 10</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722328776739</Id>
										<Name>t_largeScaleWindDescription</Name>
										<X>15</X>
										<Y>205</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Wind op land</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722328776741</Id>
										<Name>t_largeScaleWind_MW</Name>
										<X>230</X>
										<Y>205</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_largeScaleWind_MW.getValue() + " MW"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Text>
										<Id>1722329161559</Id>
										<Name>t_rooftopPVHouses_pct</Name>
										<X>230</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_rooftopPVHouses_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_rooftopPVHouses_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722329161561</Id>
										<Name>sl_rooftopPVHouses_pct</Name>
										<X>260</X>
										<Y>135</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVSystemHouses( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_rooftopPVHouses_pct.getValue() );

if(zero_Interface.c_loadedMapOverlayTypes.get(zero_Interface.rb_mapOverlay.getValue()) == OL_MapOverlayTypes.PV_PRODUCTION){
	zero_Interface.rb_mapOverlay.setValue(zero_Interface.c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.PV_PRODUCTION),true);
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722329161563</Id>
										<Name>t_rooftopPVHousesDescription</Name>
										<X>15</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_rooftopPVHouses_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon op dak huizen</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Image>
										<Id>1746091167061</Id>
										<Name>i_householdPV</Name>
										<X>160</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_rooftopPVHouses_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdPV, zero_Interface.v_infoText.householdRooftopPV, i_householdPV.getX() + uI_Tabs.v_presentationXOffset, i_householdPV.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091167075</Id>
										<Name>i_landPV</Name>
										<X>160</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_landPV, zero_Interface.v_infoText.landPV, i_landPV.getX() + uI_Tabs.v_presentationXOffset, i_landPV.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091167087</Id>
										<Name>i_companyPV</Name>
										<X>160</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyPV, zero_Interface.v_infoText.companyRooftopPV, i_companyPV.getX() + uI_Tabs.v_presentationXOffset, i_companyPV.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091167099</Id>
										<Name>i_electricityReduction</Name>
										<X>160</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_electricityReduction, zero_Interface.v_infoText.electricityDemandReduction, i_electricityReduction.getX() + uI_Tabs.v_presentationXOffset, i_electricityReduction.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091167111</Id>
										<Name>i_landWind</Name>
										<X>160</X>
										<Y>205</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_landWind, zero_Interface.v_infoText.landWind, i_landWind.getX() + uI_Tabs.v_presentationXOffset, i_landWind.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1722334503404</Id>
								<Name>rect_PVFunctions</Name>
								<X>40</X>
								<Y>700</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-10496</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>200</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722334611918</Id>
								<Name>t_PVFunctionsDescription</Name>
								<X>190</X>
								<Y>710</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>PV Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Rectangle>
								<Id>1722334647855</Id>
								<Name>rect_windFunctions</Name>
								<X>40</X>
								<Y>950</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-14774017</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722334664308</Id>
								<Name>t_windFunctionsDescription</Name>
								<X>190</X>
								<Y>960</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Wind Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Rectangle>
								<Id>1722335253828</Id>
								<Name>rect_demandFunctions</Name>
								<X>40</X>
								<Y>550</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-8355840</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722335253832</Id>
								<Name>t_demandFunctionsDescription</Name>
								<X>190</X>
								<Y>560</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Demand Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1722349990233</Id>
								<Name>t_genericFunctions</Name>
								<X>100</X>
								<Y>500</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Generic Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>22</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1728384392418</Id>
								<Name>gr_electricityDemandSliders_Businesspark</Name>
								<X>400</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1728384392420</Id>
										<Name>rect_electricityDemandSliders_Businesspark</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-32</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1728384392422</Id>
										<Name>t_electricityDemandReduction_pct_Businesspark</Name>
										<X>230</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricityDemandReduction_pct_Businesspark.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1728384392424</Id>
										<Name>sl_electricityDemandReduction_pct_Businesspark</Name>
										<X>260</X>
										<Y>15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandReduction( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricityDemandReduction_pct_Businesspark.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>50</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1728384392426</Id>
										<Name>txt_electricityDemandReductionDescription_Businesspark</Name>
										<X>10</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing verbruik</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1728384392428</Id>
										<Name>txt_solarDescription_Businesspark</Name>
										<X>15</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1728384392430</Id>
										<Name>t_rooftopPVCompanies_pct_Businesspark</Name>
										<X>230</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_rooftopPVCompanies_pct_Businesspark.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1728384392432</Id>
										<Name>sl_rooftopPVCompanies_pct_Businesspark</Name>
										<X>260</X>
										<Y>75</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVSystemCompanies( zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true), sl_rooftopPVCompanies_pct_Businesspark.getValue(), sl_rooftopPVCompanies_pct_Businesspark );

//If on pv map overlay, adjust colouring
if(zero_Interface.c_loadedMapOverlayTypes.get(zero_Interface.rb_mapOverlay.getValue()) == OL_MapOverlayTypes.PV_PRODUCTION){
	zero_Interface.rb_mapOverlay.setValue(zero_Interface.c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.PV_PRODUCTION),true);
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1728384392434</Id>
										<Name>txt_rooftopPVCompaniesDescription_Businesspark</Name>
										<X>15</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon op dak bedrijven</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1728384392436</Id>
										<Name>t_largeScalePV_ha_Businesspark</Name>
										<X>230</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_largeScalePV_ha_Businesspark.getIntValue() + " ha"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1728384392438</Id>
										<Name>sl_largeScalePV_ha_Businesspark</Name>
										<X>260</X>
										<Y>105</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVOnLand(sl_largeScalePV_ha_Businesspark.getValue()- p_currentPVOnLand_ha);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>p_currentPVOnLand_ha</MinValue>
											<MaxValue>p_currentPVOnLand_ha + 50</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1728384392440</Id>
										<Name>txt_largeScalePVDescription_Businesspark</Name>
										<X>15</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zon op land</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1728384392442</Id>
										<Name>txt_windDescription_Businesspark</Name>
										<X>15</X>
										<Y>155</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Wind</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1728384392444</Id>
										<Name>sl_largeScaleWind_MW_Businesspark</Name>
										<X>260</X>
										<Y>180</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setWindTurbines( sl_largeScaleWind_MW_Businesspark.getValue() - p_currentWindTurbines_MW);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>p_currentWindTurbines_MW</MinValue>
											<MaxValue>p_currentWindTurbines_MW + 10</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1728384392446</Id>
										<Name>txt_largeScaleWindDescription_Businesspark</Name>
										<X>15</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Wind op land</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1728384392448</Id>
										<Name>t_largeScaleWind_MW_Businesspark</Name>
										<X>230</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_largeScaleWind_MW_Businesspark.getIntValue() + " MW"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Image>
										<Id>1746091438812</Id>
										<Name>i_landPV_Businesspark</Name>
										<X>160</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_landPV_Businesspark, zero_Interface.v_infoText.landPV, i_landPV_Businesspark.getX() + uI_Tabs.v_presentationXOffset, i_landPV_Businesspark.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091438857</Id>
										<Name>i_companyPV_Businesspark</Name>
										<X>160</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyPV_Businesspark, zero_Interface.v_infoText.companyRooftopPV, i_companyPV_Businesspark.getX() + uI_Tabs.v_presentationXOffset, i_companyPV_Businesspark.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091438909</Id>
										<Name>i_electricityReduction_Businesspark</Name>
										<X>160</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_electricityReduction_Businesspark, zero_Interface.v_infoText.electricityDemandReduction, i_electricityReduction_Businesspark.getX() + uI_Tabs.v_presentationXOffset, i_electricityReduction_Businesspark.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746091438954</Id>
										<Name>i_landWind_Businesspark</Name>
										<X>160</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_landWind_Businesspark, zero_Interface.v_infoText.landWind, i_landWind_Businesspark.getX() + uI_Tabs.v_presentationXOffset, i_landWind_Businesspark.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Group>
								<Id>1750063382217</Id>
								<Name>gr_electricityDemandSlidersResidentialArea</Name>
								<X>800</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1750063382219</Id>
										<Name>rect_electricityDemandSlidersResidentialArea</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>5</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-32</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750063382221</Id>
										<Name>t_electricityDemandIncreaseResidentialArea_pct</Name>
										<X>235</X>
										<Y>145</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_electricityDemandIncreaseResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0%</Text>
										<TextCode>sl_electricityDemandIncreaseResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1750063382223</Id>
										<Name>t_householdPVResidentialArea_pct</Name>
										<X>235</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdPVResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>10%</Text>
										<TextCode>sl_householdPVResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382225</Id>
										<Name>sl_householdPVResidentialArea_pct</Name>
										<X>265</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVSystemHouses( findAll(zero_Interface.energyModel.Houses, x -&gt; true), sl_householdPVResidentialArea_pct.getValue() );

//If on pv map overlay, adjust colouring
if(zero_Interface.c_loadedMapOverlayTypes.get(zero_Interface.rb_mapOverlay.getValue()) == OL_MapOverlayTypes.PV_PRODUCTION){
	zero_Interface.rb_mapOverlay.setValue(zero_Interface.c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.PV_PRODUCTION),true);
}

// Also updates the home batteries
f_setResidentialBatteries( sl_householdBatteriesResidentialArea_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382227</Id>
										<Name>t_householdPVResidentialAreaDescription</Name>
										<X>20</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdPVResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Share of houses with PV</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1750063382229</Id>
										<Name>t_electricitDemandSlidersResidentialAreaDescription</Name>
										<X>20</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Households</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382231</Id>
										<Name>sl_publicChargersResidentialArea_pct</Name>
										<X>265</X>
										<Y>207</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPublicChargingStations(sl_publicChargersResidentialArea_pct.getIntValue());</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382233</Id>
										<Name>t_publicEVsResidentialAreaDescription</Name>
										<X>20</X>
										<Y>212</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_publicChargersResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Public chargers in area</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1750063382235</Id>
										<Name>t_publicEVsResidentialArea_pct</Name>
										<X>245</X>
										<Y>212</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_publicChargersResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0%</Text>
										<TextCode>sl_publicChargersResidentialArea_pct.getIntValue() + " %"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Text>
										<Id>1750063382237</Id>
										<Name>t_householdBatteriesResidentialAreaDescription</Name>
										<X>30</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdBatteriesResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Of which with batteries</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382239</Id>
										<Name>sl_householdBatteriesResidentialArea_pct</Name>
										<X>265</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setResidentialBatteries( sl_householdBatteriesResidentialArea_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382241</Id>
										<Name>t_householdBatteriesResidentialArea_pct</Name>
										<X>235</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdBatteriesResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0%</Text>
										<TextCode>sl_householdBatteriesResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382243</Id>
										<Name>sl_gridBatteriesResidentialArea_kWh</Name>
										<X>266</X>
										<Y>310</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setGridBatteries( sl_gridBatteriesResidentialArea_kWh.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>1000</MaxValue>
											<Step>10</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382245</Id>
										<Name>t_gridBatteriesResidentialAreaDescription</Name>
										<X>20</X>
										<Y>316</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_gridBatteriesResidentialArea_kWh.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Shared battery capacity</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1750063382247</Id>
										<Name>t_gridBatteriesResidentialArea_kW</Name>
										<X>236</X>
										<Y>315</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_gridBatteriesResidentialArea_kWh.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_gridBatteriesResidentialArea_kWh.getIntValue() + " kWh"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382249</Id>
										<Name>chargingMethodResidentialArea</Name>
										<X>31</X>
										<Y>239</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="310" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>switch (chargingMethodResidentialArea.getValue()){
	case 0:
		gr_settingsV1G.setVisible(false);
		gr_settingsV2G.setVisible(false);
		
		//zero_Interface.energyModel.v_smartChargingActive = false;
		//zero_Interface.energyModel.v_V2GProbability = 0;
		for( GCHouse house : zero_Interface.energyModel.Houses ){
			house.p_chargingAttitudeVehicles = OL_ChargingAttitude.SIMPLE;
		}
		break;
	case 1:
		gr_settingsV1G.setVisible(true);
		gr_settingsV2G.setVisible(false);
		//zero_Interface.energyModel.v_smartChargingActive = true;
		for( GCHouse house : zero_Interface.energyModel.Houses ){
			house.p_chargingAttitudeVehicles = OL_ChargingAttitude.V1G;
		}
		//zero_Interface.energyModel.v_V2GProbability = 0;
		break;
	case 2:
		gr_settingsV1G.setVisible(false);
		gr_settingsV2G.setVisible(true);
		for( GCHouse house : zero_Interface.energyModel.Houses ){
			house.p_chargingAttitudeVehicles = OL_ChargingAttitude.V2G; 
		}
		//zero_Interface.energyModel.v_smartChargingActive = true;
		//zero_Interface.energyModel.v_V2GProbability = 1;
		break;
}

// Update variable to change to custom scenario
if(!zero_Interface.b_runningMainInterfaceScenarios){
	zero_Interface.b_changeToCustomScenario = true;
}

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<Orientation>HORIZONTAL</Orientation>
											<Button>Uncontrolled charging</Button>
											<Button>V1G smart</Button>
											<Button>V2G smart</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382251</Id>
										<Name>t_electricityDemandIncreaseResidentialAreaDescription</Name>
										<X>20</X>
										<Y>145</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_electricityDemandIncreaseResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Electricity consumption growth</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382253</Id>
										<Name>sl_electricityDemandIncreaseResidentialArea_pct</Name>
										<X>265</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandIncrease( new ArrayList&lt;GridConnection&gt;(findAll(zero_Interface.energyModel.Houses, x -&gt; true)), sl_electricityDemandIncreaseResidentialArea_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>-50</MinValue>
											<MaxValue>50</MaxValue>
											<Step>2</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382255</Id>
										<Name>t_householdElectricCookingResidentialAreaDescription</Name>
										<X>20</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdElectricCookingResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Perc. electric cooking</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382257</Id>
										<Name>sl_householdElectricCookingResidentialArea_pct</Name>
										<X>265</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setElectricCooking( sl_householdElectricCookingResidentialArea_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>2</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382259</Id>
										<Name>t_householdElectricCookingResidentialArea_pct</Name>
										<X>235</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdElectricCookingResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0%</Text>
										<TextCode>sl_householdElectricCookingResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382261</Id>
										<Name>button_trafoReinforcement</Name>
										<X>238</X>
										<Y>0</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="130" Height="25">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>//gr_electricityDemandSlidersResidentialAreaScale.setVisible(false);
gr_trafoReinforcement.setVisible(true);
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Trafo reinforcement</LabelText>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382263</Id>
										<Name>t_privateEVsResidentialAreaDescription</Name>
										<X>20</X>
										<Y>186</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_privateEVsResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Private EV share</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382265</Id>
										<Name>sl_privateEVsResidentialArea_pct</Name>
										<X>265</X>
										<Y>180</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>/*
int sliderValue = sl_privateEVsResidentialArea_pct.getIntValue();
if ( sliderValue &lt; p_minPVHouseholdSlider ){
	sliderValue = p_minPVHouseholdSlider;
	sl_publicEVsResidentialArea_pct.setValue( p_minPVHouseholdSlider, false);
	traceln("SLIDER MESSAGE: Can't set slider lower than the initial value of simulated area");
}
*/
f_setVehiclesPrivateParking(sl_privateEVsResidentialArea_pct.getValue());</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382267</Id>
										<Name>t_privateEVsResidentialArea_pct</Name>
										<X>244</X>
										<Y>186</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_privateEVsResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0%</Text>
										<TextCode>sl_privateEVsResidentialArea_pct.getIntValue() + " %"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Group>
										<Id>1750246031130</Id>
										<Name>gr_settingsV1G</Name>
										<X>10</X>
										<Y>270</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1750246031132</Id>
												<Name>sl_chargersThatSupportV1G_pct</Name>
												<X>256</X>
												<Y>4</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>f_setV1GChargerCapabilities( sl_chargersThatSupportV1G_pct.getValue() );</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>0</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>0</MinValue>
													<MaxValue>100</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1750246031134</Id>
												<Name>t_chargersThatSupportV1GDescription</Name>
												<X>10</X>
												<Y>10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>sl_chargersThatSupportV1G_pct.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Chargers that support this</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1750246031136</Id>
												<Name>t_chargersThatSupportV1G_pct</Name>
												<X>226</X>
												<Y>9</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>sl_chargersThatSupportV1G_pct.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>#</Text>
												<TextCode>sl_chargersThatSupportV1G_pct.getIntValue() + " %"</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Image>
												<Id>1752232837047</Id>
												<Name>i_householdPublicChargersV1G</Name>
												<X>180</X>
												<Y>10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<VisibleCode>sl_chargersThatSupportV1G_pct.isVisible()</VisibleCode>
												<OnClickCode>zero_Interface.f_setInfoText(i_householdPublicChargersV1G, zero_Interface.v_infoText.householdPublicParkingV1G, i_householdPublicChargersV1G.getX() + gr_settingsV1G.getX() + uI_Tabs.v_presentationXOffset, i_householdPublicChargersV1G.getY() + gr_settingsV1G.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>20</Width>
												<Height>20</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_i.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
									<Group>
										<Id>1750246032749</Id>
										<Name>gr_settingsV2G</Name>
										<X>10</X>
										<Y>270</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1750246032751</Id>
												<Name>sl_chargersThatSupportV2G_pct</Name>
												<X>256</X>
												<Y>4</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>f_setV2GChargerCapabilities( sl_chargersThatSupportV2G_pct.getValue() );</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>0</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>0</MinValue>
													<MaxValue>100</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1750246032753</Id>
												<Name>t_chargersThatSupportV2GDescription</Name>
												<X>10</X>
												<Y>10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>sl_chargersThatSupportV2G_pct.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Chargers that support this</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1750246032755</Id>
												<Name>t_chargersThatSupportV2G_pct</Name>
												<X>226</X>
												<Y>9</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>sl_chargersThatSupportV2G_pct.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>#</Text>
												<TextCode>sl_chargersThatSupportV2G_pct.getIntValue() + " %"</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Image>
												<Id>1752232831588</Id>
												<Name>i_householdPublicChargersV2G</Name>
												<X>180</X>
												<Y>10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<VisibleCode>sl_chargersThatSupportV2G_pct.isVisible()</VisibleCode>
												<OnClickCode>zero_Interface.f_setInfoText(i_householdPublicChargersV2G, zero_Interface.v_infoText.householdPublicParkingV2G, i_householdPublicChargersV2G.getX() + gr_settingsV2G.getX() + uI_Tabs.v_presentationXOffset, i_householdPublicChargersV2G.getY() + gr_settingsV2G.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>20</Width>
												<Height>20</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_i.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
									<Image>
										<Id>1752232850349</Id>
										<Name>i_householdRooftopPV</Name>
										<X>190</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdPVResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdRooftopPV, zero_Interface.v_infoText.householdRooftopPV, i_householdRooftopPV.getX() + uI_Tabs.v_presentationXOffset, i_householdRooftopPV.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850368</Id>
										<Name>i_householdBatteries</Name>
										<X>190</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdBatteriesResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdBatteries, zero_Interface.v_infoText.householdBatteries, i_householdBatteries.getX() + uI_Tabs.v_presentationXOffset, i_householdBatteries.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850385</Id>
										<Name>i_householdElectricCooking</Name>
										<X>190</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdElectricCookingResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdElectricCooking, zero_Interface.v_infoText.householdElectricCooking, i_householdElectricCooking.getX() + uI_Tabs.v_presentationXOffset, i_householdElectricCooking.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850402</Id>
										<Name>i_householdElectricityGrowth</Name>
										<X>190</X>
										<Y>145</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_electricityDemandIncreaseResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdElectricityGrowth, zero_Interface.v_infoText.householdElectricityConsumptionGrowth, i_householdElectricityGrowth.getX() + uI_Tabs.v_presentationXOffset, i_householdElectricityGrowth.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850420</Id>
										<Name>i_householdPrivateEV</Name>
										<X>190</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_privateEVsResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdPrivateEV, zero_Interface.v_infoText.householdPrivateParking, i_householdPrivateEV.getX() + uI_Tabs.v_presentationXOffset, i_householdPrivateEV.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850437</Id>
										<Name>i_householdPublicChargers</Name>
										<X>190</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_publicChargersResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdPublicChargers, zero_Interface.v_infoText.householdPublicParking, i_householdPublicChargers.getX() + uI_Tabs.v_presentationXOffset, i_householdPublicChargers.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850455</Id>
										<Name>i_householdPublicChargersBehaviour</Name>
										<X>345</X>
										<Y>245</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>chargingMethodResidentialArea.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdPublicChargersBehaviour, zero_Interface.v_infoText.householdPublicChargersBehaviour, i_householdPublicChargersBehaviour.getX() + uI_Tabs.v_presentationXOffset, i_householdPublicChargersBehaviour.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752232850473</Id>
										<Name>i_householdNeighbourhoodBatteries</Name>
										<X>190</X>
										<Y>315</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_gridBatteriesResidentialArea_kWh.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdNeighbourhoodBatteries, zero_Interface.v_infoText.neighbourhoodBatteries, i_householdNeighbourhoodBatteries.getX() + uI_Tabs.v_presentationXOffset, i_householdNeighbourhoodBatteries.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Group>
								<Id>1750063382277</Id>
								<Name>gr_trafoReinforcement</Name>
								<X>1200</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1750063382279</Id>
										<Name>rect_trafoReinforcement</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-32</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750063382281</Id>
										<Name>t_addTrafoDescription</Name>
										<X>10</X>
										<Y>70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Trafostation uitbreiden/bijplaatsen</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>11</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382283</Id>
										<Name>sl_trafoReinforcement</Name>
										<X>20</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="150" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>1000</MaxValue>
											<Step>50</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382285</Id>
										<Name>t_minTrafoReinforcement</Name>
										<X>20</X>
										<Y>120</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>min</Text>
										<TextCode>sl_trafoReinforcement.getMin()</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1750063382287</Id>
										<Name>t_maxTrafoReinforcement</Name>
										<X>170</X>
										<Y>120</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>max</Text>
										<TextCode>sl_trafoReinforcement.getMax()</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Text>
										<Id>1750063382289</Id>
										<Name>t_trafoReinforcementValue</Name>
										<X>95</X>
										<Y>120</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>value</Text>
										<TextCode>sl_trafoReinforcement.getIntValue() + " kVA"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382291</Id>
										<Name>t_confirmTrafoReinforcement</Name>
										<X>210</X>
										<Y>94</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="142" Height="32">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>zero_Interface.v_clickedGridNode.p_capacity_kW += sl_trafoReinforcement.getValue();

zero_Interface.f_setTrafoText();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Voer netuitbreiding uit</LabelText>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1750063382293</Id>
										<Name>t_currentTrafoReinforcement</Name>
										<X>200</X>
										<Y>70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Huidige LS-capaciteit: 300 kVA</Text>
										<TextCode>"Huidige LS-capaciteit: " + roundToInt(zero_Interface.v_clickedGridNode.p_capacity_kW)  + " kVA"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>11</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382295</Id>
										<Name>t_resetTrafoReinforcement</Name>
										<X>215</X>
										<Y>300</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="140" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>for (GridNode GN : zero_Interface.energyModel.f_getGridNodesNotTopLevel() ){
	GN.p_capacity_kW = GN.p_originalCapacity_kW;
}
for (GridNode GN : zero_Interface.energyModel.f_getGridNodesTopLevel() ){
	GN.p_capacity_kW = GN.p_originalCapacity_kW;
} 
zero_Interface.f_setTrafoText();
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Reset trafostations</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1750063382297</Id>
										<Name>t_closeTrafoReinforcement</Name>
										<X>350</X>
										<Y>2</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="18" Height="18">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>gr_trafoReinforcement.setVisible(false);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="8" Style="0"/>
											<LabelText/>
										</ExtendedProperties>
									</Control>
									<Line>
										<Id>1750063382299</Id>
										<Name>line_closeTrafoReinforcement1</Name>
										<X>353</X>
										<Y>17</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-2894893</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>12</Dx>
										<Dy>-12</Dy>
										<Dz>0</Dz>
									</Line>
									<Line>
										<Id>1750063382301</Id>
										<Name>line_closeTrafoReinforcement2</Name>
										<X>365</X>
										<Y>17</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-2894893</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>-12</Dx>
										<Dy>-12</Dy>
										<Dz>0</Dz>
									</Line>
									<Text>
										<Id>1750063382303</Id>
										<Name>t_titleTrafoReinforcement</Name>
										<X>20</X>
										<Y>21</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Trafostation reinforcement</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1722253108625</Id>
				<Name>tabHeating</Name>
				<AdditionalClassCode>// Default Sliders&#xD;
public ShapeGroup getGroupHeatDemandSliders() {&#xD;
	return this.gr_heatDemandSliders;&#xD;
}&#xD;
&#xD;
public ShapeGroup getGroupHeatDeandSliders_ResidentialArea() {&#xD;
	return this.gr_heatDeandSlidersResidentialArea;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandReductionCompanies_pct() { &#xD;
	return this.sl_heatDemandReductionCompanies_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderGasBurnerCompanies_pct() { &#xD;
	return this.sl_gasBurnerCompanies_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderElectricHeatPumpCompanies_pct() { &#xD;
	return this.sl_electricHeatPumpCompanies_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandReductionHouseholds_pct() { &#xD;
	return this.sl_heatDemandReductionHouseholds_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderGasBurnerHouseholds_pct() { &#xD;
	return this.sl_gasBurnerHouseholds_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderElectricHeatPumpHouseholds_pct() { &#xD;
	return this.sl_electricHeatPumpHouseholds_pct;&#xD;
}&#xD;
&#xD;
// Residential Tab Sliders&#xD;
public ShapeGroup getGroupHeatDemandSlidersResidentialArea() {&#xD;
	return this.gr_heatDemandSlidersResidentialArea;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandSlidersResidentialAreaHouseholdsGasBurner_pct() { &#xD;
	return this.sl_householdGasBurnerResidentialArea_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct() { &#xD;
	return this.sl_householdElectricHeatPumpResidentialArea_pct;&#xD;
}&#xD;
&#xD;
// Company Tab Sliders&#xD;
public ShapeGroup getGroupHeatDemandSlidersCompanies() {&#xD;
	return this.gr_heatDemandSlidersCompanies;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandSlidersCompaniesHeatDemandReductionCompanies_pct() { &#xD;
	return this.sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandSlidersCompaniesGasBurnerCompanies_pct() { &#xD;
	return this.sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHeatDemandSlidersCompaniesElectricHeatPumpCompanies_pct() { &#xD;
	return this.sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct;&#xD;
}&#xD;
</AdditionalClassCode>
				<Import>import zeroPackage.ZeroMath;</Import>
				<ExtendsReference>
					<PackageName>zerointerfaceloader</PackageName>
					<ClassName>tabArea</ClassName>
				</ExtendsReference>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1722253108631</Id>
					<Name>1722253108631</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089977</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1722253108628</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1722253108632</CurrentLevel>
				<ConnectionsId>1722253108626</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1729262524509</Id>
						<Name>v_totalNumberOfGhostHeatingSystems_ElectricHeatpumps</Name>
						<X>60</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729262555712</Id>
						<Name>v_totalNumberOfGhostHeatingSystems_HybridHeatpumps</Name>
						<X>60</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>int</ReturnType>
						<Id>1722256102007</Id>
						<Name>f_setHeatingSystemsCompanies</Name>
						<Description>Function that adds or removes heatpumps to utility connections. Takes a percentage as a parameter and runs untill that percentage of all the utility connections has a heatpump. If a new heatpump is created it determines its heat demand on a heat_demand consumption asset if it exists, else it looks for a heat profile asset. The function also updates the radio button in the company UI.</Description>
						<X>70</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCUtility&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderGasburner</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHeatpump</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double targetHeatPump_pct = sliderHeatpump.getValue();&#xD;
&#xD;
//Set the sliders if companyUI is present using the companyUI functions, if not: do it the normal way&#xD;
if(zero_Interface.c_companyUIs.size()&gt;0){&#xD;
 	f_setHeatingSystemsWithCompanyUI(gcList, targetHeatPump_pct, sliderGasburner, sliderHeatpump);&#xD;
}&#xD;
else{&#xD;
	ArrayList&lt;GCUtility&gt; companies = new ArrayList&lt;GCUtility&gt;(zero_Interface.c_orderedHeatingSystemsCompanies.stream().filter(gcList::contains).toList());&#xD;
	double nbHeatPumps = count(gcList, gc -&gt; gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);&#xD;
	int targetHeatPumpAmount = roundToInt( targetHeatPump_pct / 100.0 * gcList.size());&#xD;
	&#xD;
	while ( targetHeatPumpAmount &lt; nbHeatPumps) { // remove excess heatpumps, replace with gasburners.&#xD;
		GCUtility company = findFirst(companies, x-&gt;x.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);&#xD;
		if (company != null) {&#xD;
			company.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
			nbHeatPumps--;&#xD;
			companies.remove(company);&#xD;
			zero_Interface.c_orderedHeatingSystemsCompanies.remove(company);&#xD;
			zero_Interface.c_orderedHeatingSystemsCompanies.add(0, company);&#xD;
			double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(company);&#xD;
			new J_EAConversionGasBurner(company, peakHeatDemand_kW, zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner, zero_Interface.energyModel.p_timeStep_h, zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC);&#xD;
			company.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
		}&#xD;
		else {&#xD;
			throw new RuntimeException("Can't find Heatpump in company that should have heatpump in f_setHeatingSystemsCompanies.");&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	while ( targetHeatPumpAmount &gt; nbHeatPumps) { // remove gasburners, add heatpumps.&#xD;
		GCUtility company = findFirst(companies, x -&gt; x.p_primaryHeatingAsset instanceof J_EAConversionGasBurner);&#xD;
		if (company != null) {			&#xD;
			company.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
			nbHeatPumps++;		&#xD;
			companies.remove(company);&#xD;
			zero_Interface.c_orderedHeatingSystemsCompanies.remove(company);&#xD;
			zero_Interface.c_orderedHeatingSystemsCompanies.add(0, company);	&#xD;
			double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(company);&#xD;
			new J_EAConversionHeatPump(company, peakHeatDemand_kW, 0.5, zero_Interface.energyModel.p_timeStep_h, 60,  zero_Interface.energyModel.v_currentAmbientTemperature_degC, 0, 1, OL_AmbientTempType.AMBIENT_AIR);				&#xD;
			company.p_heatingType = OL_GridConnectionHeatingType.HEATPUMP_AIR;&#xD;
		} &#xD;
		else {&#xD;
			throw new RuntimeException("Can't find Gasburner in company that should have gasburner in f_setHeatingSystemsCompanies.");&#xD;
		}	&#xD;
	}	&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256221655</Id>
						<Name>f_setHeatingSystemsHouseholds</Name>
						<Description>Function that adds or removes heatpumps to houses. Takes a percentage as a parameter and runs untill that percentage of all the houses has a heatpump. If a new heatpump is created it determines its heat demand on a heat_demand consumption asset if it exists, else it looks for a heat profile asset.</Description>
						<X>70</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCHouse&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>targetHeatPump_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>ArrayList&lt;GCHouse&gt; houses = new ArrayList&lt;GCHouse&gt;(zero_Interface.c_orderedHeatingSystemsHouses.stream().filter(gcList::contains).toList());&#xD;
double nbHeatPumps = count(gcList, gc -&gt; gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);&#xD;
int targetHeatPumpAmount = roundToInt( targetHeatPump_pct / 100.0 * gcList.size());&#xD;
&#xD;
while ( nbHeatPumps &gt; targetHeatPumpAmount) { // remove excess heatpumps, replace with gasburners.&#xD;
	GCHouse house = findFirst(houses, x-&gt;x.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);&#xD;
	if (house != null) {&#xD;
		house.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
		nbHeatPumps--;&#xD;
		houses.remove(house);&#xD;
		zero_Interface.c_orderedHeatingSystemsHouses.remove(house);&#xD;
		zero_Interface.c_orderedHeatingSystemsHouses.add(0, house);&#xD;
		double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(house);&#xD;
		new J_EAConversionGasBurner(house, peakHeatDemand_kW, zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner, zero_Interface.energyModel.p_timeStep_h, zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC);&#xD;
		house.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
	}&#xD;
	else {&#xD;
		throw new RuntimeException("Can't find Heatpump in house that should have heatpump in f_setHeatingSystemsHouseholds.");&#xD;
	}&#xD;
}&#xD;
&#xD;
while ( nbHeatPumps &lt; targetHeatPumpAmount) { // remove gasburners, add heatpumps.&#xD;
	GCHouse house = findFirst(houses, x -&gt; x.p_primaryHeatingAsset instanceof J_EAConversionGasBurner);&#xD;
	if (house != null) {			&#xD;
		house.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
		nbHeatPumps++;		&#xD;
		houses.remove(house);&#xD;
		zero_Interface.c_orderedHeatingSystemsHouses.remove(house);&#xD;
		zero_Interface.c_orderedHeatingSystemsHouses.add(0, house);		&#xD;
		double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(house);&#xD;
		new J_EAConversionHeatPump(house, peakHeatDemand_kW, 0.5, zero_Interface.energyModel.p_timeStep_h, 60,  zero_Interface.energyModel.v_currentAmbientTemperature_degC, 0, 1, OL_AmbientTempType.AMBIENT_AIR);				&#xD;
		house.p_heatingType = OL_GridConnectionHeatingType.HEATPUMP_AIR;&#xD;
	} &#xD;
	else {&#xD;
		throw new RuntimeException("Can't find Gasburner in house that should have gasburner in f_setHeatingSystemsHouseholds.");&#xD;
	}	&#xD;
}	&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256269495</Id>
						<Name>f_setHeatingSliders</Name>
						<Description>Function that calculates all the values of the other sliders and sets them without calling an action. Takes as parameters the index of the slider which should not be touched as well as all the sliders. HybridHeatPump and DistrictHeating sliders are optional and an argument of null can be passed. </Description>
						<X>70</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>sliderIndex</Name>
							<Type>int</Type>
						</Parameter>
						<Parameter>
							<Name>gasBurnerSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>heatPumpSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>hybridHeatPumpSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>districtHeatingSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pct_naturalGasBurner = gasBurnerSlider.getValue();&#xD;
double pct_electricHeatPump = heatPumpSlider.getValue();&#xD;
double pct_hybridHeatPump = 0;&#xD;
double pct_districtHeating = 0;&#xD;
&#xD;
if ( hybridHeatPumpSlider != null ) {&#xD;
	pct_hybridHeatPump = hybridHeatPumpSlider.getValue();&#xD;
}&#xD;
if ( districtHeatingSlider != null ) {&#xD;
	pct_districtHeating = districtHeatingSlider.getValue();&#xD;
}&#xD;
&#xD;
//Set array with pct values&#xD;
double pctArray[] = {pct_naturalGasBurner, pct_electricHeatPump, pct_hybridHeatPump, pct_districtHeating};&#xD;
double pctExcess = Arrays.stream(pctArray).sum() - 100;&#xD;
for (int i = 0; i &lt; 4; i++){&#xD;
	if (i != (int) sliderIndex) {&#xD;
		pctArray[i] = max(0, pctArray[i] - pctExcess);&#xD;
		pctExcess = Arrays.stream(pctArray).sum() - 100;&#xD;
	}&#xD;
}&#xD;
if (pctExcess != 0) {&#xD;
	traceln("Sliders don't add up to 100%!");&#xD;
}&#xD;
&#xD;
// Set Sliders&#xD;
gasBurnerSlider.setValue(pctArray[0], false);&#xD;
heatPumpSlider.setValue(pctArray[1], false);&#xD;
if ( hybridHeatPumpSlider != null ) {&#xD;
	hybridHeatPumpSlider.setValue(pctArray[2], false);&#xD;
}&#xD;
if ( districtHeatingSlider != null ) {&#xD;
	districtHeatingSlider.setValue(pctArray[3], false);&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722335783993</Id>
						<Name>f_setDemandReductionHeating</Name>
						<Description>Function that reduces the heat demand of all profile and consumption assets.  Takes as arguments a list of GridConnections to effect and a percentage to reduce by compared to the default value of the assets. Does not effect heating demand from gridconnection that have a thermal building model. </Description>
						<X>70</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>demandReduction_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double scalingFactor = 1 - demandReduction_pct/100;&#xD;
&#xD;
for (GridConnection gc : gcList) {&#xD;
	// Set Consumption Assets&#xD;
	for (J_EAConsumption j_ea : gc.c_consumptionAssets) {&#xD;
		if (j_ea.getEAType() == OL_EnergyAssetType.HEAT_DEMAND) {&#xD;
			j_ea.setConsumptionScaling_fr( scalingFactor );&#xD;
		}&#xD;
	}&#xD;
	// Set Profile Assets&#xD;
	for (J_EAProfile j_ea : gc.c_profileAssets) {&#xD;
		if (j_ea.energyCarrier == OL_EnergyCarriers.HEAT) {&#xD;
			j_ea.resetEnergyProfile();&#xD;
			j_ea.scaleEnergyProfile( scalingFactor );&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	// Update Company UI&#xD;
	if (zero_Interface.c_companyUIs.size()&gt;0){&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			companyUI.sl_heatDemandCompanyReduction.setValue(demandReduction_pct, false);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>int</ReturnType>
						<Id>1729259449060</Id>
						<Name>f_setHeatingSystemsWithCompanyUI</Name>
						<X>90</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCUtility&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>targetHeatPump_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>sliderGasburner</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHeatpump</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>ArrayList&lt;GCUtility&gt; companies = new ArrayList&lt;GCUtility&gt;(zero_Interface.c_orderedHeatingSystemsCompanies.stream().filter(gcList::contains).filter(x -&gt; x.v_isActive).toList());&#xD;
int nbActiveCompanies = companies.size();&#xD;
Pair&lt;Integer, Integer&gt; pair = f_calculateNumberOfGhostHeatingSystems(companies);&#xD;
traceln("ghost pair: " + pair);&#xD;
int nbOfGhostHeatingSystems = pair.getFirst() + pair.getSecond(); // Both Electric and Hybrid heatpumps&#xD;
int nbHeatPumps = count(companies, gc -&gt; gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump) + nbOfGhostHeatingSystems;&#xD;
int targetHeatPumpAmount = roundToInt( targetHeatPump_pct / 100.0 * nbActiveCompanies);&#xD;
&#xD;
&#xD;
while ( targetHeatPumpAmount &lt; nbHeatPumps){ // remove excess heatpumps of companies that didnt start with a heatpump, replace with gasburners.&#xD;
	GCUtility company = findFirst(companies, gc -&gt; gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);&#xD;
	if (company != null) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(company.p_owner.p_connectionOwnerIndexNr);&#xD;
		&#xD;
		companyUI.b_runningMainInterfaceSlider = true;&#xD;
		if(companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) != company){&#xD;
			int i = indexOf(companyUI.c_ownedGridConnections.stream().toArray(), company);&#xD;
			companyUI.GCnr_selection.setValue(i, true);&#xD;
		}&#xD;
		// rbSetting Bugfix, does not change the heating system if the radiobutton was disabled!			&#xD;
		boolean rbSetting = companyUI.rb_heatingTypePrivateUI.isEnabled();&#xD;
		companyUI.rb_heatingTypePrivateUI.setEnabled(true);&#xD;
		companyUI.rb_heatingTypePrivateUI.setValue(0, true); // First option is gasburner&#xD;
		companyUI.rb_heatingTypePrivateUI.setEnabled(rbSetting);&#xD;
		companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
		companyUI.b_runningMainInterfaceSlider = false;&#xD;
&#xD;
		//Reorder c_orderedHeatingSystems&#xD;
		zero_Interface.c_orderedHeatingSystemsCompanies.remove(company);&#xD;
		zero_Interface.c_orderedHeatingSystemsCompanies.add(0, company);&#xD;
		companies.remove(company);&#xD;
		nbHeatPumps--;&#xD;
	}&#xD;
	else { //No more heating assets to adjust: this is the minimum: set slider to minimum and do nothing else&#xD;
		int min_nbOfHeatpumps = count(gcList, gc -&gt; gc.v_isActive &amp;&amp; gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump) + nbOfGhostHeatingSystems;&#xD;
		int min_pct_ElectricHeatpumpSlider = roundToInt( min_nbOfHeatpumps * 100.0 / nbActiveCompanies );&#xD;
		sliderHeatpump.setValue(min_pct_ElectricHeatpumpSlider, false);&#xD;
		sliderGasburner.setValue(100-min_pct_ElectricHeatpumpSlider, false);&#xD;
		return;&#xD;
	}&#xD;
}&#xD;
&#xD;
while ( targetHeatPumpAmount &gt; nbHeatPumps) { // remove gasburners, add heatpumps.&#xD;
		&#xD;
	GCUtility company = findFirst(companies, gc -&gt; gc.p_primaryHeatingAsset instanceof J_EAConversionGasBurner);&#xD;
	if (company != null) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(company.p_owner.p_connectionOwnerIndexNr);&#xD;
		companyUI.b_runningMainInterfaceSlider = true;&#xD;
		if(companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) != company){&#xD;
			int i = indexOf(companyUI.c_ownedGridConnections.stream().toArray(), company);&#xD;
			companyUI.GCnr_selection.setValue(i, true);&#xD;
		}&#xD;
		&#xD;
		// rbSetting Bugfix, does not change the heating system if the radiobutton was disabled!&#xD;
		boolean rbSetting = companyUI.rb_heatingTypePrivateUI.isEnabled();&#xD;
		companyUI.rb_heatingTypePrivateUI.setEnabled(true);&#xD;
		companyUI.rb_heatingTypePrivateUI.setValue(2, true); // Third option (index 2) is electric heatpump&#xD;
		companyUI.rb_heatingTypePrivateUI.setEnabled(rbSetting);&#xD;
		companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
		companyUI.b_runningMainInterfaceSlider = false;&#xD;
		&#xD;
		//Reorder c_orderedHeatingSystems&#xD;
		zero_Interface.c_orderedHeatingSystemsCompanies.remove(company);&#xD;
		zero_Interface.c_orderedHeatingSystemsCompanies.add(0, company);&#xD;
		companies.remove(company);		&#xD;
		nbHeatPumps++;&#xD;
	}&#xD;
	else { //No more gas burner assets to adjust: this is the minimum: set slider to minimum and do nothing else&#xD;
		int min_nbOfHeatpumps = count(gcList, gc -&gt; gc.v_isActive &amp;&amp; gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump) + nbOfGhostHeatingSystems;&#xD;
		int min_pct_ElectricHeatpumpSlider = roundToInt( min_nbOfHeatpumps * 100.0 / nbActiveCompanies );&#xD;
		sliderHeatpump.setValue(min_pct_ElectricHeatpumpSlider, false);&#xD;
		sliderGasburner.setValue(100-min_pct_ElectricHeatpumpSlider, false);&#xD;
		return;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Pair&lt;Integer, Integer&gt;</ReturnType>
						<Id>1729262524479</Id>
						<Name>f_calculateNumberOfGhostHeatingSystems</Name>
						<X>40</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GCUtility&gt;</Type>
						</Parameter>
						<Body>Integer numberOfGhostHeatingSystems_ElectricHeatpumps = 0;&#xD;
Integer numberOfGhostHeatingSystems_HybridHeatpumps = 0;&#xD;
&#xD;
for (GCUtility gc : gcList) {&#xD;
	if ( gc.v_hasQuarterHourlyValues &amp;&amp; gc.v_isActive ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		int i = indexOf(companyUI.c_ownedGridConnections.stream().toArray(), gc);&#xD;
		if (companyUI.c_scenarioSettings_Current.get(i).getCurrentHeatingType() == OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP){&#xD;
			numberOfGhostHeatingSystems_ElectricHeatpumps++;&#xD;
		}&#xD;
		if (companyUI.c_scenarioSettings_Current.get(i).getCurrentHeatingType() == OL_GridConnectionHeatingType.HYBRID_HEATPUMP){&#xD;
			numberOfGhostHeatingSystems_HybridHeatpumps++;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
return new Pair(numberOfGhostHeatingSystems_ElectricHeatpumps, numberOfGhostHeatingSystems_HybridHeatpumps);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749116448649</Id>
						<Name>f_calculatePeakHeatDemand_kW</Name>
						<X>60</X>
						<Y>890</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gc</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>double peakHeatDemand_kW = 0.0;&#xD;
for (J_EAConsumption j_ea : gc.c_consumptionAssets) {&#xD;
	if (j_ea.getEAType() == OL_EnergyAssetType.HEAT_DEMAND || j_ea.getEAType() == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {&#xD;
		double[] profile = j_ea.getProfilePointer().getAllValues();&#xD;
		double maxFactor = Arrays.stream(profile).max().getAsDouble();&#xD;
		peakHeatDemand_kW += maxFactor * j_ea.yearlyDemand_kWh * j_ea.getConsumptionScaling_fr();&#xD;
	}&#xD;
}&#xD;
for (J_EAProfile j_ea : gc.c_profileAssets) {&#xD;
	if (j_ea.energyCarrier == OL_EnergyCarriers.HEAT) {&#xD;
		double maxValue = Arrays.stream(j_ea.a_energyProfile_kWh).max().getAsDouble();&#xD;
		peakHeatDemand_kW += maxValue / zero_Interface.energyModel.p_timeStep_h * j_ea.getProfileScaling_fr();&#xD;
	}&#xD;
}&#xD;
if (gc.p_BuildingThermalAsset != null) {&#xD;
	double maximalTemperatureDifference_K = 30.0; // Approximation&#xD;
	peakHeatDemand_kW += gc.p_BuildingThermalAsset.getLossFactor_WpK() * maximalTemperatureDifference_K / 1000;&#xD;
}&#xD;
return peakHeatDemand_kW;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749739532180</Id>
						<Name>f_addDistrictHeatingToAllHouses</Name>
						<X>540</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GCHouse house: zero_Interface.energyModel.Houses ) {&#xD;
	// Remove the existing heating assets&#xD;
	house.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
	if (house.p_secondaryHeatingAsset != null) {&#xD;
		house.p_secondaryHeatingAsset.removeEnergyAsset(); &#xD;
	}&#xD;
	if (house.p_tertiaryHeatingAsset != null) {&#xD;
		house.p_tertiaryHeatingAsset.removeEnergyAsset(); &#xD;
	}&#xD;
	if ( house.p_heatBuffer != null){&#xD;
		house.p_heatBuffer.removeEnergyAsset();&#xD;
	}&#xD;
	&#xD;
	house.p_heatingType = OL_GridConnectionHeatingType.DISTRICTHEAT;&#xD;
	// Add a heat node&#xD;
	house.p_parentNodeHeat = findFirst(zero_Interface.energyModel.f_getGridNodesTopLevel(), node -&gt; node.p_energyCarrier == OL_EnergyCarriers.HEAT);&#xD;
	// Create a heat node if it does not exist yet&#xD;
	if(house.p_parentNodeHeat == null){&#xD;
		GridNode GN_heat = zero_Interface.energyModel.add_pop_gridNodes();&#xD;
		zero_Interface.energyModel.f_getGridNodesTopLevel().add(GN_heat);&#xD;
		GN_heat.p_gridNodeID = "Heatgrid";&#xD;
		&#xD;
		// Check wether transformer capacity is known or estimated&#xD;
		GN_heat.p_capacity_kW = 1000000;	&#xD;
		GN_heat.p_realCapacityAvailable = false;&#xD;
		&#xD;
		// Basic GN information&#xD;
		GN_heat.p_description = "Warmtenet";&#xD;
	&#xD;
		//Define node type&#xD;
		GN_heat.p_nodeType = OL_GridNodeType.HT;&#xD;
		GN_heat.p_energyCarrier = OL_EnergyCarriers.HEAT;&#xD;
	&#xD;
		//Define GN location&#xD;
		GN_heat.p_latitude = 0;&#xD;
		GN_heat.p_longitude = 0;&#xD;
		GN_heat.setLatLon(GN_heat.p_latitude, GN_heat.p_longitude);&#xD;
		&#xD;
		//Connect&#xD;
		house.p_parentNodeHeat = GN_heat;&#xD;
		&#xD;
		//Show warning that heat grid is not a simple solution&#xD;
		zero_Interface.f_setErrorScreen("LET OP: Er is nu een 'warmtenet' gecreëerd. Maar er is geen warmtebron aanwezig in het model. Daarom zal de benodigde warmte voor het warmtenet in de resultaten te zien zijn als warmte import.");&#xD;
	}&#xD;
	house.p_parentNodeHeatID = house.p_parentNodeHeat.p_gridNodeID;&#xD;
	&#xD;
	double outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureDistrictHeatingDeliverySet_degC;&#xD;
	double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(house);&#xD;
	double efficiency = 1.0;&#xD;
	&#xD;
	new J_EAConversionHeatDeliverySet(house, peakHeatDemand_kW, efficiency, zero_Interface.energyModel.p_timeStep_h, outputTemperature_degC);&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749739532202</Id>
						<Name>f_removeDistrictHeatingFromAllHouses</Name>
						<X>540</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GCHouse house: zero_Interface.energyModel.Houses ) {&#xD;
	house.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
	house.p_parentNodeHeat = null;&#xD;
	house.p_parentNodeHeatID = null;&#xD;
	&#xD;
	house.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
	house.v_districtHeatDelivery_kW = 0;&#xD;
	&#xD;
	//add gasburner&#xD;
	house.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;	&#xD;
&#xD;
	J_EAConsumption heatDemandAsset = findFirst(house.c_consumptionAssets, j_ea -&gt; j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);&#xD;
	J_EAConversionGasBurner gasBurner;&#xD;
	//if house has follows the general heat deamnd profile&#xD;
	if (heatDemandAsset != null) {&#xD;
		gasBurner = new J_EAConversionGasBurner(house, heatDemandAsset.yearlyDemand_kWh/8760*10, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);&#xD;
	}&#xD;
	//if house has a thermalBuildingAsset&#xD;
	else if (house.p_BuildingThermalAsset != null){&#xD;
		double gasBurnerCapacity_kW = 10;&#xD;
		gasBurner = new J_EAConversionGasBurner(house, gasBurnerCapacity_kW, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);&#xD;
	}&#xD;
	// Else house has a customprofiel&#xD;
	else {&#xD;
		J_EAProfile heatDemandProfile = (J_EAProfile)findFirst(house.c_profileAssets, x-&gt;x instanceof J_EAProfile &amp;&amp; x.energyCarrier == OL_EnergyCarriers.HEAT);&#xD;
		double peakHeatDemand_kW = Arrays.stream(heatDemandProfile.a_energyProfile_kWh).max().orElseThrow(() -&gt; new RuntimeException());&#xD;
		gasBurner = new J_EAConversionGasBurner(house, peakHeatDemand_kW, 0.99, zero_Interface.energyModel.p_timeStep_h, 90);&#xD;
	}	&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749739532217</Id>
						<Name>f_setAircos</Name>
						<X>540</X>
						<Y>625</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>desiredShare</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double nbHousesWithAirco = count(zero_Interface.energyModel.Houses, x -&gt; x.p_airco != null);&#xD;
double nbHouses = zero_Interface.energyModel.Houses.size();&#xD;
traceln("Previous nb households with airco: " + nbHousesWithAirco);&#xD;
while ( roundToInt(nbHouses * desiredShare) &gt; nbHousesWithAirco ) {&#xD;
	GCHouse house = randomWhere(zero_Interface.energyModel.Houses, x -&gt; x.p_airco == null);&#xD;
	double aircoPower_kW = roundToDecimal(uniform(3,6),1);&#xD;
	new J_EAAirco(house, aircoPower_kW, zero_Interface.energyModel.p_timeStep_h);&#xD;
	nbHousesWithAirco ++;&#xD;
}&#xD;
while ( roundToInt(nbHouses * desiredShare) &lt; nbHousesWithAirco ) {&#xD;
	GCHouse house = randomWhere(zero_Interface.energyModel.Houses, x -&gt; x.p_airco != null);&#xD;
	house.p_airco.removeEnergyAsset();&#xD;
	nbHousesWithAirco --;&#xD;
}&#xD;
&#xD;
traceln("New nb households with airco: " + nbHousesWithAirco);&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749739532231</Id>
						<Name>f_addLTDH</Name>
						<X>540</X>
						<Y>555</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GCHouse house: zero_Interface.energyModel.Houses ) {&#xD;
	house.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
	if (house.p_secondaryHeatingAsset != null) {&#xD;
		house.p_secondaryHeatingAsset.removeEnergyAsset(); &#xD;
	}&#xD;
	if (house.p_tertiaryHeatingAsset != null) {&#xD;
		house.p_tertiaryHeatingAsset.removeEnergyAsset(); &#xD;
	}&#xD;
	if ( house.p_heatBuffer != null){&#xD;
		house.p_heatBuffer.removeEnergyAsset();&#xD;
	}&#xD;
	// Add a heat node&#xD;
	house.p_parentNodeHeat = findFirst(zero_Interface.energyModel.f_getGridNodesTopLevel(), node -&gt; node.p_energyCarrier == OL_EnergyCarriers.HEAT);&#xD;
	// Create a heat node if it does not exist yet&#xD;
	if(house.p_parentNodeHeat == null){&#xD;
		GridNode GN_heat = zero_Interface.energyModel.add_pop_gridNodes();&#xD;
		zero_Interface.energyModel.f_getGridNodesTopLevel().add(GN_heat);&#xD;
		GN_heat.p_gridNodeID = "Heatgrid";&#xD;
		&#xD;
		// Check wether transformer capacity is known or estimated&#xD;
		GN_heat.p_capacity_kW = 1000000;	&#xD;
		GN_heat.p_realCapacityAvailable = false;&#xD;
		&#xD;
		// Basic GN information&#xD;
		GN_heat.p_description = "Warmtenet";&#xD;
	&#xD;
		//Define node type&#xD;
		GN_heat.p_nodeType = OL_GridNodeType.HT;&#xD;
		GN_heat.p_energyCarrier = OL_EnergyCarriers.HEAT;&#xD;
	&#xD;
		//Define GN location&#xD;
		GN_heat.p_latitude = 0;&#xD;
		GN_heat.p_longitude = 0;&#xD;
		GN_heat.setLatLon(GN_heat.p_latitude, GN_heat.p_longitude);&#xD;
		&#xD;
		//Connect&#xD;
		house.p_parentNodeHeat = GN_heat;&#xD;
		&#xD;
		//Show warning that heat grid is not a simple solution&#xD;
		zero_Interface.f_setErrorScreen("LET OP: Er is nu een 'warmtenet' gecreëerd. Maar er is geen warmtebron aanwezig in het model. Daarom zal de benodigde warmte voor het warmtenet in de resultaten te zien zijn als warmte import.");&#xD;
	}&#xD;
	house.p_parentNodeHeatID = house.p_parentNodeHeat.p_gridNodeID;&#xD;
	house.p_heatingType = OL_GridConnectionHeatingType.LT_DISTRICTHEAT;&#xD;
	double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(house);&#xD;
	double heatpumpElectricCapacity_kW = min(peakHeatDemand_kW / 3, 1.0);&#xD;
	double efficiency_fr = 0.5;&#xD;
	double inputTemperature_degC = 15.0;  // TODO: Look at these temperatures!&#xD;
	double outputTemperature_degC = 50.0;&#xD;
	double sourceAssetHeatPower_kW = 0.0;&#xD;
	double belowZeroHeatpumpEtaReductionFactor = 1.0;&#xD;
	J_EAConversionHeatPump heatpump = new J_EAConversionHeatPump(house,&#xD;
		heatpumpElectricCapacity_kW,&#xD;
		efficiency_fr,&#xD;
		zero_Interface.energyModel.p_timeStep_h,&#xD;
		outputTemperature_degC,&#xD;
		zero_Interface.energyModel.v_currentAmbientTemperature_degC,&#xD;
		sourceAssetHeatPower_kW,&#xD;
		belowZeroHeatpumpEtaReductionFactor,&#xD;
		OL_AmbientTempType.HEAT_GRID&#xD;
	);&#xD;
	heatpump.updateParameters(inputTemperature_degC, outputTemperature_degC);		&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749739532244</Id>
						<Name>f_removeLTDH</Name>
						<X>540</X>
						<Y>575</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GCHouse house: zero_Interface.energyModel.Houses ) {&#xD;
	// Disconnect from GridNode Heat&#xD;
	house.p_parentNodeHeat = null;&#xD;
	house.v_districtHeatDelivery_kW = 0;&#xD;
	&#xD;
	// Remove Heatpump and replace with gasburner&#xD;
	house.p_primaryHeatingAsset.removeEnergyAsset();&#xD;
	house.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;	&#xD;
	double peakHeatDemand_kW = f_calculatePeakHeatDemand_kW(house);&#xD;
	new J_EAConversionGasBurner(house, peakHeatDemand_kW, zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner, zero_Interface.energyModel.p_timeStep_h, zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC);	&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752227724432</Id>
						<Name>f_householdInsulation</Name>
						<X>540</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>houses_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int nbHouses = count(zero_Interface.energyModel.Houses, x -&gt; x.p_energyLabel != OL_GridConnectionIsolationLabel.A);&#xD;
int nbHousesWithImprovedInsulation = count(zero_Interface.energyModel.Houses, x -&gt; x.p_hasAdditionalInsulation &amp;&amp; x.p_energyLabel != OL_GridConnectionIsolationLabel.A);&#xD;
int targetNbHousesWithImprovedInsulation = roundToInt(houses_pct / 100.0 * nbHouses);&#xD;
&#xD;
while (nbHousesWithImprovedInsulation &lt; targetNbHousesWithImprovedInsulation) {&#xD;
	GCHouse house = findFirst(zero_Interface.energyModel.Houses, x -&gt; !x.p_hasAdditionalInsulation &amp;&amp; x.p_energyLabel != OL_GridConnectionIsolationLabel.A);&#xD;
	if (house != null) {&#xD;
		house.p_hasAdditionalInsulation = true;&#xD;
		double lossFactor_WpK = house.p_BuildingThermalAsset.getLossFactor_WpK();&#xD;
		house.p_BuildingThermalAsset.setLossFactor_WpK( 0.7 * lossFactor_WpK );&#xD;
		nbHousesWithImprovedInsulation++;&#xD;
	}&#xD;
	else {&#xD;
		throw new RuntimeException("Unable to find house that does not yet have additional insulation");&#xD;
	}&#xD;
}&#xD;
while (nbHousesWithImprovedInsulation &gt; targetNbHousesWithImprovedInsulation) {&#xD;
	GCHouse house = findFirst(zero_Interface.energyModel.Houses, x -&gt; x.p_hasAdditionalInsulation &amp;&amp; x.p_energyLabel != OL_GridConnectionIsolationLabel.A);&#xD;
	if (house != null) {&#xD;
		house.p_hasAdditionalInsulation = false;&#xD;
		double lossFactor_WpK = house.p_BuildingThermalAsset.getLossFactor_WpK();&#xD;
		house.p_BuildingThermalAsset.setLossFactor_WpK( lossFactor_WpK / 0.7 );&#xD;
		nbHousesWithImprovedInsulation--;&#xD;
	}&#xD;
	else {&#xD;
		throw new RuntimeException("Unable to find house that has additional insulation");&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1722253108626</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1722253115477</Id>
						<Name>uI_Tabs</Name>
						<X>40</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Tabs</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
					<ContainerLink>
						<Id>1722253115479</Id>
						<Name>zero_Interface</Name>
						<X>160</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1722253108632</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1722350093699</Id>
								<Name>rect_genericFunctions</Name>
								<X>10</X>
								<Y>460</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>450</Width>
								<Height>470</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722350093702</Id>
								<Name>t_genericFunctions</Name>
								<X>100</X>
								<Y>480</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Generic Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>22</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1722253128676</Id>
								<Name>gr_heatDemandSliders</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722253128678</Id>
										<Name>rect_heatDemandSliders</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-6943</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1722253128680</Id>
										<Name>t_gasBurnerHouseholdsDescription</Name>
										<X>30</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>HR ketel aardgas</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128682</Id>
										<Name>t_hybridHeatPumpHouseholdsDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>30</X>
										<Y>290</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Hybride warmtepomp</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128684</Id>
										<Name>t_electricHeatPumpHouseholdsDescription</Name>
										<X>30</X>
										<Y>265</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elek. warmtepomp</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128686</Id>
										<Name>t_districtHeatingHouseholdsDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>30</X>
										<Y>315</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmtenet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128688</Id>
										<Name>t_electricHeatPumpHouseholds_pct</Name>
										<X>235</X>
										<Y>265</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricHeatPumpHouseholds_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128690</Id>
										<Name>t_gasBurnerHouseholds_pct</Name>
										<X>235</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_gasBurnerHouseholds_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128692</Id>
										<Name>t_districtHeatingHouseholds_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>235</X>
										<Y>315</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_districtHeatingHouseholds_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128694</Id>
										<Name>t_hybridHeatPumpHouseholds_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>235</X>
										<Y>290</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_hybridHeatPumpHouseholds_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128696</Id>
										<Name>sl_districtHeatingHouseholds_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>265</X>
										<Y>310</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>false</VisibleCode>
											<Enabled>false</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");
//f_setHeatingSliders(3);
//f_resetNeighborhoodHeatingSystems(4);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128698</Id>
										<Name>sl_gasBurnerHouseholds_pct</Name>
										<X>265</X>
										<Y>235</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 0, sl_gasBurnerHouseholds_pct, sl_electricHeatPumpHouseholds_pct, null, null );
f_setHeatingSystemsHouseholds( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_electricHeatPumpHouseholds_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128700</Id>
										<Name>sl_hybridHeatPumpHouseholds_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>265</X>
										<Y>285</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>false</VisibleCode>
											<Enabled>false</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");
//f_setHeatingSliders(2);
//f_resetNeighborhoodHeatingSystems(3);
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128702</Id>
										<Name>sl_electricHeatPumpHouseholds_pct</Name>
										<X>265</X>
										<Y>260</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 1, sl_gasBurnerHouseholds_pct, sl_electricHeatPumpHouseholds_pct, null, null );
f_setHeatingSystemsHouseholds( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_electricHeatPumpHouseholds_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128704</Id>
										<Name>sl_heatDemandReductionHouseholds_pct</Name>
										<X>265</X>
										<Y>200</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandReductionHeating( new ArrayList&lt;GridConnection&gt;(zero_Interface.energyModel.Houses.findAll( x -&gt; true)), sl_heatDemandReductionHouseholds_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>50</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722253128706</Id>
										<Name>t_heatDemandReductionHouseholds_pct</Name>
										<X>235</X>
										<Y>205</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandReductionHouseholds_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128708</Id>
										<Name>t_heatDemandReductionHouseholdsDescription</Name>
										<X>30</X>
										<Y>205</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing warmte</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128710</Id>
										<Name>t_householdsDescription</Name>
										<X>20</X>
										<Y>180</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Huishoudens</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128712</Id>
										<Name>sl_heatDemandReductionCompanies_pct</Name>
										<X>265</X>
										<Y>35</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandReductionHeating( new ArrayList&lt;GridConnection&gt;(zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true)), sl_heatDemandReductionCompanies_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>50</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722253128714</Id>
										<Name>t_heatDemandReductionCompaniesDescription</Name>
										<X>25</X>
										<Y>40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing warmte</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128716</Id>
										<Name>t_heatDemandReductionCompanies_pct</Name>
										<X>235</X>
										<Y>40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandReductionCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128718</Id>
										<Name>t_gasBurnerCompaniesDescription</Name>
										<X>25</X>
										<Y>75</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>HR ketel aardgas</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128720</Id>
										<Name>t_hybridHeatPumpCompaniesDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>25</X>
										<Y>125</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Hybride warmtepomp</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128722</Id>
										<Name>t_electricHeatPumpCompaniesDescription</Name>
										<X>25</X>
										<Y>100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elek. warmtepomp</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128724</Id>
										<Name>t_districtHeatingCompaniesDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>25</X>
										<Y>150</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmtenet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253128726</Id>
										<Name>t_electricHeatPumpCompanies_pct</Name>
										<X>235</X>
										<Y>100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricHeatPumpCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128728</Id>
										<Name>t_gasBurnerCompanies_pct</Name>
										<X>235</X>
										<Y>75</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_gasBurnerCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128730</Id>
										<Name>t_districtHeatingCompanies_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>235</X>
										<Y>150</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_districtHeatingCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253128732</Id>
										<Name>t_hybridHeatPumpCompanies_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>235</X>
										<Y>125</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_hybridHeatPumpCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128734</Id>
										<Name>sl_districtHeatingCompanies_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>265</X>
										<Y>145</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>false</VisibleCode>
											<Enabled>true</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(3);
//f_resetNeighborhoodHeatingSystems(4);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128736</Id>
										<Name>sl_gasBurnerCompanies_pct</Name>
										<X>265</X>
										<Y>70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 0, sl_gasBurnerCompanies_pct, sl_electricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true), sl_gasBurnerCompanies_pct, sl_electricHeatPumpCompanies_pct );

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128738</Id>
										<Name>sl_hybridHeatPumpCompanies_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>265</X>
										<Y>120</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>false</VisibleCode>
											<Enabled>true</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(2);
//f_resetNeighborhoodHeatingSystems(3);
//sl_hybridHeatPumpCompanies.</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253128740</Id>
										<Name>sl_electricHeatPumpCompanies_pct</Name>
										<X>265</X>
										<Y>95</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 1, sl_gasBurnerCompanies_pct, sl_electricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true), sl_gasBurnerCompanies_pct, sl_electricHeatPumpCompanies_pct);

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722254471242</Id>
										<Name>t_companiesDescription</Name>
										<X>20</X>
										<Y>15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Bedrijven</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Image>
										<Id>1746091940464</Id>
										<Name>i_companyReduction</Name>
										<X>160</X>
										<Y>40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyReduction, zero_Interface.v_infoText.companyHeatDemandReduction, i_companyReduction.getX() + uI_Tabs.v_presentationXOffset, i_companyReduction.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829752</Id>
										<Name>i_companyGasBoiler</Name>
										<X>160</X>
										<Y>75</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyGasBoiler, zero_Interface.v_infoText.companyGasBoiler, i_companyGasBoiler.getX() + uI_Tabs.v_presentationXOffset, i_companyGasBoiler.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829788</Id>
										<Name>i_companyElectricHeatpump</Name>
										<X>160</X>
										<Y>100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyElectricHeatpump, zero_Interface.v_infoText.companyElectricHeatpump, i_companyElectricHeatpump.getX() + uI_Tabs.v_presentationXOffset, i_companyElectricHeatpump.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829826</Id>
										<Name>i_companyHybridHeatpump</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>160</X>
										<Y>125</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyHybridHeatpump, zero_Interface.v_infoText.companyHybridHeatpump, i_companyHybridHeatpump.getX() + uI_Tabs.v_presentationXOffset, i_companyHybridHeatpump.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829863</Id>
										<Name>i_companyHeatGrid</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>160</X>
										<Y>150</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyHeatGrid, zero_Interface.v_infoText.companyHeatGrid, i_companyHeatGrid.getX() + uI_Tabs.v_presentationXOffset, i_companyHeatGrid.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829905</Id>
										<Name>i_householdElectricHeatpump</Name>
										<X>160</X>
										<Y>265</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdElectricHeatpump, zero_Interface.v_infoText.householdElectricHeatpump, i_householdElectricHeatpump.getX() + uI_Tabs.v_presentationXOffset, i_householdElectricHeatpump.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829948</Id>
										<Name>i_householdReduction</Name>
										<X>160</X>
										<Y>205</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdReduction, zero_Interface.v_infoText.householdHeatDemandReduction, i_householdReduction.getX() + uI_Tabs.v_presentationXOffset, i_householdReduction.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092829986</Id>
										<Name>i_householdGasBoiler</Name>
										<X>160</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdGasBoiler, zero_Interface.v_infoText.householdGasBoiler, i_householdGasBoiler.getX() + uI_Tabs.v_presentationXOffset, i_householdGasBoiler.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092830024</Id>
										<Name>i_householdHeatGrid</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>160</X>
										<Y>315</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdHeatGrid, zero_Interface.v_infoText.householdHeatGrid, i_householdHeatGrid.getX() + uI_Tabs.v_presentationXOffset, i_householdHeatGrid.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746092830063</Id>
										<Name>i_householdHybridHeatpump</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>160</X>
										<Y>290</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdHybridHeatpump, zero_Interface.v_infoText.householdHybridHeatpump, i_householdHybridHeatpump.getX() + uI_Tabs.v_presentationXOffset, i_householdHybridHeatpump.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Group>
								<Id>1722253134565</Id>
								<Name>gr_heatDemandSlidersResidentialArea</Name>
								<X>400</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722253134567</Id>
										<Name>rect_heatDemandSlidersResidentialArea</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-6943</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1722253134569</Id>
										<Name>t_householdsGasBurnerDescription</Name>
										<X>20</X>
										<Y>190</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>HR ketel aardgas</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253134571</Id>
										<Name>t_householdsHybridHeatPumpDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>20</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Hybride warmtepomp</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253134573</Id>
										<Name>t_householdsElectricHeatPumpDescription</Name>
										<X>20</X>
										<Y>215</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elek. warmtepomp</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253134575</Id>
										<Name>t_householdsDistrictHeatingDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>20</X>
										<Y>265</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmtenet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253134577</Id>
										<Name>t_householdsElectricHeatPump_pct</Name>
										<X>230</X>
										<Y>215</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253134579</Id>
										<Name>t_householdsGasBurner_pct</Name>
										<X>230</X>
										<Y>190</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253134581</Id>
										<Name>t_householdsDistrictHeating_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>230</X>
										<Y>265</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-4144960</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersResidentialAreaHouseholdsDistrictHeating_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253134583</Id>
										<Name>t_householdsHybridHeatPump_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>230</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-4144960</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersResidentialAreaHouseholdsHybridHeatPump_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253134585</Id>
										<Name>sl_heatDemandSlidersResidentialAreaHouseholdsDistrictHeating_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>260</X>
										<Y>260</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>false</Enabled>
											<ActionCode>f_setHeatingSlidersHouseholds(3);
f_setHeatingSystemsHouseholds();
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253134587</Id>
										<Name>sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct</Name>
										<X>260</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 0, sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct, sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct, null, null );
f_setHeatingSystemsHouseholds( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>100</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253134589</Id>
										<Name>sl_heatDemandSlidersResidentialAreaHouseholdsHybridHeatPump_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>260</X>
										<Y>235</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>false</Enabled>
											<ActionCode>f_setHeatingSlidersHouseholds(2);
f_setHeatingSystemsHouseholds();
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253134591</Id>
										<Name>sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct</Name>
										<X>260</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 1, sl_heatDemandSlidersResidentialAreaHouseholdsGasBurner_pct, sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct, null, null );
f_setHeatingSystemsHouseholds( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_heatDemandSlidersResidentialAreaHouseholdsElectricHeatPump_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722253134593</Id>
										<Name>sl_heatDemandSlidersResidentialAreaHouseholdsHeatDemandReduction_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>260</X>
										<Y>80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>false</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");
//p_heatDemandReduction = (100 - sl_heatDemandReduction.getValue()) / 100;
//t_heatDemandReduction.setText(sl_heatDemandReduction.getValue() + "%");

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722253134595</Id>
										<Name>t_householdsHeatDemandReduction_pct</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>230</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersResidentialAreaHouseholdsHeatDemandReduction_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722253134597</Id>
										<Name>t_householdsHeatDemandReductionDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>20</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmtebesparing met isolatie</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253134599</Id>
										<Name>t_householdsHeatingDescription</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>20</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Huishoudens verwarming</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722253134601</Id>
										<Name>t_householdsHeatingTypeDescription</Name>
										<X>20</X>
										<Y>155</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Verwarmingstechnologie</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1722326800106</Id>
								<Name>gr_heatDemandSlidersCompanies</Name>
								<X>800</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722326800108</Id>
										<Name>rect_heatDemandSliders1</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-6943</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722326800142</Id>
										<Name>sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct</Name>
										<X>255</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandReductionHeating( new ArrayList&lt;GridConnection&gt;(zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true)), sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct.getValue());</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>50</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722326800144</Id>
										<Name>t_heatDemandReductionCompaniesDescription1</Name>
										<X>15</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing warmte</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722326800146</Id>
										<Name>t_heatDemandReductionCompanies_pct1</Name>
										<X>225</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersCompaniesHeatDemandReductionCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722326800148</Id>
										<Name>t_gasBurnerCompaniesDescription1</Name>
										<X>15</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>HR ketel aardgas</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722326800150</Id>
										<Name>t_hybridHeatPumpCompaniesDescription1</Name>
										<X>15</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct.isEnabled()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Hybride warmtepomp</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722326800152</Id>
										<Name>t_electricHeatPumpCompaniesDescription1</Name>
										<X>15</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elek. warmtepomp</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722326800154</Id>
										<Name>t_districtHeatingCompaniesDescription1</Name>
										<X>15</X>
										<Y>165</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct.isEnabled()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmtenet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722326800156</Id>
										<Name>t_electricHeatPumpCompanies_pct1</Name>
										<X>225</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722326800158</Id>
										<Name>t_gasBurnerCompanies_pct1</Name>
										<X>225</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722326800160</Id>
										<Name>t_districtHeatingCompanies_pct1</Name>
										<X>225</X>
										<Y>165</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct.isEnabled()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722326800162</Id>
										<Name>t_hybridHeatPumpCompanies_pct1</Name>
										<X>225</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct.isEnabled()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722326800164</Id>
										<Name>sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct</Name>
										<X>255</X>
										<Y>160</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct.isEnabled()</VisibleCode>
											<Enabled>false</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(3);
//f_resetNeighborhoodHeatingSystems(4);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722326800166</Id>
										<Name>sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct</Name>
										<X>255</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 0, sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct, sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true), sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct, sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct);

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722326800168</Id>
										<Name>sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct</Name>
										<X>255</X>
										<Y>135</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct.isEnabled()</VisibleCode>
											<Enabled>false</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(2);
//f_resetNeighborhoodHeatingSystems(3);
//sl_hybridHeatPumpCompanies.</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722326800170</Id>
										<Name>sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct</Name>
										<X>255</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setHeatingSliders( 1, sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct, sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct, null, null );
f_setHeatingSystemsCompanies( zero_Interface.energyModel.UtilityConnections.findAll( x -&gt; true), sl_heatDemandSlidersCompaniesGasBurnerCompanies_pct, sl_heatDemandSlidersCompaniesElectricHeatPumpCompanies_pct);

zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722326800172</Id>
										<Name>t_companiesDescription1</Name>
										<X>10</X>
										<Y>30</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Bedrijven</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1734371025574</Id>
										<Name>t_eBoilerCompanies_pct</Name>
										<X>225</X>
										<Y>190</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesEBoiler_pct.isEnabled()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_heatDemandSlidersCompaniesEBoiler_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1734371025600</Id>
										<Name>sl_heatDemandSlidersCompaniesEBoiler_pct</Name>
										<X>255</X>
										<Y>185</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<VisibleCode>sl_heatDemandSlidersCompaniesEBoiler_pct.isEnabled()</VisibleCode>
											<Enabled>false</Enabled>
											<ActionCode>traceln("Slider doet nog niets!!");//f_setHeatingSlidersCompanies(3);
//f_resetNeighborhoodHeatingSystems(4);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1734371025534</Id>
										<Name>t_eBoilerCompaniesDescription</Name>
										<X>15</X>
										<Y>190</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesEBoiler_pct.isEnabled()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>E-boiler</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Image>
										<Id>1746093187570</Id>
										<Name>i_companyReduction_Company</Name>
										<X>160</X>
										<Y>55</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyReduction_Company, zero_Interface.v_infoText.companyHeatDemandReduction, i_companyReduction_Company.getX() + uI_Tabs.v_presentationXOffset, i_companyReduction_Company.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746093187613</Id>
										<Name>i_companyGasBoiler_Company</Name>
										<X>160</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyGasBoiler_Company, zero_Interface.v_infoText.companyGasBoiler, i_companyGasBoiler_Company.getX() + uI_Tabs.v_presentationXOffset, i_companyGasBoiler_Company.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746093187656</Id>
										<Name>i_companyElectricHeatpump_Company</Name>
										<X>160</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyElectricHeatpump_Company, zero_Interface.v_infoText.companyElectricHeatpump, i_companyElectricHeatpump_Company.getX() + uI_Tabs.v_presentationXOffset, i_companyElectricHeatpump_Company.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746093187698</Id>
										<Name>i_companyHybridHeatpump_Company</Name>
										<X>160</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesHybridHeatPumpCompanies_pct.isEnabled()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyHybridHeatpump_Company, zero_Interface.v_infoText.companyHybridHeatpump, i_companyHybridHeatpump_Company.getX() + uI_Tabs.v_presentationXOffset, i_companyHybridHeatpump_Company.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746093187741</Id>
										<Name>i_companyHeatGrid_Company</Name>
										<X>160</X>
										<Y>165</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesDistrictHeatingCompanies_pct.isEnabled()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyHeatGrid_Company, zero_Interface.v_infoText.companyHeatGrid, i_companyHeatGrid_Company.getX() + uI_Tabs.v_presentationXOffset, i_companyHeatGrid_Company.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746093187784</Id>
										<Name>i_companyEBoiler_Company</Name>
										<X>160</X>
										<Y>190</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_heatDemandSlidersCompaniesEBoiler_pct.isEnabled()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_companyEBoiler_Company, zero_Interface.v_infoText.companyElectricBoiler, i_companyEBoiler_Company.getX() + uI_Tabs.v_presentationXOffset, i_companyEBoiler_Company.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1722335783989</Id>
								<Name>rect_demandFunctions</Name>
								<X>40</X>
								<Y>540</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-8355840</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>390</Width>
								<Height>150</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722335783991</Id>
								<Name>t_demandFunctionsDescription</Name>
								<X>240</X>
								<Y>550</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Demand Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Rectangle>
								<Id>1722338183031</Id>
								<Name>rect_heatingFunctions</Name>
								<X>40</X>
								<Y>710</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-5952982</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>400</Width>
								<Height>150</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722338183033</Id>
								<Name>t_heatingFunctionsDescription</Name>
								<X>130</X>
								<Y>720</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heating Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Group>
								<Id>1749738869813</Id>
								<Name>gr_heatDeandSlidersResidentialArea</Name>
								<X>400</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1749738869815</Id>
										<Name>rect_heatDeandSlidersResidentialArea</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-6943</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1749738869817</Id>
										<Name>t_householdGasBurnerDescriptionResidentialArea</Name>
										<X>20</X>
										<Y>65</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdGasBurnerResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Gasburner</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1749738869821</Id>
										<Name>t_householdElectricHeatPumpDescriptionResidentialArea</Name>
										<X>20</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdElectricHeatPumpResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elec. heatpump</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1749738869823</Id>
										<Name>t_householdElectricHeatPumpResidentialArea_pct</Name>
										<X>230</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdElectricHeatPumpResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_householdElectricHeatPumpResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1749738869825</Id>
										<Name>t_householdGasBurnerResidentialArea_pct</Name>
										<X>230</X>
										<Y>65</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdGasBurnerResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_householdGasBurnerResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1749738869829</Id>
										<Name>sl_householdGasBurnerResidentialArea_pct</Name>
										<X>260</X>
										<Y>60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>if (cb_householdHTDistrictHeatingResidentialArea.isSelected()) {
	cb_householdHTDistrictHeatingResidentialArea.setSelected(false, false);
	f_removeDistrictHeatingFromAllHouses();
}
f_setHeatingSliders( 0, sl_householdGasBurnerResidentialArea_pct, sl_householdElectricHeatPumpResidentialArea_pct, null, null );
f_setHeatingSystemsHouseholds( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_householdElectricHeatPumpResidentialArea_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>100</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1749738869833</Id>
										<Name>sl_householdElectricHeatPumpResidentialArea_pct</Name>
										<X>260</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>if (cb_householdHTDistrictHeatingResidentialArea.isSelected()) {
	cb_householdHTDistrictHeatingResidentialArea.setSelected(false, false);
	f_removeDistrictHeatingFromAllHouses();
}
f_setHeatingSliders( 1, sl_householdGasBurnerResidentialArea_pct, sl_householdElectricHeatPumpResidentialArea_pct, null, null );
f_setHeatingSystemsHouseholds( zero_Interface.energyModel.Houses.findAll( x -&gt; true), sl_householdElectricHeatPumpResidentialArea_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1749738869835</Id>
										<Name>sl_householdHeatDemandReductionResidentialArea_pct</Name>
										<X>260</X>
										<Y>235</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_householdInsulation( sl_householdHeatDemandReductionResidentialArea_pct.getValue() );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1749738869837</Id>
										<Name>t_householdHeatDemandReductionResidentialArea_pct</Name>
										<X>227</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdHeatDemandReductionResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_householdHeatDemandReductionResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1749738869839</Id>
										<Name>t_householdHeatDemandReductionDescriptionResidentialArea</Name>
										<X>20</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdHeatDemandReductionResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Houses with better insulation</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1749738869841</Id>
										<Name>t_householdHeatingTypeDescriptionResidentialArea</Name>
										<X>20</X>
										<Y>30</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Heating &amp; Cooling</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1749738869843</Id>
										<Name>sl_householdAircoResidentialArea_pct</Name>
										<X>260</X>
										<Y>206</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setAircos(sl_householdAircoResidentialArea_pct.getValue() / 100.0);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1749738869845</Id>
										<Name>t_householdAircoDescriptionResidentialArea</Name>
										<X>20</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdAircoResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Houses with airconditioning</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1749738869847</Id>
										<Name>t_householdAircoResidentialArea_pct</Name>
										<X>223</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>sl_householdAircoResidentialArea_pct.isVisible()</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_householdAircoResidentialArea_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1749738869849</Id>
										<Name>cb_householdHTDistrictHeatingResidentialArea</Name>
										<X>20</X>
										<Y>120</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="135" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if ( cb_householdHTDistrictHeatingResidentialArea.isSelected() ){
	sl_householdGasBurnerResidentialArea_pct.setValue(0, false);
	sl_householdElectricHeatPumpResidentialArea_pct.setValue(0, false);
	cb_householdLTDistrictHeatingResidentialArea.setSelected(false, false);
	f_addDistrictHeatingToAllHouses();
}
else{
	sl_householdGasBurnerResidentialArea_pct.setValue(100, false);
	sl_householdElectricHeatPumpResidentialArea_pct.setValue(0, false);
	cb_householdLTDistrictHeatingResidentialArea.setSelected(false, false);
	f_removeDistrictHeatingFromAllHouses();
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="12" Style="0"/>
											<LabelText>HT-district heating</LabelText>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="CheckBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1749738869851</Id>
										<Name>cb_householdLTDistrictHeatingResidentialArea</Name>
										<X>20</X>
										<Y>155</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="185" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if ( cb_householdLTDistrictHeatingResidentialArea.isSelected() ){
	sl_householdElectricHeatPumpResidentialArea_pct.setValue(0, false);
	sl_householdGasBurnerResidentialArea_pct.setValue(0, false);
	cb_householdHTDistrictHeatingResidentialArea.setSelected(false, false);
	f_addLTDH();
}
else{
	sl_householdElectricHeatPumpResidentialArea_pct.setValue(0, false);
	sl_householdGasBurnerResidentialArea_pct.setValue(100, false);
	cb_householdHTDistrictHeatingResidentialArea.setSelected(false, false);
	f_removeLTDH();
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="12" Style="0"/>
											<LabelText>LT-district heating + booster</LabelText>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Image>
										<Id>1752231559962</Id>
										<Name>i_householdGasBurner</Name>
										<X>180</X>
										<Y>65</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdGasBurnerResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdGasBurner, zero_Interface.v_infoText.householdGasBoiler, i_householdGasBurner.getX() + uI_Tabs.v_presentationXOffset, i_householdGasBurner.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752231559982</Id>
										<Name>i_householdHeatPump</Name>
										<X>180</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdElectricHeatPumpResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdHeatPump, zero_Interface.v_infoText.householdElectricHeatpump, i_householdHeatPump.getX() + uI_Tabs.v_presentationXOffset, i_householdHeatPump.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752231560000</Id>
										<Name>i_householdHTDistrictHeating</Name>
										<X>220</X>
										<Y>125</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>cb_householdHTDistrictHeatingResidentialArea.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdHTDistrictHeating, zero_Interface.v_infoText.householdHTDistrictHeating, i_householdHTDistrictHeating.getX() + uI_Tabs.v_presentationXOffset, i_householdHTDistrictHeating.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752231560019</Id>
										<Name>i_householdLTDistrictHeating</Name>
										<X>220</X>
										<Y>160</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>cb_householdLTDistrictHeatingResidentialArea.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdLTDistrictHeating, zero_Interface.v_infoText.householdElectricHeatpump, i_householdLTDistrictHeating.getX() + uI_Tabs.v_presentationXOffset, i_householdLTDistrictHeating.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752231560038</Id>
										<Name>i_householdAirconditioning</Name>
										<X>180</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdAircoResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdAirconditioning, zero_Interface.v_infoText.householdAirconditioning, i_householdAirconditioning.getX() + uI_Tabs.v_presentationXOffset, i_householdAirconditioning.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1752231560056</Id>
										<Name>i_householdAdditionalInsulation</Name>
										<X>180</X>
										<Y>240</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>sl_householdHeatDemandReductionResidentialArea_pct.isVisible()</VisibleCode>
										<OnClickCode>zero_Interface.f_setInfoText(i_householdAdditionalInsulation, zero_Interface.v_infoText.householdAdditionalInsulation, i_householdAdditionalInsulation.getX() + uI_Tabs.v_presentationXOffset, i_householdAdditionalInsulation.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1722245324895</Id>
				<Name>tabMobility</Name>
				<AdditionalClassCode>// Default Sliders&#xD;
public ShapeGroup getGroupMobilityDemandSliders() {&#xD;
	return this.gr_mobilityDemandSliders;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderMobilityDemandReduction_pct () {&#xD;
	return this.sl_mobilityDemandReduction_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderElectricTrucks_pct() {&#xD;
	return this.sl_electricTrucks_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderHydrogenTrucks_pct() {&#xD;
	return this.sl_hydrogenTrucks_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderFossilFuelTrucks_pct() {&#xD;
	return this.sl_fossilFuelTrucks_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderElectricVans_pct() {&#xD;
	return this.sl_electricVans_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderFossilFuelVans_pct() {&#xD;
	return this.sl_fossilFuelVans_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderElectricCars_pct() {&#xD;
	return this.sl_electricCars_pct;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSliderFossilFuelCars_pct() {&#xD;
	return this.sl_fossilFuelCars_pct;&#xD;
}&#xD;
&#xD;
</AdditionalClassCode>
				<Import>import kotlin.Triple;</Import>
				<ExtendsReference>
					<PackageName>zerointerfaceloader</PackageName>
					<ClassName>tabArea</ClassName>
				</ExtendsReference>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1722245324901</Id>
					<Name>1722245324901</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089976</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1722245324898</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1722245324902</CurrentLevel>
				<ConnectionsId>1722245324896</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1729167973194</Id>
						<Name>v_totalNumberOfGhostVehicle_Trucks</Name>
						<X>40</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729168015819</Id>
						<Name>v_totalNumberOfGhostVehicle_Vans</Name>
						<X>40</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729168016768</Id>
						<Name>v_totalNumberOfGhostVehicle_Cars</Name>
						<X>40</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722256088443</Id>
						<Name>f_setVehicleSliders</Name>
						<Description>Function that calculates the values of the other sliders and sets them without calling an action. Takes as parameters the index of the slider which should not be touched as well as all the slider objects. HydrogenVehicle slider is optional and an argument of null can be passed. </Description>
						<X>70</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>sliderIndex</Name>
							<Type>int</Type>
						</Parameter>
						<Parameter>
							<Name>electricSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>hydrogenSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>fossilFuelSlider</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pct_electric = electricSlider.getValue();&#xD;
double pct_hydrogen = 0;&#xD;
double pct_fossilFuel = fossilFuelSlider.getValue();&#xD;
if (hydrogenSlider != null) {&#xD;
	pct_hydrogen = hydrogenSlider.getValue();&#xD;
}&#xD;
 &#xD;
 &#xD;
//Set array with pct values&#xD;
double pctArray[]={pct_electric, pct_hydrogen, pct_fossilFuel};&#xD;
double pctExcess = Arrays.stream(pctArray).sum() - 100;&#xD;
for (int i = 0; i&lt;pctArray.length; i++){&#xD;
	if (!(i==(int)sliderIndex)) {&#xD;
		pctArray[i] = max(0,pctArray[i] - pctExcess);&#xD;
		pctExcess = Arrays.stream(pctArray).sum() - 100;&#xD;
	}&#xD;
}&#xD;
if (pctExcess != 0) {&#xD;
	traceln("Sliders don't add up to 100%!");&#xD;
}&#xD;
 &#xD;
//Set Sliders&#xD;
electricSlider.setValue(pctArray[0], false);&#xD;
if (hydrogenSlider != null) {&#xD;
	hydrogenSlider.setValue(pctArray[1], false);&#xD;
}&#xD;
fossilFuelSlider.setValue(pctArray[2], false);&#xD;
&#xD;
/*&#xD;
double pct_fossilFuel = fossilFuelSlider.getValue();&#xD;
double pct_electric = electricSlider.getValue();&#xD;
double pct_hydrogen = 0;&#xD;
if (hydrogenSlider != null) {&#xD;
	pct_hydrogen = hydrogenSlider.getValue();&#xD;
}&#xD;
 &#xD;
 &#xD;
//Set array with pct values&#xD;
double pctArray[]={pct_fossilFuel, pct_electric, pct_hydrogen};&#xD;
double pctExcess = Arrays.stream(pctArray).sum() - 100;&#xD;
for (int i = 0; i&lt;pctArray.length; i++){&#xD;
	if (!(i==(int)sliderIndex)) {&#xD;
		pctArray[i] = max(0,pctArray[i] - pctExcess);&#xD;
		pctExcess = Arrays.stream(pctArray).sum() - 100;&#xD;
	}&#xD;
}&#xD;
if (pctExcess != 0) {&#xD;
	traceln("Sliders don't add up to 100%!");&#xD;
}&#xD;
 &#xD;
//Set Sliders&#xD;
fossilFuelSlider.setValue(pctArray[0], false);&#xD;
electricSlider.setValue(pctArray[1], false);&#xD;
if (hydrogenSlider != null) {&#xD;
	hydrogenSlider.setValue(pctArray[2], false);&#xD;
}&#xD;
*/</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722342449665</Id>
						<Name>f_setDemandReduction</Name>
						<Description>Function that reduces the distance of all triptrackers of vehicles. Takes as arguments a list of GridConnections to effect and a percentage to reduce by compared to the default distance value of the triptrackers.</Description>
						<X>70</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>demandReduction_pct</Name>
							<Type>double</Type>
						</Parameter>
						<Body>// TODO: when new triptrackers are created, for example in the company ui sliders,&#xD;
// make sure they have this distance scaling fraction!&#xD;
&#xD;
double scalingFactor = 1 - demandReduction_pct/100;&#xD;
&#xD;
for (GridConnection gc : gcList) {&#xD;
	for (J_EAVehicle j_ea : gc.c_vehicleAssets) {&#xD;
		j_ea.getTripTracker().distanceScaling_fr = scalingFactor;&#xD;
	}&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null) {&#xD;
			//if(companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) != gc){&#xD;
				//int i = indexOf(companyUI.c_ownedGridConnections.stream().toArray(), gc);&#xD;
				//companyUI.GCnr_selection.setValue(i, true);&#xD;
			//}&#xD;
			companyUI.sl_mobilityDemandCompanyReduction.setValue(demandReduction_pct, false);			&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Triple&lt;Integer, Integer, Integer&gt;</ReturnType>
						<Id>1729168033110</Id>
						<Name>f_calculateNumberOfGhostVehicles</Name>
						<X>20</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>Integer numberOfGhostVehicle_Cars = 0;&#xD;
Integer numberOfGhostVehicle_Vans = 0;&#xD;
Integer numberOfGhostVehicle_Trucks = 0;&#xD;
&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		for(int i = 0; i &lt; companyUI.c_ownedGridConnections.size(); i++){&#xD;
			if(companyUI.c_ownedGridConnections.get(i).v_hasQuarterHourlyValues &amp;&amp; companyUI.c_ownedGridConnections.get(i).v_isActive){&#xD;
				numberOfGhostVehicle_Cars += companyUI.v_minEVCarSlider;&#xD;
				numberOfGhostVehicle_Vans += companyUI.v_minEVVanSlider;&#xD;
				numberOfGhostVehicle_Trucks += companyUI.v_minEVTruckSlider;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
return new Triple(numberOfGhostVehicle_Cars, numberOfGhostVehicle_Vans, numberOfGhostVehicle_Trucks);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1746008458894</Id>
						<Name>f_setDieselTrucks</Name>
						<X>70</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHydrogenTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctDieselTrucksGoal = sliderFossilFuelTrucks.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Trucks = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfTrucks( gcList, numberOfGhostVehicle_Trucks );&#xD;
&#xD;
int nbEtruckCurrent = triple.getFirst();&#xD;
int nbHydrogentrucksCurrent = triple.getSecond();&#xD;
int nbDieseltrucksCurrent = triple.getThird();&#xD;
int total_vehicles = nbEtruckCurrent + nbHydrogentrucksCurrent + nbDieseltrucksCurrent;&#xD;
&#xD;
int nbDieselTrucksGoal = roundToInt(total_vehicles*pctDieselTrucksGoal/100.0);&#xD;
boolean finishedLookingThroughElectricTrucks = false;&#xD;
&#xD;
if (nbDieseltrucksCurrent &lt; nbDieselTrucksGoal) {&#xD;
	// Add Diesel Trucks&#xD;
	while ( nbDieseltrucksCurrent &lt; nbDieselTrucksGoal ) {&#xD;
		if ( nbEtruckCurrent &gt; numberOfGhostVehicle_Trucks &amp;&amp; !finishedLookingThroughElectricTrucks ) {&#xD;
			// replace electric truck with a diesel truck&#xD;
			if (!f_electricToDieselTruck(gcList)) {&#xD;
				finishedLookingThroughElectricTrucks = true;&#xD;
			}&#xD;
			else {&#xD;
				nbDieseltrucksCurrent++;&#xD;
				nbEtruckCurrent--;&#xD;
			}&#xD;
		}&#xD;
		else{// ( nbHydrogentrucksCurrent &gt; 0 ) {&#xD;
			// replace hydrogen truck with diesel truck&#xD;
			if (!f_hydrogenToDieselTruck(gcList)) {&#xD;
				f_setTruckSlidersToCurrentEngineState(gcList, sliderElectricTrucks, sliderHydrogenTrucks, sliderFossilFuelTrucks);&#xD;
				return;&#xD;
			}&#xD;
			nbDieseltrucksCurrent++;&#xD;
			nbHydrogentrucksCurrent--;&#xD;
		}&#xD;
		/*&#xD;
		else {&#xD;
			throw new RuntimeException("Can not add another diesel vehicle as there are no other vehicles to replace.");&#xD;
		}&#xD;
		*/&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Diesel Trucks&#xD;
	while ( nbDieseltrucksCurrent &gt; nbDieselTrucksGoal ) {&#xD;
		// replace a diesel truck with an electric truck&#xD;
		if (!f_dieselToElectricTruck(gcList)) {&#xD;
			f_setTruckSlidersToCurrentEngineState(gcList, sliderElectricTrucks, sliderHydrogenTrucks, sliderFossilFuelTrucks);&#xD;
			return;&#xD;
		}&#xD;
		nbDieseltrucksCurrent--;&#xD;
		nbEtruckCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1746008458907</Id>
						<Name>f_setHydrogenTrucks</Name>
						<X>70</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHydrogenTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctHydrogenTrucksGoal = sliderHydrogenTrucks.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Trucks = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfTrucks( gcList, numberOfGhostVehicle_Trucks );&#xD;
&#xD;
int nbEtruckCurrent = triple.getFirst();&#xD;
int nbHydrogentrucksCurrent = triple.getSecond();&#xD;
int nbDieseltrucksCurrent = triple.getThird();&#xD;
int total_vehicles = nbEtruckCurrent + nbHydrogentrucksCurrent + nbDieseltrucksCurrent;&#xD;
&#xD;
int nbHydrogenTrucksGoal = roundToInt(total_vehicles*pctHydrogenTrucksGoal/100.0);&#xD;
boolean finishedLookingThroughDieselTrucks = false;&#xD;
&#xD;
if (nbHydrogentrucksCurrent &lt; nbHydrogenTrucksGoal) {&#xD;
	// Add Hydrogen Trucks&#xD;
	while ( nbHydrogentrucksCurrent &lt; nbHydrogenTrucksGoal &amp;&amp; !finishedLookingThroughDieselTrucks ) {&#xD;
		if ( nbDieseltrucksCurrent &gt; 0 ) {&#xD;
			// replace a diesel truck with a hydrogen truck&#xD;
			if (!f_dieselToHydrogenTruck(gcList)) {&#xD;
				finishedLookingThroughDieselTrucks = true;&#xD;
			}&#xD;
			else {&#xD;
				nbHydrogentrucksCurrent++;&#xD;
				nbDieseltrucksCurrent--;&#xD;
			}&#xD;
		}&#xD;
		else{// ( nbEtruckCurrent &gt; v_totalNumberOfGhostVehicle_Trucks ) {&#xD;
			// replace an electric truck with a hydrogen truck&#xD;
			if (!f_electricToHydrogenTruck(gcList)) {&#xD;
				f_setTruckSlidersToCurrentEngineState(gcList, sliderElectricTrucks, sliderHydrogenTrucks, sliderFossilFuelTrucks);&#xD;
				return;&#xD;
			}&#xD;
			nbHydrogentrucksCurrent++;&#xD;
			nbEtruckCurrent--;	&#xD;
		}&#xD;
		/*else {&#xD;
			throw new RuntimeException("Can not add another hydrogen vehicle as there are no other vehicles to replace.");&#xD;
		}*/&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Hydrogen Trucks&#xD;
	while ( nbHydrogentrucksCurrent &gt; nbHydrogenTrucksGoal ) {&#xD;
		// replace a hydrogen truck with a diesel truck&#xD;
		if (!f_hydrogenToDieselTruck(gcList)) {&#xD;
			f_setTruckSlidersToCurrentEngineState(gcList, sliderElectricTrucks, sliderHydrogenTrucks, sliderFossilFuelTrucks);&#xD;
			return;&#xD;
		}&#xD;
		nbHydrogentrucksCurrent--;&#xD;
		nbDieseltrucksCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1746008458917</Id>
						<Name>f_setElectricTrucks</Name>
						<X>70</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHydrogenTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctElectricTrucksGoal = sliderElectricTrucks.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Trucks = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfTrucks( gcList, numberOfGhostVehicle_Trucks );&#xD;
&#xD;
int nbEtruckCurrent = triple.getFirst();&#xD;
int nbHydrogentrucksCurrent = triple.getSecond();&#xD;
int nbDieseltrucksCurrent = triple.getThird();&#xD;
int total_vehicles = nbEtruckCurrent + nbHydrogentrucksCurrent + nbDieseltrucksCurrent;&#xD;
&#xD;
int nbElectricTrucksGoal = roundToInt(total_vehicles*pctElectricTrucksGoal/100.0);&#xD;
boolean finishedLookingThroughDieselTrucks = false;&#xD;
&#xD;
if (nbEtruckCurrent &lt; nbElectricTrucksGoal) {&#xD;
	// Add Electric Trucks&#xD;
	while ( nbEtruckCurrent &lt; nbElectricTrucksGoal &amp;&amp; !finishedLookingThroughDieselTrucks ) {&#xD;
		if ( nbDieseltrucksCurrent &gt; 0 ) {&#xD;
			// replace a diesel truck with an electric truck&#xD;
			if (!f_dieselToElectricTruck(gcList)) {&#xD;
				finishedLookingThroughDieselTrucks = true;&#xD;
			}&#xD;
			else {&#xD;
				nbEtruckCurrent++;&#xD;
				nbDieseltrucksCurrent--;&#xD;
			}&#xD;
		}&#xD;
		else{// if ( nbHydrogentrucksCurrent &gt; 0 ) {&#xD;
			// replace a hydrogen truck with an electric truck&#xD;
			if (!f_hydrogenToElectricTruck(gcList)) {&#xD;
				f_setTruckSlidersToCurrentEngineState(gcList, sliderElectricTrucks, sliderHydrogenTrucks, sliderFossilFuelTrucks);&#xD;
				return;&#xD;
			}&#xD;
			nbEtruckCurrent++;&#xD;
			nbHydrogentrucksCurrent--;&#xD;
		}&#xD;
		/*else {&#xD;
			throw new RuntimeException("Can not add another hydrogen vehicle as there are no other vehicles to replace.");&#xD;
		}&#xD;
		*/&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Electric Trucks&#xD;
	while ( nbEtruckCurrent &gt; nbElectricTrucksGoal ) {&#xD;
		// replace an electric truck with a diesel truck&#xD;
		if (!f_electricToDieselTruck(gcList)) {&#xD;
			f_setTruckSlidersToCurrentEngineState(gcList, sliderElectricTrucks, sliderHydrogenTrucks, sliderFossilFuelTrucks);&#xD;
			return;&#xD;
		}&#xD;
		nbEtruckCurrent--;&#xD;
		nbDieseltrucksCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1746008458938</Id>
						<Name>f_dieselToElectricTruck</Name>
						<X>360</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EADieselVehicle dieselTruck = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the diesel truck to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		dieselTruck = (J_EADieselVehicle)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; gc.v_isActive);&#xD;
		if ( dieselTruck != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {	&#xD;
	dieselTruck = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if (dieselTruck!=null) {&#xD;
	GridConnection gc = (GridConnection)dieselTruck.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC						&#xD;
			companyUI.v_nbDieselTrucks--;&#xD;
			companyUI.sl_dieselTrucksCompany.setValue(companyUI.v_nbDieselTrucks, false);&#xD;
			companyUI.v_nbEVTrucks++;&#xD;
			companyUI.sl_electricTrucksCompany.setValue(companyUI.v_nbEVTrucks, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			if (foundAdditionalVehicle) {&#xD;
				companyUI.c_additionalVehicles.get(gc).remove(dieselTruck);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
		&#xD;
	J_ActivityTrackerTrips tripTracker = dieselTruck.tripTracker;&#xD;
	boolean available = dieselTruck.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(dieselTruck);&#xD;
	dieselTruck.removeEnergyAsset();&#xD;
&#xD;
	// Re-add Electric vehicle&#xD;
	double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerTruck_kW;&#xD;
	double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageTruck_kWh;&#xD;
	double initialStateOfCharge_fr = 1.0;&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;&#xD;
	double vehicleScalingElectric = 1.0;&#xD;
	J_EAEV electricTruck = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_fr, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_TRUCK, tripTracker);  &#xD;
	electricTruck.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, electricTruck);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(electricTruck);&#xD;
	}&#xD;
}&#xD;
&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is a diesel truck left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1746008458950</Id>
						<Name>f_hydrogenToElectricTruck</Name>
						<X>360</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EAHydrogenVehicle hydrogenTruck = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the hydrogen truck to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		hydrogenTruck = (J_EAHydrogenVehicle)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( hydrogenTruck != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {&#xD;
	hydrogenTruck = (J_EAHydrogenVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if (hydrogenTruck!=null) {&#xD;
	GridConnection gc = (GridConnection)hydrogenTruck.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			companyUI.v_nbHydrogenTrucks--;&#xD;
			companyUI.sl_hydrogenTrucksCompany.setValue(companyUI.v_nbHydrogenTrucks, false);&#xD;
			companyUI.v_nbEVTrucks++;&#xD;
			companyUI.sl_electricTrucksCompany.setValue(companyUI.v_nbEVTrucks, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);	&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(hydrogenTruck);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = hydrogenTruck.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = hydrogenTruck.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(hydrogenTruck);&#xD;
	hydrogenTruck.removeEnergyAsset();&#xD;
&#xD;
&#xD;
	// Re-add Electric vehicle&#xD;
	double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerTruck_kW;&#xD;
	double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageTruck_kWh;&#xD;
	double initialStateOfCharge_fr = 1.0;&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;&#xD;
	double vehicleScalingElectric = 1.0;&#xD;
	J_EAEV electricTruck = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_fr, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_TRUCK, tripTracker);  &#xD;
	electricTruck.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, electricTruck);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(electricTruck);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is a hydrogen truck left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1746008458960</Id>
						<Name>f_electricToHydrogenTruck</Name>
						<X>360</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EAEV electricTruck = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the electric truck to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		electricTruck = (J_EAEV)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( electricTruck != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicle&#xD;
if (!foundAdditionalVehicle) {&#xD;
	electricTruck = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if (electricTruck!=null) {&#xD;
	GridConnection gc = (GridConnection)electricTruck.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC						&#xD;
			companyUI.v_nbEVTrucks--;&#xD;
			companyUI.sl_electricTrucksCompany.setValue(companyUI.v_nbEVTrucks, false);&#xD;
			companyUI.v_nbHydrogenTrucks++;&#xD;
			companyUI.sl_hydrogenTrucksCompany.setValue(companyUI.v_nbHydrogenTrucks, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(electricTruck);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = electricTruck.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = electricTruck.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(electricTruck);&#xD;
	electricTruck.removeEnergyAsset();&#xD;
&#xD;
	// Re-add hydrogen vehicle&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionTruck_kWhpkm;			&#xD;
	double vehicleScaling = 1.0;&#xD;
	J_EAHydrogenVehicle hydrogenVehicle = new J_EAHydrogenVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.HYDROGEN_TRUCK, tripTracker);				&#xD;
	hydrogenVehicle.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, hydrogenVehicle);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(hydrogenVehicle);&#xD;
	}&#xD;
}				&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is an electric truck left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1746008458968</Id>
						<Name>f_dieselToHydrogenTruck</Name>
						<X>360</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EADieselVehicle dieselTruck = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the diesel truck to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		dieselTruck = (J_EADieselVehicle)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( dieselTruck != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {&#xD;
	dieselTruck = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if (dieselTruck!=null) {&#xD;
	GridConnection gc = (GridConnection)dieselTruck.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC						&#xD;
			companyUI.v_nbDieselTrucks--;&#xD;
			companyUI.sl_dieselTrucksCompany.setValue(companyUI.v_nbDieselTrucks, false);&#xD;
			companyUI.v_nbHydrogenTrucks++;&#xD;
			companyUI.sl_hydrogenTrucksCompany.setValue(companyUI.v_nbHydrogenTrucks, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(dieselTruck);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = dieselTruck.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = dieselTruck.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(dieselTruck);&#xD;
	dieselTruck.removeEnergyAsset();&#xD;
&#xD;
	// Re-add hydrogen vehicle&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionTruck_kWhpkm;			&#xD;
	double vehicleScaling = 1.0;&#xD;
	J_EAHydrogenVehicle hydrogenVehicle = new J_EAHydrogenVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.HYDROGEN_TRUCK, tripTracker);				&#xD;
	hydrogenVehicle.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, hydrogenVehicle);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(hydrogenVehicle);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is a diesel truck left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1746008458977</Id>
						<Name>f_electricToDieselTruck</Name>
						<X>360</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EAEV electricTruck = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the electric truck to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		electricTruck = (J_EAEV)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( electricTruck != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {&#xD;
	electricTruck = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if ( electricTruck != null ) {&#xD;
	GridConnection gc = (GridConnection)electricTruck.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			if (companyUI.v_minEVTruckSlider &gt;= companyUI.v_nbEVTrucks) {&#xD;
				traceln("Removed already existing Electric Truck from GC: " + companyUI.p_companyName);&#xD;
			}&#xD;
			else {&#xD;
				companyUI.v_nbEVTrucks--;&#xD;
				companyUI.sl_electricTrucksCompany.setValue(companyUI.v_nbEVTrucks, false);&#xD;
				companyUI.v_nbDieselTrucks++;&#xD;
				companyUI.sl_dieselTrucksCompany.setValue(companyUI.v_nbDieselTrucks, false);&#xD;
			}&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(electricTruck);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = electricTruck.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = electricTruck.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(electricTruck);&#xD;
	electricTruck.removeEnergyAsset();&#xD;
&#xD;
	// Re-add diesel vehicle&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;&#xD;
	double vehicleScaling = 1.0;&#xD;
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_TRUCK, tripTracker);&#xD;
	dieselVehicle.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, dieselVehicle);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(dieselVehicle);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is an electric truck left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1746008458987</Id>
						<Name>f_hydrogenToDieselTruck</Name>
						<X>360</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EAHydrogenVehicle hydrogenTruck = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the hydrogen truck to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		hydrogenTruck = (J_EAHydrogenVehicle)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( hydrogenTruck != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {&#xD;
	hydrogenTruck = (J_EAHydrogenVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if ( hydrogenTruck != null ) {&#xD;
	GridConnection gc = (GridConnection)hydrogenTruck.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			companyUI.v_nbHydrogenTrucks--;&#xD;
			companyUI.sl_hydrogenTrucksCompany.setValue(companyUI.v_nbHydrogenTrucks, false);&#xD;
			companyUI.v_nbDieselTrucks++;&#xD;
			companyUI.sl_dieselTrucksCompany.setValue(companyUI.v_nbDieselTrucks, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(hydrogenTruck);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = hydrogenTruck.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = hydrogenTruck.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(hydrogenTruck);&#xD;
	hydrogenTruck.removeEnergyAsset();&#xD;
&#xD;
	// Re-add diesel vehicle&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;&#xD;
	double vehicleScaling = 1.0;&#xD;
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_TRUCK, tripTracker);&#xD;
	dieselVehicle.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, dieselVehicle);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(dieselVehicle);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is a hydrogen truck left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1746018501114</Id>
						<Name>f_setTruckSlidersToCurrentEngineState</Name>
						<X>360</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHydrogenTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelTrucks</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>List&lt;J_EAVehicle&gt; vehicles = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
for (GridConnection gc : gcList) {&#xD;
	if (gc.v_isActive) {&#xD;
		vehicles.addAll(gc.c_vehicleAssets);&#xD;
	}&#xD;
}&#xD;
&#xD;
int numberOfGhostVehicle_Trucks = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
&#xD;
int nbElectricTrucksCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK &amp;&amp; !(p.getParentAgent() instanceof GCPublicCharger)) + numberOfGhostVehicle_Trucks;&#xD;
int nbDieseltrucksCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);&#xD;
int nbHydrogentrucksCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK);&#xD;
&#xD;
int totalVehicles = nbElectricTrucksCurrent + nbDieseltrucksCurrent + nbHydrogentrucksCurrent;&#xD;
&#xD;
&#xD;
&#xD;
int pct_electricTruckSlider = roundToInt(100.0*nbElectricTrucksCurrent/totalVehicles);&#xD;
int pct_hydrogenTruckSlider = roundToInt(100.0*nbHydrogentrucksCurrent/totalVehicles);&#xD;
int pct_dieselTruckSlider = roundToInt(100.0*nbDieseltrucksCurrent/totalVehicles);&#xD;
&#xD;
sliderElectricTrucks.setValue(pct_electricTruckSlider, false);&#xD;
if ( sliderHydrogenTrucks != null ) {&#xD;
	sliderHydrogenTrucks.setValue(pct_hydrogenTruckSlider, false);&#xD;
}&#xD;
else if ( sliderHydrogenTrucks == null &amp;&amp; pct_hydrogenTruckSlider != 0 ) {&#xD;
	throw new RuntimeException("Hydrogen trucks found but no hydrogen slider passed to f_setTruckSlidersToCurrentEngineState");&#xD;
}sliderFossilFuelTrucks.setValue(pct_dieselTruckSlider, false);&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Triple&lt;Integer, Integer, Integer&gt;</ReturnType>
						<Id>1749134655530</Id>
						<Name>f_calculateCurrentNumberOfTrucks</Name>
						<X>20</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>numberOfGhostVehicle_Trucks</Name>
							<Type>Integer</Type>
						</Parameter>
						<Body>if (numberOfGhostVehicle_Trucks == null) {&#xD;
	numberOfGhostVehicle_Trucks = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
}&#xD;
&#xD;
int nbEtruckCurrent = numberOfGhostVehicle_Trucks;&#xD;
int nbHydrogenTrucksCurrent = 0;&#xD;
int nbDieselTrucksCurrent = 0;&#xD;
for ( GridConnection gc : gcList ) {&#xD;
	nbEtruckCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK &amp;&amp; !(gc instanceof GCPublicCharger) &amp;&amp; gc.v_isActive);&#xD;
	nbHydrogenTrucksCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK &amp;&amp; gc.v_isActive);&#xD;
	nbDieselTrucksCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK &amp;&amp; gc.v_isActive);&#xD;
}&#xD;
&#xD;
return new Triple(nbEtruckCurrent, nbHydrogenTrucksCurrent, nbDieselTrucksCurrent);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1749645625091</Id>
						<Name>f_dieselToElectricVan</Name>
						<X>590</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EADieselVehicle dieselVan = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the diesel van to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		dieselVan = (J_EADieselVehicle)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN &amp;&amp; gc.v_isActive);&#xD;
		if ( dieselVan != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {	&#xD;
	dieselVan = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if (dieselVan!=null) {&#xD;
	GridConnection gc = (GridConnection)dieselVan.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC						&#xD;
			companyUI.v_nbDieselVans--;&#xD;
			companyUI.sl_dieselVansCompany.setValue(companyUI.v_nbDieselVans, false);&#xD;
			companyUI.v_nbEVVans++;&#xD;
			companyUI.sl_electricVansCompany.setValue(companyUI.v_nbEVVans, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			if (foundAdditionalVehicle) {&#xD;
				companyUI.c_additionalVehicles.get(gc).remove(dieselVan);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
		&#xD;
	J_ActivityTrackerTrips tripTracker = dieselVan.tripTracker;&#xD;
	boolean available = dieselVan.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(dieselVan);&#xD;
	dieselVan.removeEnergyAsset();&#xD;
&#xD;
	// Re-add Electric vehicle&#xD;
	double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerVan_kW;&#xD;
	double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageVan_kWh;&#xD;
	double initialStateOfCharge_fr = 1.0;&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionVan_kWhpkm;&#xD;
	double vehicleScalingElectric = 1.0;&#xD;
	J_EAEV electricVan = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_fr, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_VAN, tripTracker);  &#xD;
	electricVan.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, electricVan);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(electricVan);&#xD;
	}&#xD;
}&#xD;
&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is a diesel van left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1749645629101</Id>
						<Name>f_electricToDieselVan</Name>
						<X>590</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EAEV electricVan = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the electric van to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		electricVan = (J_EAEV)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( electricVan != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {&#xD;
	electricVan = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if ( electricVan != null ) {&#xD;
	GridConnection gc = (GridConnection)electricVan.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			if (companyUI.v_minEVVanSlider &gt;= companyUI.v_nbEVVans) {&#xD;
				traceln("Removed already existing Electric Van from GC: " + companyUI.p_companyName);&#xD;
			}&#xD;
			else {&#xD;
				companyUI.v_nbEVVans--;&#xD;
				companyUI.sl_electricVansCompany.setValue(companyUI.v_nbEVVans, false);&#xD;
				companyUI.v_nbDieselVans++;&#xD;
				companyUI.sl_dieselVansCompany.setValue(companyUI.v_nbDieselVans, false);&#xD;
			}&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(electricVan);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = electricVan.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = electricVan.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(electricVan);&#xD;
	electricVan.removeEnergyAsset();&#xD;
&#xD;
	// Re-add diesel vehicle&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;&#xD;
	double vehicleScaling = 1.0;&#xD;
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_VAN, tripTracker);&#xD;
	dieselVehicle.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, dieselVehicle);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(dieselVehicle);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is an electric van left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1749646233660</Id>
						<Name>f_dieselToElectricCar</Name>
						<X>590</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EADieselVehicle dieselCar = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the diesel car to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		dieselCar = (J_EADieselVehicle)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE &amp;&amp; gc.v_isActive);&#xD;
		if ( dieselCar != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {	&#xD;
	dieselCar = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if (dieselCar!=null) {&#xD;
	GridConnection gc = (GridConnection)dieselCar.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC						&#xD;
			companyUI.v_nbDieselCars--;&#xD;
			companyUI.sl_dieselCarsCompany.setValue(companyUI.v_nbDieselCars, false);&#xD;
			companyUI.v_nbEVCars++;&#xD;
			companyUI.sl_electricCarsCompany.setValue(companyUI.v_nbEVCars, false);&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			if (foundAdditionalVehicle) {&#xD;
				companyUI.c_additionalVehicles.get(gc).remove(dieselCar);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
		&#xD;
	J_ActivityTrackerTrips tripTracker = dieselCar.tripTracker;&#xD;
	boolean available = dieselCar.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(dieselCar);&#xD;
	dieselCar.removeEnergyAsset();&#xD;
&#xD;
	// Re-add Electric vehicle&#xD;
	double capacityElectric_kW = zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerCar_kW;&#xD;
	double storageCapacity_kWh = zero_Interface.energyModel.avgc_data.p_avgEVStorageCar_kWh;&#xD;
	double initialStateOfCharge_fr = 1.0;&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;&#xD;
	double vehicleScalingElectric = 1.0;&#xD;
	J_EAEV electricCar = new J_EAEV(gc, capacityElectric_kW, storageCapacity_kWh, initialStateOfCharge_fr, zero_Interface.energyModel.p_timeStep_h, energyConsumption_kWhpkm, vehicleScalingElectric, OL_EnergyAssetType.ELECTRIC_VEHICLE, tripTracker);  &#xD;
	electricCar.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, electricCar);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(electricCar);&#xD;
	}&#xD;
}&#xD;
&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is a diesel car left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1749646235580</Id>
						<Name>f_electricToDieselCar</Name>
						<X>590</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>J_EAEV electricCar = null;&#xD;
boolean foundAdditionalVehicle = false;&#xD;
&#xD;
// find the electric car to remove, search through additional vehicles first&#xD;
if (zero_Interface.c_companyUIs.size() &gt; 0 ) {&#xD;
	for (GridConnection gc : gcList ) {&#xD;
		UI_company companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		List&lt;J_EAVehicle&gt; totalList = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
		for (List&lt;J_EAVehicle&gt; list : companyUI.c_additionalVehicles.values() ) {&#xD;
			totalList.addAll(list);&#xD;
		}&#xD;
		electricCar = (J_EAEV)findFirst(totalList, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive);&#xD;
		if ( electricCar != null ) {&#xD;
			foundAdditionalVehicle = true;&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
// if no additional vehicle was found, search through the regular ordering of vehicles&#xD;
if (!foundAdditionalVehicle) {&#xD;
	electricCar = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE &amp;&amp; ((GridConnection)p.getParentAgent()).v_isActive &amp;&amp; gcList.contains((GridConnection)p.getParentAgent()));&#xD;
}&#xD;
if ( electricCar != null ) {&#xD;
	GridConnection gc = (GridConnection)electricCar.getParentAgent();&#xD;
	&#xD;
	// update UI company&#xD;
	UI_company companyUI = null;&#xD;
	if (zero_Interface.c_companyUIs.size() &gt; 0){&#xD;
		companyUI = zero_Interface.c_companyUIs.get(gc.p_owner.p_connectionOwnerIndexNr);&#xD;
		if (companyUI != null &amp;&amp; companyUI.c_ownedGridConnections.get(companyUI.v_currentSelectedGCnr) == gc) { // should also check the setting of selected GC&#xD;
			if (companyUI.v_minEVCarSlider &gt;= companyUI.v_nbEVCars) {&#xD;
				traceln("Removed already existing Electric Car from GC: " + companyUI.p_companyName);&#xD;
			}&#xD;
			else {&#xD;
				companyUI.v_nbEVCars--;&#xD;
				companyUI.sl_electricCarsCompany.setValue(companyUI.v_nbEVCars, false);&#xD;
				companyUI.v_nbDieselCars++;&#xD;
				companyUI.sl_dieselCarsCompany.setValue(companyUI.v_nbDieselCars, false);&#xD;
			}&#xD;
			companyUI.rb_scenariosPrivateUI.setValue(2, false);&#xD;
			&#xD;
		}&#xD;
		if(foundAdditionalVehicle){&#xD;
			companyUI.c_additionalVehicles.get(gc).remove(electricCar);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	J_ActivityTrackerTrips tripTracker = electricCar.tripTracker;&#xD;
	boolean available = true;&#xD;
	available = electricCar.getAvailability();&#xD;
	zero_Interface.c_orderedVehicles.remove(electricCar);&#xD;
	electricCar.removeEnergyAsset();&#xD;
&#xD;
	// Re-add diesel vehicle&#xD;
	double energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;&#xD;
	double vehicleScaling = 1.0;&#xD;
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(gc, energyConsumption_kWhpkm, zero_Interface.energyModel.p_timeStep_h, vehicleScaling, OL_EnergyAssetType.DIESEL_VEHICLE, tripTracker);&#xD;
	dieselVehicle.available = available;&#xD;
	&#xD;
	zero_Interface.c_orderedVehicles.add(0, dieselVehicle);&#xD;
	&#xD;
	//check if was additional vehicle in companyUI, if so: add to collection&#xD;
	if(companyUI != null &amp;&amp; foundAdditionalVehicle){&#xD;
		companyUI.c_additionalVehicles.get(gc).add(dieselVehicle);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	return false;&#xD;
	//throw new RuntimeException("Numbers suggest there is an electric car left, but could not find it.");&#xD;
}&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Triple&lt;Integer, Integer, Integer&gt;</ReturnType>
						<Id>1749655535164</Id>
						<Name>f_calculateCurrentNumberOfVans</Name>
						<X>20</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>numberOfGhostVehicle_Vans</Name>
							<Type>Integer</Type>
						</Parameter>
						<Body>if (numberOfGhostVehicle_Vans == null) {&#xD;
	numberOfGhostVehicle_Vans = f_calculateNumberOfGhostVehicles(gcList).getSecond();&#xD;
}&#xD;
&#xD;
int nbEVansCurrent = numberOfGhostVehicle_Vans;&#xD;
int nbHydrogenVansCurrent = 0;&#xD;
int nbDieselVansCurrent = 0;&#xD;
for ( GridConnection gc : gcList ) {&#xD;
	nbEVansCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN &amp;&amp; !(gc instanceof GCPublicCharger) &amp;&amp; gc.v_isActive);&#xD;
	nbHydrogenVansCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN &amp;&amp; gc.v_isActive);&#xD;
	nbDieselVansCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN &amp;&amp; gc.v_isActive);&#xD;
}&#xD;
&#xD;
return new Triple(nbEVansCurrent, nbHydrogenVansCurrent, nbDieselVansCurrent);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Triple&lt;Integer, Integer, Integer&gt;</ReturnType>
						<Id>1749655667960</Id>
						<Name>f_calculateCurrentNumberOfCars</Name>
						<X>20</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>numberOfGhostVehicle_Cars</Name>
							<Type>Integer</Type>
						</Parameter>
						<Body>if (numberOfGhostVehicle_Cars == null) {&#xD;
	numberOfGhostVehicle_Cars = f_calculateNumberOfGhostVehicles(gcList).getSecond();&#xD;
}&#xD;
&#xD;
int nbEVsCurrent = numberOfGhostVehicle_Cars;&#xD;
int nbHydrogenCarsCurrent = 0;&#xD;
int nbDieselCarsCurrent = 0;&#xD;
for ( GridConnection gc : gcList ) {&#xD;
	nbEVsCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE &amp;&amp; !(gc instanceof GCPublicCharger) &amp;&amp; gc.v_isActive);&#xD;
	nbHydrogenCarsCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VEHICLE &amp;&amp; gc.v_isActive);&#xD;
	nbDieselCarsCurrent += count(gc.c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE &amp;&amp; gc.v_isActive);&#xD;
}&#xD;
&#xD;
return new Triple(nbEVsCurrent, nbHydrogenCarsCurrent, nbDieselCarsCurrent);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749655752858</Id>
						<Name>f_setDieselVans</Name>
						<X>70</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctDieselVansGoal = sliderFossilFuelVans.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Vans = f_calculateNumberOfGhostVehicles(gcList).getSecond();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfVans( gcList, numberOfGhostVehicle_Vans );&#xD;
&#xD;
int nbEvanCurrent = triple.getFirst();&#xD;
int nbDieselvansCurrent = triple.getThird();&#xD;
&#xD;
int total_vehicles = nbEvanCurrent + nbDieselvansCurrent;&#xD;
&#xD;
int nbDieselVansGoal = roundToInt(total_vehicles*pctDieselVansGoal/100.0);&#xD;
&#xD;
if (nbDieselvansCurrent &lt; nbDieselVansGoal) {&#xD;
	// Add Diesel Vans&#xD;
	while ( nbDieselvansCurrent &lt; nbDieselVansGoal ) {&#xD;
		if ( nbEvanCurrent &gt; numberOfGhostVehicle_Vans ) {&#xD;
			// replace electric van with a diesel van&#xD;
			if (!f_electricToDieselVan(gcList)) {&#xD;
				f_setVanSlidersToCurrentEngineState(gcList, sliderElectricVans, null, sliderFossilFuelVans);&#xD;
				return;&#xD;
			}&#xD;
			else {&#xD;
				nbDieselvansCurrent++;&#xD;
				nbEvanCurrent--;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Diesel Vans&#xD;
	while ( nbDieselvansCurrent &gt; nbDieselVansGoal ) {&#xD;
		// replace a diesel van with an electric van&#xD;
		if (!f_dieselToElectricVan(gcList)) {&#xD;
			f_setVanSlidersToCurrentEngineState(gcList, sliderElectricVans, null, sliderFossilFuelVans);&#xD;
			return;&#xD;
		}&#xD;
		nbDieselvansCurrent--;&#xD;
		nbEvanCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749656346356</Id>
						<Name>f_setElectricVans</Name>
						<X>70</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctElectricVansGoal = sliderElectricVans.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Vans = f_calculateNumberOfGhostVehicles(gcList).getSecond();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfVans( gcList, numberOfGhostVehicle_Vans );&#xD;
&#xD;
int nbEvanCurrent = triple.getFirst();&#xD;
int nbDieselvansCurrent = triple.getThird();&#xD;
&#xD;
int total_vehicles = nbEvanCurrent + nbDieselvansCurrent;&#xD;
&#xD;
int nbElectricVansGoal = roundToInt(total_vehicles*pctElectricVansGoal/100.0);&#xD;
&#xD;
if (nbEvanCurrent &lt; nbElectricVansGoal) {&#xD;
	// Add Electric Vans&#xD;
	while ( nbEvanCurrent &lt; nbElectricVansGoal ) {&#xD;
		if ( nbDieselvansCurrent &gt; 0 ) {&#xD;
			// replace a diesel van with an electric van&#xD;
			if (!f_dieselToElectricVan(gcList)) {&#xD;
				f_setVanSlidersToCurrentEngineState(gcList, sliderElectricVans, null, sliderFossilFuelVans);&#xD;
				return;&#xD;
			}&#xD;
			else {&#xD;
				nbEvanCurrent++;&#xD;
				nbDieselvansCurrent--;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Electric Vans&#xD;
	while ( nbEvanCurrent &gt; nbElectricVansGoal ) {&#xD;
		// replace an electric van with a diesel van&#xD;
		if (!f_electricToDieselVan(gcList)) {&#xD;
			f_setVanSlidersToCurrentEngineState(gcList, sliderElectricVans, null, sliderFossilFuelVans);&#xD;
			return;&#xD;
		}&#xD;
		nbEvanCurrent--;&#xD;
		nbDieselvansCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749717776391</Id>
						<Name>f_setDieselCars</Name>
						<X>70</X>
						<Y>890</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctDieselCarsGoal = sliderFossilFuelCars.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Cars = f_calculateNumberOfGhostVehicles(gcList).getSecond();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfCars( gcList, numberOfGhostVehicle_Cars );&#xD;
&#xD;
int nbEcarCurrent = triple.getFirst();&#xD;
int nbDieselcarsCurrent = triple.getThird();&#xD;
&#xD;
int total_vehicles = nbEcarCurrent + nbDieselcarsCurrent;&#xD;
&#xD;
int nbDieselCarsGoal = roundToInt(total_vehicles*pctDieselCarsGoal/100.0);&#xD;
&#xD;
if (nbDieselcarsCurrent &lt; nbDieselCarsGoal) {&#xD;
	// Add Diesel Cars&#xD;
	while ( nbDieselcarsCurrent &lt; nbDieselCarsGoal ) {&#xD;
		if ( nbEcarCurrent &gt; numberOfGhostVehicle_Cars ) {&#xD;
			// replace electric car with a diesel car&#xD;
			if (!f_electricToDieselCar(gcList)) {&#xD;
				f_setCarSlidersToCurrentEngineState(gcList, sliderElectricCars, null, sliderFossilFuelCars);&#xD;
				return;&#xD;
			}&#xD;
			else {&#xD;
				nbDieselcarsCurrent++;&#xD;
				nbEcarCurrent--;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Diesel Cars&#xD;
	while ( nbDieselcarsCurrent &gt; nbDieselCarsGoal ) {&#xD;
		// replace a diesel car with an electric car&#xD;
		if (!f_dieselToElectricCar(gcList)) {&#xD;
			f_setCarSlidersToCurrentEngineState(gcList, sliderElectricCars, null, sliderFossilFuelCars);&#xD;
			return;&#xD;
		}&#xD;
		nbDieselcarsCurrent--;&#xD;
		nbEcarCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749717779317</Id>
						<Name>f_setElectricCars</Name>
						<X>70</X>
						<Y>910</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>double pctElectricCarsGoal = sliderElectricCars.getValue();&#xD;
&#xD;
int numberOfGhostVehicle_Cars = f_calculateNumberOfGhostVehicles(gcList).getSecond();&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = f_calculateCurrentNumberOfCars( gcList, numberOfGhostVehicle_Cars );&#xD;
&#xD;
int nbEcarCurrent = triple.getFirst();&#xD;
int nbDieselcarsCurrent = triple.getThird();&#xD;
&#xD;
int total_vehicles = nbEcarCurrent + nbDieselcarsCurrent;&#xD;
&#xD;
int nbElectricCarsGoal = roundToInt(total_vehicles*pctElectricCarsGoal/100.0);&#xD;
&#xD;
if (nbEcarCurrent &lt; nbElectricCarsGoal) {&#xD;
	// Add Electric Cars&#xD;
	while ( nbEcarCurrent &lt; nbElectricCarsGoal ) {&#xD;
		if ( nbDieselcarsCurrent &gt; 0 ) {&#xD;
			// replace a diesel car with an electric car&#xD;
			if (!f_dieselToElectricCar(gcList)) {&#xD;
				f_setCarSlidersToCurrentEngineState(gcList, sliderElectricCars, null, sliderFossilFuelCars);&#xD;
				return;&#xD;
			}&#xD;
			else {&#xD;
				nbEcarCurrent++;&#xD;
				nbDieselcarsCurrent--;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// Remove Electric Cars&#xD;
	while ( nbEcarCurrent &gt; nbElectricCarsGoal ) {&#xD;
		// replace an electric car with a diesel car&#xD;
		if (!f_electricToDieselCar(gcList)) {&#xD;
			f_setCarSlidersToCurrentEngineState(gcList, sliderElectricCars, null, sliderFossilFuelCars);&#xD;
			return;&#xD;
		}&#xD;
		nbEcarCurrent--;&#xD;
		nbDieselcarsCurrent++;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749717909708</Id>
						<Name>f_setVanSlidersToCurrentEngineState</Name>
						<X>360</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHydrogenVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelVans</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>List&lt;J_EAVehicle&gt; vehicles = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
for (GridConnection gc : gcList) {&#xD;
	if (gc.v_isActive) {&#xD;
		vehicles.addAll(gc.c_vehicleAssets);&#xD;
	}&#xD;
}&#xD;
&#xD;
int numberOfGhostVehicle_Vans = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
&#xD;
int nbElectricVansCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN &amp;&amp; !(p.getParentAgent() instanceof GCPublicCharger)) + numberOfGhostVehicle_Vans;&#xD;
int nbDieselvansCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN);&#xD;
int nbHydrogenvansCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN);&#xD;
&#xD;
int totalVehicles = nbElectricVansCurrent + nbDieselvansCurrent + nbHydrogenvansCurrent;&#xD;
&#xD;
&#xD;
&#xD;
int pct_electricVanSlider = roundToInt(100.0*nbElectricVansCurrent/totalVehicles);&#xD;
int pct_hydrogenVanSlider = roundToInt(100.0*nbHydrogenvansCurrent/totalVehicles);&#xD;
int pct_dieselVanSlider = roundToInt(100.0*nbDieselvansCurrent/totalVehicles);&#xD;
&#xD;
sliderElectricVans.setValue(pct_electricVanSlider, false);&#xD;
if ( sliderHydrogenVans != null ) {&#xD;
	sliderHydrogenVans.setValue(pct_hydrogenVanSlider, false);&#xD;
}&#xD;
else if ( sliderHydrogenVans == null &amp;&amp; pct_hydrogenVanSlider != 0 ) {&#xD;
	throw new RuntimeException("Hydrogen vans found but no hydrogen slider passed to f_setVanSlidersToCurrentEngineState");&#xD;
}&#xD;
sliderFossilFuelVans.setValue(pct_dieselVanSlider, false);&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749717987139</Id>
						<Name>f_setCarSlidersToCurrentEngineState</Name>
						<X>360</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>List&lt;GridConnection&gt;</Type>
						</Parameter>
						<Parameter>
							<Name>sliderElectricCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderHydrogenCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Parameter>
							<Name>sliderFossilFuelCars</Name>
							<Type>ShapeSlider</Type>
						</Parameter>
						<Body>List&lt;J_EAVehicle&gt; vehicles = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
for (GridConnection gc : gcList) {&#xD;
	if (gc.v_isActive) {&#xD;
		vehicles.addAll(gc.c_vehicleAssets);&#xD;
	}&#xD;
}&#xD;
&#xD;
int numberOfGhostVehicle_Cars = f_calculateNumberOfGhostVehicles(gcList).getThird();&#xD;
&#xD;
int nbElectricCarsCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE &amp;&amp; !(p.getParentAgent() instanceof GCPublicCharger)) + numberOfGhostVehicle_Cars;&#xD;
int nbDieselcarsCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);&#xD;
int nbHydrogencarsCurrent = count(vehicles, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VEHICLE);&#xD;
&#xD;
int totalVehicles = nbElectricCarsCurrent + nbDieselcarsCurrent + nbHydrogencarsCurrent;&#xD;
&#xD;
&#xD;
&#xD;
int pct_electricCarSlider = roundToInt(100.0*nbElectricCarsCurrent/totalVehicles);&#xD;
int pct_hydrogenCarSlider = roundToInt(100.0*nbHydrogencarsCurrent/totalVehicles);&#xD;
int pct_dieselCarSlider = roundToInt(100.0*nbDieselcarsCurrent/totalVehicles);&#xD;
&#xD;
sliderElectricCars.setValue(pct_electricCarSlider, false);&#xD;
if ( sliderHydrogenCars != null ) {&#xD;
	sliderHydrogenCars.setValue(pct_hydrogenCarSlider, false);&#xD;
}&#xD;
else if ( sliderHydrogenCars == null &amp;&amp; pct_hydrogenCarSlider != 0 ) {&#xD;
	throw new RuntimeException("Hydrogen cars found but no hydrogen slider passed to f_setCarSlidersToCurrentEngineState");&#xD;
}&#xD;
sliderFossilFuelCars.setValue(pct_dieselCarSlider, false);&#xD;
&#xD;
&#xD;
//Update variable to change to custom scenario&#xD;
if(!zero_Interface.b_runningMainInterfaceScenarios){&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}&#xD;
zero_Interface.f_resetSettings();</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1722245324896</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1722245483166</Id>
						<Name>uI_Tabs</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Tabs</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
					<ContainerLink>
						<Id>1722252542608</Id>
						<Name>zero_Interface</Name>
						<X>150</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1722245324902</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1722350199532</Id>
								<Name>rect_genericFunctions</Name>
								<X>10</X>
								<Y>470</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>800</Width>
								<Height>470</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722350199535</Id>
								<Name>t_genericFunctions</Name>
								<X>100</X>
								<Y>490</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Generic Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>22</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1722247567090</Id>
								<Name>gr_mobilityDemandSliders</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1722247567092</Id>
										<Name>rect_mobilityDemandSliders</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>DOTTED</LineStyle>
										<Width>370</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-2625550</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567094</Id>
										<Name>sl_fossilFuelCars_pct</Name>
										<X>260</X>
										<Y>295</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>sl_electricCars_pct.setValue(100 - sl_fossilFuelCars_pct.getIntValue(), false);
f_setDieselCars( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricCars_pct, sl_fossilFuelCars_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567096</Id>
										<Name>sl_electricTrucks_pct</Name>
										<X>260</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setVehicleSliders( 0, sl_electricTrucks_pct, sl_hydrogenTrucks_pct, sl_fossilFuelTrucks_pct );
f_setElectricTrucks( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricTrucks_pct, sl_hydrogenTrucks_pct, sl_fossilFuelTrucks_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567098</Id>
										<Name>t_fossilFuelCars_pct</Name>
										<X>230</X>
										<Y>300</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_fossilFuelCars_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722247567100</Id>
										<Name>t_fossilFuelCarsDescription</Name>
										<X>20</X>
										<Y>300</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Fossiele brandstof</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722247567102</Id>
										<Name>t_electricTrucksDescription</Name>
										<X>15</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elektrisch</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722247567104</Id>
										<Name>t_electricTrucks_pct</Name>
										<X>230</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricTrucks_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722247567106</Id>
										<Name>t_mobilityDemandReductionDescription</Name>
										<X>10</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing transport</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567108</Id>
										<Name>sl_mobilityDemandReduction_pct</Name>
										<X>260</X>
										<Y>15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setDemandReduction( zero_Interface.energyModel.f_getActiveGridConnections(), sl_mobilityDemandReduction_pct.getValue() );
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>50</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567110</Id>
										<Name>t_mobilityDemandReduction_pct</Name>
										<X>230</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_mobilityDemandReduction_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567112</Id>
										<Name>sl_hydrogenTrucks_pct</Name>
										<X>260</X>
										<Y>110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setVehicleSliders( 1, sl_electricTrucks_pct, sl_hydrogenTrucks_pct, sl_fossilFuelTrucks_pct );
f_setHydrogenTrucks( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricTrucks_pct, sl_hydrogenTrucks_pct, sl_fossilFuelTrucks_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567114</Id>
										<Name>t_hydrogenTrucksDescription</Name>
										<X>15</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Waterstof</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722247567116</Id>
										<Name>t_hydrogenTrucks_pct</Name>
										<X>230</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_hydrogenTrucks_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567118</Id>
										<Name>sl_fossilFuelTrucks_pct</Name>
										<X>260</X>
										<Y>135</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setVehicleSliders( 2, sl_electricTrucks_pct, sl_hydrogenTrucks_pct, sl_fossilFuelTrucks_pct );
f_setDieselTrucks( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricTrucks_pct, sl_hydrogenTrucks_pct, sl_fossilFuelTrucks_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567120</Id>
										<Name>t_fossilFuelTrucksDescription</Name>
										<X>15</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Fossiele brandstof</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722247567122</Id>
										<Name>t_fossilFuelTrucks_pct</Name>
										<X>230</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_fossilFuelTrucks_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722247567124</Id>
										<Name>t_trucksDescription</Name>
										<X>15</X>
										<Y>65</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Vrachtwagens</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567126</Id>
										<Name>sl_electricCars_pct</Name>
										<X>260</X>
										<Y>270</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>sl_fossilFuelCars_pct.setValue(100 - sl_electricCars_pct.getIntValue(), false);
f_setElectricCars( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricCars_pct, sl_fossilFuelCars_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567128</Id>
										<Name>t_electricCarsDescription</Name>
										<X>20</X>
										<Y>275</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elektrisch</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722247567130</Id>
										<Name>t_electricCars_pct</Name>
										<X>230</X>
										<Y>275</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricCars_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722247567132</Id>
										<Name>t_carsDescription</Name>
										<X>15</X>
										<Y>250</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Auto's</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567134</Id>
										<Name>sl_fossilFuelVans_pct</Name>
										<X>260</X>
										<Y>215</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>sl_electricVans_pct.setValue(100 - sl_fossilFuelVans_pct.getIntValue(), false);
f_setDieselVans( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricVans_pct, sl_fossilFuelVans_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567136</Id>
										<Name>t_fossilFuelVans_pct</Name>
										<X>230</X>
										<Y>220</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_fossilFuelVans_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722247567138</Id>
										<Name>t_fossilFuelVansDescription</Name>
										<X>15</X>
										<Y>220</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Fossiele brandstof</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1722247567140</Id>
										<Name>sl_electricVans_pct</Name>
										<X>260</X>
										<Y>190</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>sl_fossilFuelVans_pct.setValue(100 - sl_electricVans_pct.getIntValue(), false);
f_setElectricVans( zero_Interface.energyModel.f_getActiveGridConnections(), sl_electricVans_pct, sl_fossilFuelVans_pct );</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1722247567142</Id>
										<Name>t_electricVansDescription</Name>
										<X>15</X>
										<Y>195</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elektrisch</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1722247567144</Id>
										<Name>t_electricVans_pct</Name>
										<X>230</X>
										<Y>195</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>#</Text>
										<TextCode>sl_electricVans_pct.getIntValue() + "%"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722247567146</Id>
										<Name>t_vansDescription</Name>
										<X>15</X>
										<Y>170</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Busjes</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Image>
										<Id>1746096199769</Id>
										<Name>i_mobilityReduction</Name>
										<X>160</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_mobilityReduction, zero_Interface.v_infoText.mobilityDemandReduction, i_mobilityReduction.getX() + uI_Tabs.v_presentationXOffset, i_mobilityReduction.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716217</Id>
										<Name>i_electricTruck</Name>
										<X>160</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_electricTruck, zero_Interface.v_infoText.electricTrucks, i_electricTruck.getX() + uI_Tabs.v_presentationXOffset, i_electricTruck.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716230</Id>
										<Name>i_hydrogenTruck</Name>
										<X>160</X>
										<Y>115</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_hydrogenTruck, zero_Interface.v_infoText.hydrogenTrucks, i_hydrogenTruck.getX() + uI_Tabs.v_presentationXOffset, i_hydrogenTruck.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716242</Id>
										<Name>i_fossilFuelTruck</Name>
										<X>160</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_fossilFuelTruck, zero_Interface.v_infoText.fossilTrucks, i_fossilFuelTruck.getX() + uI_Tabs.v_presentationXOffset, i_fossilFuelTruck.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716255</Id>
										<Name>i_electricVans</Name>
										<X>160</X>
										<Y>195</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_electricVans, zero_Interface.v_infoText.electricVans, i_electricVans.getX() + uI_Tabs.v_presentationXOffset, i_electricVans.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716267</Id>
										<Name>i_fossilFuelVans</Name>
										<X>160</X>
										<Y>220</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_fossilFuelVans, zero_Interface.v_infoText.fossilVans, i_fossilFuelVans.getX() + uI_Tabs.v_presentationXOffset, i_fossilFuelVans.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716280</Id>
										<Name>i_electricCars</Name>
										<X>160</X>
										<Y>275</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_electricCars, zero_Interface.v_infoText.electricCars, i_electricCars.getX() + uI_Tabs.v_presentationXOffset, i_electricCars.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Image>
										<Id>1746096716293</Id>
										<Name>i_fossilFuelCars</Name>
										<X>160</X>
										<Y>300</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>zero_Interface.f_setInfoText(i_fossilFuelCars, zero_Interface.v_infoText.fossilCars, i_fossilFuelCars.getX() + uI_Tabs.v_presentationXOffset, i_fossilFuelCars.getY() + uI_Tabs.v_presentationYOffset);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1722342418259</Id>
								<Name>rect_demandFunctions</Name>
								<X>50</X>
								<Y>550</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-8355840</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722342418261</Id>
								<Name>t_demandFunctionsDescription</Name>
								<X>200</X>
								<Y>560</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Demand Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Rectangle>
								<Id>1722342719680</Id>
								<Name>rect_mobilityFunctions</Name>
								<X>50</X>
								<Y>690</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-5952982</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>720</Width>
								<Height>230</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722342719682</Id>
								<Name>t_mobilityFunctionsDescription</Name>
								<X>140</X>
								<Y>700</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Mobility Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1709049456135</Id>
				<Name>UI_Battery</Name>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1709049456141</Id>
					<Name>1709049456141</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089975</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1709049456138</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1709049456142</CurrentLevel>
				<ConnectionsId>1709049456136</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1715597286082</Id>
						<Name>v_colorBattery_lines</Name>
						<X>-740</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(158, 201, 158)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715597307038</Id>
						<Name>v_colorBattery_background</Name>
						<X>-740</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(198, 251, 198)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715597314638</Id>
						<Name>v_colorBatter_3</Name>
						<X>-740</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>white</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715602425848</Id>
						<Name>v_sliderStartValue_priceLimit</Name>
						<X>-730</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715607530949</Id>
						<Name>v_sliderMinValue_balanceLimit</Name>
						<X>-730</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>-zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715607536716</Id>
						<Name>v_sliderMaxValue_balanceLimit</Name>
						<X>-730</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715607544383</Id>
						<Name>v_sliderStartValue_balanceLimit</Name>
						<X>-730</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715630743924</Id>
						<Name>v_sliderStartValue_BatteryP_MW</Name>
						<X>-730</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724947743379</Id>
						<Name>v_currentSelectedBattery</Name>
						<X>-310</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1724947743386</Id>
						<Name>p_amountOfGISObjects</Name>
						<X>-310</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1724947743384</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1724947743389</Id>
						<Name>p_amountOfGC</Name>
						<X>-310</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1724947743387</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724947743355</Id>
						<Name>c_GISObjects_Battery</Name>
						<X>-310</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724947743357</Id>
						<Name>c_gridConnections_Battery</Name>
						<X>-310</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724947743359</Id>
						<Name>c_connectedGridNodes</Name>
						<X>-310</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724947743361</Id>
						<Name>c_connectionOwners_Battery</Name>
						<X>-310</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>ConnectionOwner</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724947743365</Id>
						<Name>c_gridBatteries</Name>
						<X>-310</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAStorageElectric</ElementClass>
							<ValueElementClass>J_EAConversionElectrolyser</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1709553910991</Id>
						<Name>f_styleBatteryUI</Name>
						<X>-760</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715591908888</Id>
						<Name>f_initializeUIBattery</Name>
						<X>-760</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>COC</Name>
							<Type>ConnectionOwner</Type>
						</Parameter>
						<Body>//Instantiate new sliders &#xD;
f_instantiateSlidersBattery(COC);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715591980366</Id>
						<Name>f_instantiateSlidersBattery</Name>
						<X>-740</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>COC</Name>
							<Type>ConnectionOwner</Type>
						</Parameter>
						<Body>// Electrolyser Power start  value&#xD;
v_sliderStartValue_BatteryP_MW = ((J_EAConversionElectrolyser)COC.f_getOwnedGridConnections().get(0).c_conversionAssets.get(0)).getInputCapacity_kW()/1000; &#xD;
sl_batteryPower.setValue(v_sliderStartValue_BatteryP_MW, false);&#xD;
t_powerBattery.setText(v_sliderStartValue_BatteryP_MW + " MW");&#xD;
&#xD;
&#xD;
// Price limit start value&#xD;
v_sliderStartValue_priceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_electricityPriceMaxForProfit_eurpkWh; &#xD;
sl_batteryElectricityPriceLimit.setValue(v_sliderStartValue_priceLimit, false);&#xD;
t_electricityPriceLimit.setText("€" + v_sliderStartValue_priceLimit);&#xD;
&#xD;
&#xD;
//Balance limit start value&#xD;
v_sliderStartValue_balanceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_gridNodeCongestionLimit_kW; &#xD;
sl_batteryElectricityBalanceLimit.setValue(v_sliderStartValue_balanceLimit, false);&#xD;
t_electricityBalanceLimit.setText(v_sliderStartValue_balanceLimit + " MW");&#xD;
&#xD;
&#xD;
//Radio button balance or price mode&#xD;
int rb_value = 0;&#xD;
switch (((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).p_electrolyserOperationMode){&#xD;
&#xD;
	case PRICE:&#xD;
		&#xD;
		rb_value = 0;&#xD;
		//Set visibility of price slider true and balance slider false&#xD;
		gr_electricityPriceSliderBattery.setVisible(true);&#xD;
		gr_electricityBalanceSliderBattery.setVisible(false);&#xD;
	break;&#xD;
	&#xD;
	case BALANCE:&#xD;
		rb_value = 1;&#xD;
		&#xD;
		//Set visibility of balance slider true and price slider false&#xD;
		gr_electricityBalanceSliderBattery.setVisible(true);&#xD;
		gr_electricityPriceSliderBattery.setVisible(false);&#xD;
	break;&#xD;
}&#xD;
rb_batteryMode.setValue(rb_value, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724947743369</Id>
						<Name>f_setScenarioFuture</Name>
						<X>-290</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>//Set button to custom early on, so traceln will get ignored.&#xD;
rb_scenariosPrivateUI.setValue(2, false);&#xD;
&#xD;
&#xD;
//Scenario code here&#xD;
&#xD;
&#xD;
//Reset button to current, due to sliders putting it on custom&#xD;
rb_scenariosPrivateUI.setValue(1, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724947743373</Id>
						<Name>f_setScenario</Name>
						<X>-310</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>scenario_nr</Name>
							<Type>int</Type>
						</Parameter>
						<Body>switch (scenario_nr){&#xD;
&#xD;
	case 0: // Current&#xD;
&#xD;
	break;&#xD;
	&#xD;
	case 1: // Future&#xD;
&#xD;
	break;&#xD;
	&#xD;
	case 2: // Hydrogen&#xD;
		traceln("Selected scenario: Hydrogen : DOES NOTHING YET");&#xD;
	break;&#xD;
	&#xD;
	case 3: // Custom&#xD;
&#xD;
		if(rb_scenariosPrivateUI.getValue() == 2){&#xD;
		return;&#xD;
		}&#xD;
		rb_scenariosPrivateUI.setValue(2, false);&#xD;
		traceln("Selected scenario: Custom");&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
&#xD;
}&#xD;
&#xD;
//Set 'results up to date' to false&#xD;
zero_Interface.b_resultsUpToDate = false;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724947743375</Id>
						<Name>f_setScenarioCurrent</Name>
						<X>-290</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>//Set button to custom early on, so traceln will get ignored.&#xD;
rb_scenariosPrivateUI.setValue(2, false);&#xD;
&#xD;
&#xD;
//Scenario code here&#xD;
&#xD;
&#xD;
//Reset button to current, due to sliders putting it on custom&#xD;
rb_scenariosPrivateUI.setValue(0, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724947743377</Id>
						<Name>f_setSelectedGC</Name>
						<Description>Function that sets the sliders to match the currently present settings of the energy assets owned by the selected GC. Used when a connection owner has multiple grid connections, and wants to set the sliders of a different GC. </Description>
						<X>-310</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Initialize slider presets to selected GC (min, max, etc.)&#xD;
//f_setSliderPresets();&#xD;
&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1709049456136</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1709049456197</Id>
						<Name>zero_Interface</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1709049456142</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1725002991039</Id>
								<Name>rect_canvas</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>1920</Width>
								<Height>980</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1725002921481</Id>
								<Name>rect_scenarios</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_colorBattery_background</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>370</Width>
								<Height>170</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_colorBattery_lines</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<TimePlot>
								<Id>1709582023151</Id>
								<Name>plot</Name>
								<X>400</X>
								<Y>280</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751013532165</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1709625600000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>540</Width>
								<Height>400</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>460</Width>
									<Height>310</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<SamplesToKeep>100</SamplesToKeep>
								<TimeWindowExpression>100</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
							</TimePlot>
							<Rectangle>
								<Id>1715589407937</Id>
								<Name>slider_blocker</Name>
								<X>0</X>
								<Y>170</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_colorBattery_lines</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>370</Width>
								<Height>810</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_colorBatter_3</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1715596728186</Id>
								<Name>t_batterySliders</Name>
								<X>70</X>
								<Y>200</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Battery</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>22</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1715597165299</Id>
								<Name>gr_buttonBattery</Name>
								<X>41</X>
								<Y>211</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Oval>
										<Id>1715596934178</Id>
										<Name>ovalBatteryButton</Name>
										<X>-1</X>
										<Y>-1</Y>
										<Label>
											<X>0</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<RadiusX>20</RadiusX>
										<RadiusY>40</RadiusY>
										<Rotation>0.0</Rotation>
										<FillColor>-6632142</FillColor>
										<FillColorCode>zero_Interface.v_batteryColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Oval>
									<Text>
										<Id>1715596882276</Id>
										<Name>t_battery</Name>
										<X>-10</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-1</Color>
										<Text>Bat</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1715606650390</Id>
								<Name>gr_electricityPriceSliderBattery</Name>
								<X>190</X>
								<Y>450</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1715597606225</Id>
										<Name>txt_electricityPriceLimit</Name>
										<X>-170</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Electriciteits prijs limiet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1715597606227</Id>
										<Name>sl_batteryElectricityPriceLimit</Name>
										<X>62</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//Adjust the maximum price of electricity used to produce hydrogen
((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_electricityPriceMaxForProfit_eurpkWh = sl_batteryElectricityPriceLimit.getValue();

//Set text accordingly
t_electricityPriceLimit.setText( "€" + sl_batteryElectricityPriceLimit.getValue());

//Set scenario to custom
f_setScenario(2);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_sliderStartValue_priceLimit</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>0.5</MaxValue>
											<Step>0.01</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1715597606229</Id>
										<Name>t_electricityPriceLimit</Name>
										<X>40</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text> €0.00</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1715606688952</Id>
								<Name>gr_batteryPowerSlider</Name>
								<X>190</X>
								<Y>280</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1715597606231</Id>
										<Name>txt_powerBattery</Name>
										<X>-170</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Vermogen</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1715597606233</Id>
										<Name>sl_batteryPower</Name>
										<X>62</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//Adjust the electric capacity
c_gridBatteries.get(v_currentSelectedBattery).setCapacityElectric_kW(sl_batteryPower.getValue()*1000);// Multiplied by 1000, as the energy asset is in kW

//Adjust grid connection capacity as well (if needed)
if(sl_batteryPower.getValue()*1000 &gt; 2000){
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_liveConnectionMetaData.physicalCapacity_kW = sl_batteryPower.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_liveConnectionMetaData.contractedDeliveryCapacity_kW = sl_batteryPower.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_liveConnectionMetaData.contractedFeedinCapacity_kW = sl_batteryPower.getValue()*1000;
}

//Set the text accordingly
t_powerBattery.setText(sl_batteryPower.getValue() + " MW");


//Set scenario to custom
f_setScenario(2);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>10</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1715597606235</Id>
										<Name>t_powerBattery</Name>
										<X>35</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>1.0 MW</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1715606719124</Id>
								<Name>gr_batteryMode</Name>
								<X>100</X>
								<Y>380</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1715598832030</Id>
										<Name>rb_batteryMode</Name>
										<X>-80</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="150" Height="50">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>/*
switch (rb_batteryMode.getValue()){

	case 0:
		c_ownedGridConnections.get(0).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.PRICE;
		
		//Set visibility of price slider true and balance slider false
		gr_electricityPriceSlider.setVisible(true);
		gr_electricityBalanceSlider.setVisible(false);
	break;
	
	case 1:
		c_ownedGridConnections.get(0).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.BALANCE;
		
		//Set visibility of balance slider true and price slider false
		gr_electricityBalanceSlider.setVisible(true);
		gr_electricityPriceSlider.setVisible(false);
	break;
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>Prijs</Button>
											<Button>Balans</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1715598901188</Id>
										<Name>txt_electrolyserMode</Name>
										<X>-80</X>
										<Y>-40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Batterij modus</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1715606808711</Id>
								<Name>gr_electricityBalanceSliderBattery</Name>
								<X>190</X>
								<Y>490</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1715606808713</Id>
										<Name>txt_electricityBalanceLimit</Name>
										<X>-170</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Electriciteits balans limiet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1715606808715</Id>
										<Name>sl_batteryElectricityBalanceLimit</Name>
										<X>62</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//Adjust the gridnode congestion while charging
((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_gridNodeCongestionLimit_kW = sl_batteryElectricityBalanceLimit.getValue()*1000;

//Set text accordingly
t_electricityBalanceLimit.setText( sl_batteryElectricityBalanceLimit.getValue() + " MW" );

//Set scenario to custom
f_setScenario(2);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_sliderStartValue_balanceLimit</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>v_sliderMinValue_balanceLimit</MinValue>
											<MaxValue>v_sliderMaxValue_balanceLimit</MaxValue>
											<Step>0.01</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1715606808717</Id>
										<Name>t_electricityBalanceLimit</Name>
										<X>50</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0.0 MW</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1724859658263</Id>
								<Name>gr_scenarioRB</Name>
								<X>120</X>
								<Y>100</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1724859658265</Id>
										<Name>rb_scenariosPrivateUI</Name>
										<X>-100</X>
										<Y>-60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="180" Height="120">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>f_setScenario(rb_scenariosPrivateUI.getValue());</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="14" Style="0"/>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>Huidig - 2023</Button>
											<Button>Toekomstplannen</Button>
											<Button>Custom</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1724859658267</Id>
										<Name>text187</Name>
										<X>-100</X>
										<Y>-80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer een scenario</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>20</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1724947743345</Id>
								<Name>text</Name>
								<X>-320</X>
								<Y>540</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Current selected assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724947743347</Id>
								<Name>txt_batteryAssets</Name>
								<X>-320</X>
								<Y>270</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Battery assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724947743349</Id>
								<Name>txt_setSlidersToSelectedGC</Name>
								<X>-320</X>
								<Y>370</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Set Sliders to selected GC</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724947743351</Id>
								<Name>text7</Name>
								<X>-320</X>
								<Y>420</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Set Sliders to Scenario</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724947743353</Id>
								<Name>text5</Name>
								<X>-320</X>
								<Y>90</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1724948168075</Id>
								<Name>gr_batteryCapacitySlider</Name>
								<X>190</X>
								<Y>320</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1724948168077</Id>
										<Name>txt_powerBattery1</Name>
										<X>-170</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Opslagcapaciteit</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1724948168079</Id>
										<Name>sl_batteryCapacity</Name>
										<X>62</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//Adjust the electric capacity
c_gridBatteries.get(v_currentSelectedBattery).setStorageCapacity_kWh(sl_batteryCapacity.getValue()*1000);// Multiplied by 1000, as the energy asset is in kW

//Adjust grid connection capacity as well (if needed)
if(sl_batteryCapacity.getValue()*1000 &gt; 2000){
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_liveConnectionMetaData.physicalCapacity_kW = sl_batteryCapacity.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_liveConnectionMetaData.contractedDeliveryCapacity_kW = sl_batteryCapacity.getValue()*1000;
	((GCGridBattery)c_gridBatteries.get(v_currentSelectedBattery).getParentAgent()).v_liveConnectionMetaData.contractedFeedinCapacity_kW = sl_batteryCapacity.getValue()*1000;
}

//Set the text accordingly
t_capacityBattery.setText(sl_batteryCapacity.getValue() + " MWh");


//Set scenario to custom
f_setScenario(2);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>100</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1724948168081</Id>
										<Name>t_capacityBattery</Name>
										<X>35</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>1.0 MWh</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1725003063740</Id>
								<Name>txt_batteryControlRoom</Name>
								<X>760</X>
								<Y>80</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Batterij Controlroom</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>72</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1725002896440</Id>
						<Name>va_batteryUI</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title>Batter UI</Title>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1708522361862</Id>
				<Name>UI_company</Name>
				<AdditionalClassCode>&#xD;
//Getters for shapes&#xD;
public ShapeRadioButtonGroup getRb_scenariosPrivateUI() {&#xD;
	return this.rb_scenariosPrivateUI;&#xD;
}&#xD;
&#xD;
public ShapeRadioButtonGroup getRb_heatingTypePrivateUI() {&#xD;
	return this.rb_heatingTypePrivateUI;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSl_batteryCompany(){&#xD;
	return this.sl_batteryCompany;&#xD;
}&#xD;
&#xD;
public ShapeSlider getSl_electricityDemandCompanyReduction(){&#xD;
	return this.sl_electricityDemandCompanyReduction;&#xD;
}&#xD;
</AdditionalClassCode>
				<Import>//import kotlinx.serialization.internal.ArrayListClassDesc;
import org.eclipse.jdt.internal.compiler.ast.ForeachStatement;
</Import>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1708522361868</Id>
					<Name>1708522361868</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089974</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1708588800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1708522361865</Id>
					<Name>scale</Name>
					<X>10</X>
					<Y>-210</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1708522361869</CurrentLevel>
				<ConnectionsId>1708522361863</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1708611471928</Id>
						<Name>v_companyUIBackgroundColor</Name>
						<X>-430</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color( 204, 72, 118); </Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1709554407054</Id>
						<Name>v_companyUILineColor</Name>
						<X>-430</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>black</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713543883957</Id>
						<Name>v_currentSelectedGCnr</Name>
						<X>-430</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713957213075</Id>
						<Name>v_minPVSlider</Name>
						<X>-1060</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713957229701</Id>
						<Name>v_maxPVSlider</Name>
						<X>-1060</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>100</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713957233827</Id>
						<Name>v_defaultPVSlider</Name>
						<X>-1060</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713971707023</Id>
						<Name>v_minBatSlider</Name>
						<X>-1060</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713971707027</Id>
						<Name>v_maxBatSlider</Name>
						<X>-1060</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>1000</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1713971707029</Id>
						<Name>v_defaultBatSlider</Name>
						<X>-1060</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139274247</Id>
						<Name>v_nbEVCars</Name>
						<X>-1050</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139294087</Id>
						<Name>v_nbHydrogenCars</Name>
						<X>-1050</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139299844</Id>
						<Name>v_nbDieselCars</Name>
						<X>-1050</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139304156</Id>
						<Name>v_nbEVVans</Name>
						<X>-1050</X>
						<Y>910</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139320416</Id>
						<Name>v_nbEVTrucks</Name>
						<X>-1050</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139381294</Id>
						<Name>v_nbDieselVans</Name>
						<X>-1050</X>
						<Y>930</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139385293</Id>
						<Name>v_nbDieselTrucks</Name>
						<X>-1050</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139405729</Id>
						<Name>v_nbHydrogenVans</Name>
						<X>-1050</X>
						<Y>950</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139413565</Id>
						<Name>v_nbHydrogenTrucks</Name>
						<X>-1050</X>
						<Y>1150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139966993</Id>
						<Name>v_minEVCarSlider</Name>
						<X>-1050</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714139997786</Id>
						<Name>v_minHydrogenCarSlider</Name>
						<X>-1050</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714140003906</Id>
						<Name>v_maxEVCarSlider</Name>
						<X>-1050</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714140007855</Id>
						<Name>v_minDieselCarSlider</Name>
						<X>-1050</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714140012482</Id>
						<Name>v_maxHydrogenCarSlider</Name>
						<X>-1050</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714140056511</Id>
						<Name>v_maxDieselCarSlider</Name>
						<X>-1050</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714141906262</Id>
						<Name>v_minEVVanSlider</Name>
						<X>-1050</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714141906264</Id>
						<Name>v_minHydrogenVanSlider</Name>
						<X>-1050</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714141906266</Id>
						<Name>v_maxEVVanSlider</Name>
						<X>-1050</X>
						<Y>850</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714141906268</Id>
						<Name>v_minDieselVanSlider</Name>
						<X>-1050</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714141906270</Id>
						<Name>v_maxHydrogenVanSlider</Name>
						<X>-1050</X>
						<Y>890</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714141906272</Id>
						<Name>v_maxDieselVanSlider</Name>
						<X>-1050</X>
						<Y>870</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714142030261</Id>
						<Name>v_minEVTruckSlider</Name>
						<X>-1050</X>
						<Y>990</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714142030263</Id>
						<Name>v_minHydrogenTruckSlider</Name>
						<X>-1050</X>
						<Y>1030</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714142030265</Id>
						<Name>v_maxEVTruckSlider</Name>
						<X>-1050</X>
						<Y>1050</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714142030267</Id>
						<Name>v_minDieselTruckSlider</Name>
						<X>-1050</X>
						<Y>1010</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714142030269</Id>
						<Name>v_maxDieselTruckSlider</Name>
						<X>-1050</X>
						<Y>1070</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714142035660</Id>
						<Name>v_maxHydrogenTruckSlider</Name>
						<X>-1050</X>
						<Y>1090</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725364840518</Id>
						<Name>v_adressGC</Name>
						<X>-740</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725373825534</Id>
						<Name>v_chartBackgroundColor</Name>
						<X>-430</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>white</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725381531538</Id>
						<Name>v_companyUILineWidth</Name>
						<X>-430</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>2</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725381554846</Id>
						<Name>v_chartLineWidth</Name>
						<X>-430</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>2</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725382988283</Id>
						<Name>v_companyUIBackgroundColorSliders</Name>
						<X>-430</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>white</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725609978738</Id>
						<Name>v_loadScreenColor</Name>
						<X>-430</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>v_companyUIBackgroundColor</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725614630564</Id>
						<Name>v_minGCCapacitySlider</Name>
						<X>-1060</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725614630566</Id>
						<Name>v_maxGCCapacitySlider</Name>
						<X>-1060</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>100</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725614630568</Id>
						<Name>v_defaultGCCapacitySlider</Name>
						<X>-1060</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725625091022</Id>
						<Name>b_runningMainInterfaceScenarioSettings</Name>
						<X>-410</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727798399505</Id>
						<Name>v_minGCCapacitySlider_Feedin</Name>
						<X>-1060</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727798399507</Id>
						<Name>v_maxGCCapacitySlider_Feedin</Name>
						<X>-1060</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>100</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727798399509</Id>
						<Name>v_defaultGCCapacitySlider_Feedin</Name>
						<X>-1060</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727872520826</Id>
						<Name>v_physicalConnectionCapacity_kW</Name>
						<X>-1060</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727883544535</Id>
						<Name>v_NFATO_kW_delivery</Name>
						<X>-440</X>
						<Y>805</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727883574908</Id>
						<Name>v_NFATO_kW_feedin</Name>
						<X>-440</X>
						<Y>825</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727941212434</Id>
						<Name>v_NFATO_active</Name>
						<X>-440</X>
						<Y>785</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729686904963</Id>
						<Name>b_runningMainInterfaceSlider</Name>
						<X>-410</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1708522385741</Id>
						<Name>p_companyName</Name>
						<X>-740</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1708522385739</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1708522412931</Id>
						<Name>p_amountOfGC</Name>
						<X>-740</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1708522412929</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1708522430401</Id>
						<Name>p_amountOfBuildings</Name>
						<X>-740</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1708522430399</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1714641936747</Id>
						<Name>p_company</Name>
						<X>-740</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ConnectionOwner</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1714641936745</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1715181661645</Id>
						<Name>p_maxAddedVehicles</Name>
						<Description>Amount of vehicles that can additionally be added on the already existing ones</Description>
						<X>-1060</X>
						<Y>1170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>20</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1715181661643</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1709571634348</Id>
						<Name>c_ownedBuildings</Name>
						<X>-740</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1709571643590</Id>
						<Name>c_ownedGridConnections</Name>
						<X>-740</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1711722238158</Id>
						<Name>c_connectedTrafos</Name>
						<X>-740</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1713945394048</Id>
						<Name>c_scenarioSettings_Current</Name>
						<X>-740</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_scenario_Current</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1713947318059</Id>
						<Name>c_scenarioSettings_Future</Name>
						<X>-740</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_scenario_Future</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1727953980115</Id>
						<Name>c_additionalVehicles</Name>
						<X>-1060</X>
						<Y>1190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>List&lt;J_EAVehicle&gt;</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713445281785</Id>
						<Name>f_setScenarioFuture</Name>
						<X>-410</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>//Set button to custom early on, so traceln will get ignored.&#xD;
rb_scenariosPrivateUI.setValue(2, false);&#xD;
&#xD;
&#xD;
////Heating&#xD;
&#xD;
//Heating savings&#xD;
sl_heatDemandCompanyReduction.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHeatSavings(), true);&#xD;
&#xD;
//Heating type (aangenomen dat het hetzelfde blijft, want hebben geen vraag die dat stelt in het formulier)&#xD;
int nr_currentHeatingType = 0;&#xD;
switch (c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHeatingType()){&#xD;
	case GASBURNER:&#xD;
		nr_currentHeatingType = 0;&#xD;
		break;&#xD;
&#xD;
	case HYBRID_HEATPUMP:&#xD;
		nr_currentHeatingType = 1;&#xD;
		break;&#xD;
&#xD;
	case ELECTRIC_HEATPUMP:&#xD;
		nr_currentHeatingType = 2;&#xD;
		break;&#xD;
		&#xD;
	//case HYDROGENBURNER:&#xD;
	case DISTRICTHEAT:&#xD;
		nr_currentHeatingType = 3;&#xD;
		break;&#xD;
&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		nr_currentHeatingType = 4;&#xD;
		break;&#xD;
		&#xD;
	case OTHER:&#xD;
		//not supported&#xD;
		break;&#xD;
		&#xD;
	default:&#xD;
}&#xD;
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, true);		&#xD;
&#xD;
&#xD;
////Electricity&#xD;
&#xD;
//Electricity savings&#xD;
sl_electricityDemandCompanyReduction.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedElectricitySavings(), true);&#xD;
&#xD;
//Connection capacity (Delivery)&#xD;
sl_GCCapacityCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getRequestedContractDeliveryCapacity_kW(), true);&#xD;
&#xD;
//Connection capacity (Feedin)&#xD;
sl_GCCapacityCompany_Feedin.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getRequestedContractFeedinCapacity_kW(), true);&#xD;
&#xD;
//Connection capacity (Physical)&#xD;
v_physicalConnectionCapacity_kW = c_scenarioSettings_Future.get(v_currentSelectedGCnr).getRequestedPhysicalConnectionCapacity_kW();&#xD;
c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.physicalCapacity_kW = v_physicalConnectionCapacity_kW;&#xD;
&#xD;
//Solar panel power&#xD;
sl_rooftopPVCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedPV_kW(), true);&#xD;
&#xD;
//Battery capacity&#xD;
sl_batteryCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedBatteryCapacity_kWh(), true);&#xD;
&#xD;
//Curtailment setting&#xD;
cb_curtailmentCompany.setSelected(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedCurtailment(), true);&#xD;
&#xD;
////Mobility&#xD;
&#xD;
//Mobility savings&#xD;
sl_mobilityDemandCompanyReduction.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedTransportSavings(), true);&#xD;
&#xD;
//Cars (VOLGORDE BELANGRIJK)&#xD;
sl_hydrogenCarsCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHydrogenCars(), true);&#xD;
sl_electricCarsCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedEVCars(), true);&#xD;
//sl_dieselCarsCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedDieselCars(), true);&#xD;
&#xD;
//Vans (VOLGORDE BELANGRIJK)&#xD;
sl_hydrogenVansCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHydrogenVans(), true);&#xD;
sl_electricVansCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedEVVans(), true);&#xD;
//sl_dieselVansCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedDieselVans(), true);&#xD;
&#xD;
//Trucks (VOLGORDE BELANGRIJK)&#xD;
sl_hydrogenTrucksCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedHydrogenTrucks(), true);&#xD;
sl_electricTrucksCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedEVTrucks(), true);&#xD;
//sl_dieselTrucksCompany.setValue(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getPlannedDieselTrucks(), true);&#xD;
&#xD;
//set active if active in future&#xD;
c_ownedGridConnections.get(v_currentSelectedGCnr).f_setActive(c_scenarioSettings_Future.get(v_currentSelectedGCnr).getIsActiveInFuture());&#xD;
&#xD;
&#xD;
//Reset button to future, due to sliders putting it on custom&#xD;
rb_scenariosPrivateUI.setValue(1, false);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713447383903</Id>
						<Name>f_setScenario</Name>
						<X>-430</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>scenario_nr</Name>
							<Type>int</Type>
						</Parameter>
						<Body>int currentSelectedGCnr_local = v_currentSelectedGCnr; //Save current selected GCnr to go back there after scenarios are set for both&#xD;
&#xD;
switch (scenario_nr){&#xD;
&#xD;
	case 0: // Current&#xD;
		for (int i = c_ownedGridConnections.size(); i &gt; 0; i-- ){&#xD;
			GCnr_selection.setValue(i-1, true);&#xD;
			f_setScenarioCurrent(c_ownedGridConnections.get(v_currentSelectedGCnr));&#xD;
		}&#xD;
		GCnr_selection.setValue(currentSelectedGCnr_local, true);&#xD;
		&#xD;
		if(!b_runningMainInterfaceScenarioSettings){&#xD;
			traceln("Selected scenario: Current");&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case 1: // Future&#xD;
		for (int i = c_ownedGridConnections.size(); i &gt; 0; i-- ){&#xD;
			GCnr_selection.setValue(i-1, true);&#xD;
			f_setScenarioFuture(c_ownedGridConnections.get(v_currentSelectedGCnr));&#xD;
		}&#xD;
		GCnr_selection.setValue(currentSelectedGCnr_local, true);&#xD;
		&#xD;
		if(!b_runningMainInterfaceScenarioSettings){&#xD;
			traceln("Selected scenario: Future");&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case 2: // Custom&#xD;
&#xD;
		if(rb_scenariosPrivateUI.getValue() == 2){&#xD;
			return;&#xD;
		}&#xD;
		rb_scenariosPrivateUI.setValue(2, false);&#xD;
		&#xD;
		if(!b_runningMainInterfaceSlider){&#xD;
			traceln("Selected scenario: Custom");&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
&#xD;
}&#xD;
&#xD;
//Set 'results up to date' to false&#xD;
zero_Interface.b_resultsUpToDate = false;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713447428490</Id>
						<Name>f_setScenarioCurrent</Name>
						<X>-410</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>//Set button to custom early on, so traceln will get ignored.&#xD;
rb_scenariosPrivateUI.setValue(2, false);&#xD;
&#xD;
&#xD;
////Heating&#xD;
&#xD;
//Heating savings&#xD;
sl_heatDemandCompanyReduction.setValue(0, true);&#xD;
&#xD;
//Heating type&#xD;
int nr_currentHeatingType = 0;&#xD;
switch (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHeatingType()){&#xD;
	case GASBURNER:&#xD;
		nr_currentHeatingType = 0;&#xD;
		break;&#xD;
&#xD;
	case HYBRID_HEATPUMP:&#xD;
		nr_currentHeatingType = 1;&#xD;
		break;&#xD;
&#xD;
	case ELECTRIC_HEATPUMP:&#xD;
		nr_currentHeatingType = 2;&#xD;
		break;&#xD;
		&#xD;
	//case HYDROGENBURNER:&#xD;
	case DISTRICTHEAT:&#xD;
		nr_currentHeatingType = 3;&#xD;
		break;&#xD;
	&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		nr_currentHeatingType = 4;&#xD;
		break;&#xD;
		&#xD;
	case OTHER:&#xD;
		//not supported&#xD;
		break;&#xD;
		&#xD;
	default:&#xD;
}&#xD;
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, true);		&#xD;
&#xD;
&#xD;
////Electricity&#xD;
&#xD;
//Electricity savings&#xD;
sl_electricityDemandCompanyReduction.setValue(0, true);&#xD;
&#xD;
//Connection capacity (Delivery)&#xD;
sl_GCCapacityCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractDeliveryCapacity_kW(), true);&#xD;
&#xD;
//Connection capacity (Feedin)&#xD;
sl_GCCapacityCompany_Feedin.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractFeedinCapacity_kW(), true);&#xD;
&#xD;
//Connection capacity (Physical)&#xD;
v_physicalConnectionCapacity_kW = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentPhysicalConnectionCapacity_kW();&#xD;
c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.physicalCapacity_kW = v_physicalConnectionCapacity_kW;&#xD;
&#xD;
//Solar panel power&#xD;
sl_rooftopPVCompany.setValue(v_minPVSlider, true);&#xD;
&#xD;
//Battery capacity&#xD;
sl_batteryCompany.setValue(v_minBatSlider, true);&#xD;
&#xD;
//Curtailment setting&#xD;
cb_curtailmentCompany.setSelected(false, false);&#xD;
&#xD;
////Mobility&#xD;
&#xD;
//Mobility savings&#xD;
sl_mobilityDemandCompanyReduction.setValue(0, true);&#xD;
&#xD;
//Cars (VOLGORDE BELANGRIJK)&#xD;
sl_hydrogenCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenCars(), true);&#xD;
sl_electricCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCars(), true);&#xD;
//sl_dieselCarsCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselCars(), true);&#xD;
&#xD;
//Vans (VOLGORDE BELANGRIJK)&#xD;
sl_hydrogenVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenVans(), true);&#xD;
sl_electricVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVans(), true);&#xD;
//sl_dieselVansCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselVans(), true);&#xD;
&#xD;
//Trucks (VOLGORDE BELANGRIJK)&#xD;
sl_hydrogenTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenTrucks(), true);&#xD;
sl_electricTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTrucks(), true);&#xD;
//sl_dieselTrucksCompany.setValue(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselTrucks(), true);&#xD;
&#xD;
//set active if active in present&#xD;
c_ownedGridConnections.get(v_currentSelectedGCnr).f_setActive(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getIsCurrentlyActive());&#xD;
&#xD;
//Reset button to current, due to sliders putting it on custom&#xD;
rb_scenariosPrivateUI.setValue(0, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713537591106</Id>
						<Name>f_setHeatingType</Name>
						<X>-430</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>selectedHeatingType</Name>
							<Type>OL_GridConnectionHeatingType</Type>
						</Parameter>
						<Body>//Check if selected is not the same as previous, if not: continue with the setting of new heating type&#xD;
if (GC.p_heatingType == selectedHeatingType){&#xD;
	//traceln("Selected heating type is the same as previous heating type");&#xD;
	return;&#xD;
}&#xD;
&#xD;
//Remove from heat grid if it was connected to one.&#xD;
GC.p_parentNodeHeat = null;&#xD;
GC.p_parentNodeHeatID = null;&#xD;
&#xD;
//Remove primary heating asset&#xD;
J_EA primaryHeatingAsset = GC.p_primaryHeatingAsset;&#xD;
primaryHeatingAsset.removeEnergyAsset();&#xD;
&#xD;
&#xD;
// If secondary heating asset exists, remove that too&#xD;
if (GC.p_secondaryHeatingAsset != null){&#xD;
	J_EA secondaryHeatingAsset = GC.p_secondaryHeatingAsset;&#xD;
	secondaryHeatingAsset.removeEnergyAsset();&#xD;
	//main.energyModel.c_ambientAirDependentAssets.remove(secondaryHeatingAsset); // Wanneer is secondary heating type ooit ambient air dependent??&#xD;
}&#xD;
&#xD;
//Set GC heating type as newly selected heating type (NOTE: NEEDS TO HAPPEN HERE, NOT LATER, NOT SOONER)&#xD;
GC.p_heatingType = selectedHeatingType;&#xD;
&#xD;
//Get needed cacacity&#xD;
double capacityThermal_kW;&#xD;
&#xD;
//Select heat demand consumption asset &#xD;
J_EAConsumption heatDemandAsset = findFirst(GC.c_consumptionAssets, j_ea-&gt;j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);&#xD;
&#xD;
//Check heating demand asset is null (shouldnt be possible)&#xD;
if (heatDemandAsset != null){&#xD;
	capacityThermal_kW = heatDemandAsset.yearlyDemand_kWh/8760*10; // --&gt; average hourly consumption * 10 --&gt; to always have enough capacity&#xD;
}&#xD;
else{&#xD;
	//Select profile heat demand asset &#xD;
	J_EAProfile heatDemandAsset_Profile = findFirst(GC.c_profileAssets, j_ea-&gt;j_ea.energyCarrier == OL_EnergyCarriers.HEAT);&#xD;
	&#xD;
	if(heatDemandAsset_Profile != null){&#xD;
	capacityThermal_kW = max(heatDemandAsset_Profile.a_energyProfile_kWh)*4;&#xD;
	}&#xD;
	else{&#xD;
		traceln("No heating demand asset found for GC:" + GC.p_gridConnectionID);&#xD;
		traceln("--&gt; No heating asset created");&#xD;
		return;&#xD;
	}&#xD;
		&#xD;
}&#xD;
&#xD;
&#xD;
//Algemeen&#xD;
double timestep_h = zero_Interface.energyModel.p_timeStep_h;&#xD;
double efficiency;&#xD;
double outputTemperature_degC;&#xD;
&#xD;
//Heatpump specifieke parameters&#xD;
double baseTemperature_degC = zero_Interface.energyModel.v_currentAmbientTemperature_degC;&#xD;
double capacityElectric_kW;		&#xD;
OL_AmbientTempType ambientTempType;&#xD;
double sourceAssetHeatPower_kW;&#xD;
double belowZeroHeatpumpEtaReductionFactor;&#xD;
&#xD;
&#xD;
&#xD;
//Create selected heating type&#xD;
switch (selectedHeatingType){&#xD;
	case GASBURNER:&#xD;
		&#xD;
		//Add primary heating asset (gasburner)&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC;&#xD;
		&#xD;
		new J_EAConversionGasBurner(GC, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);&#xD;
		&#xD;
		break;&#xD;
	&#xD;
	case HYBRID_HEATPUMP:&#xD;
		&#xD;
		//Add primary heating asset (heatpump)&#xD;
		capacityElectric_kW = capacityThermal_kW / 3; //-- /3, want is hybride, dus kleiner&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHeatpump;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHeatpump_degC;&#xD;
		ambientTempType = OL_AmbientTempType.AMBIENT_AIR;&#xD;
		sourceAssetHeatPower_kW = 0;&#xD;
		belowZeroHeatpumpEtaReductionFactor = 1;&#xD;
		&#xD;
		J_EAConversionHeatPump heatPumpHybrid = new J_EAConversionHeatPump(GC, capacityElectric_kW, efficiency, timestep_h, outputTemperature_degC, baseTemperature_degC, sourceAssetHeatPower_kW, belowZeroHeatpumpEtaReductionFactor, ambientTempType );&#xD;
		zero_Interface.energyModel.c_ambientDependentAssets.add(heatPumpHybrid);&#xD;
		&#xD;
		//Add secondary heating asset (gasburner)&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC;&#xD;
		&#xD;
		J_EAConversionGasBurner gasBurnerHybrid = new J_EAConversionGasBurner(GC, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);&#xD;
		GC.p_secondaryHeatingAsset = gasBurnerHybrid;&#xD;
		&#xD;
		break;&#xD;
	&#xD;
	case ELECTRIC_HEATPUMP:&#xD;
&#xD;
		//Add primary heating asset (heatpump)&#xD;
		capacityElectric_kW = capacityThermal_kW;&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHeatpump;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHeatpump_degC;&#xD;
		ambientTempType = OL_AmbientTempType.AMBIENT_AIR;&#xD;
		sourceAssetHeatPower_kW = 0;&#xD;
		belowZeroHeatpumpEtaReductionFactor = 1;&#xD;
		&#xD;
		new J_EAConversionHeatPump(GC, capacityElectric_kW, efficiency, timestep_h, outputTemperature_degC, baseTemperature_degC, sourceAssetHeatPower_kW, belowZeroHeatpumpEtaReductionFactor, ambientTempType );	&#xD;
		&#xD;
		//Add secondary heating asset (if needed??)		//E-boiler!!??		&#xD;
		break;&#xD;
	&#xD;
	case HYDROGENBURNER:&#xD;
		&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHydrogenBurner;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHydrogenBurner_degC;&#xD;
	    &#xD;
		//Add primary heating asset (hydrogenburner)&#xD;
		new J_EAConversionHydrogenBurner(GC, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);&#xD;
		&#xD;
		break;&#xD;
	&#xD;
	case DISTRICTHEAT:&#xD;
&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyDistrictHeatingDeliverySet_fr;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureDistrictHeatingDeliverySet_degC;&#xD;
				&#xD;
		new J_EAConversionHeatDeliverySet(GC, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC);&#xD;
		&#xD;
		//Add GC to heat grid if it exists, else create new one&#xD;
		GC.p_parentNodeHeat = findFirst(zero_Interface.energyModel.f_getGridNodesTopLevel(), node -&gt; node.p_energyCarrier == OL_EnergyCarriers.HEAT);&#xD;
		if(GC.p_parentNodeHeat == null){&#xD;
			GridNode GN_heat = zero_Interface.energyModel.add_pop_gridNodes();&#xD;
			zero_Interface.energyModel.f_getGridNodesTopLevel().add(GN_heat);&#xD;
			GN_heat.p_gridNodeID = "Heatgrid";&#xD;
			&#xD;
			// Check wether transformer capacity is known or estimated&#xD;
			GN_heat.p_capacity_kW = 1000000;	&#xD;
			GN_heat.p_realCapacityAvailable = false;&#xD;
			&#xD;
			// Basic GN information&#xD;
			GN_heat.p_description = "Warmtenet";&#xD;
&#xD;
			//Define node type&#xD;
			GN_heat.p_nodeType = OL_GridNodeType.HT;&#xD;
			GN_heat.p_energyCarrier = OL_EnergyCarriers.HEAT;&#xD;
			&#xD;
			//Define GN location&#xD;
			GN_heat.p_latitude = 0;&#xD;
			GN_heat.p_longitude = 0;&#xD;
			GN_heat.setLatLon(GN_heat.p_latitude, GN_heat.p_longitude);&#xD;
			&#xD;
			//Connect&#xD;
			GC.p_parentNodeHeat = GN_heat;&#xD;
			&#xD;
			//Show warning that heat grid is not a simple solution&#xD;
			f_setErrorScreen("LET OP: Er is nu een 'warmtenet' gecreëerd. Maar er is geen warmtebron aanwezig in het model. Daarom zal de benodigde warmte voor het warmtenet in de resultaten te zien zijn als warmte import.");&#xD;
		}&#xD;
		GC.p_parentNodeHeatID = GC.p_parentNodeHeat.p_gridNodeID;&#xD;
		break;&#xD;
	&#xD;
	case GASFIRED_CHPPEAK:&#xD;
&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyCHP_thermal_fr + zero_Interface.energyModel.avgc_data.p_avgEfficiencyCHP_electric_fr;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureCHP_degC;&#xD;
		double outputCapacityElectric_kW = (capacityThermal_kW/zero_Interface.energyModel.avgc_data.p_avgEfficiencyCHP_thermal_fr) * zero_Interface.energyModel.avgc_data.p_avgEfficiencyCHP_electric_fr;&#xD;
		&#xD;
		new J_EAConversionGasCHP(GC, outputCapacityElectric_kW, capacityThermal_kW, efficiency, timestep_h, outputTemperature_degC );&#xD;
			&#xD;
		break;&#xD;
}&#xD;
&#xD;
if(!b_runningMainInterfaceSlider){&#xD;
	zero_Interface.f_updateMainInterfaceSliders();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713537591117</Id>
						<Name>f_setGCCapacity</Name>
						<X>-430</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>setGridConnectionCapacity_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>type</Name>
							<Type>String</Type>
						</Parameter>
						<Body>GC.f_nfatoSetConnectionCapacity(true);&#xD;
&#xD;
switch(type){&#xD;
	case "DELIVERY":&#xD;
		GC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = setGridConnectionCapacity_kW;&#xD;
		break;&#xD;
	case "FEEDIN":&#xD;
		GC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = setGridConnectionCapacity_kW;&#xD;
		break;&#xD;
	case "PHYSICAL":&#xD;
		GC.v_liveConnectionMetaData.physicalCapacity_kW = setGridConnectionCapacity_kW;&#xD;
		break;&#xD;
}&#xD;
&#xD;
GC.f_nfatoSetConnectionCapacity(false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713537591121</Id>
						<Name>f_setBattery</Name>
						<X>-430</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>setBatteryCapacity_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//If every detail company has battery EA (even if capacity = 0)&#xD;
J_EAStorage batteryAsset = findFirst(GC.c_storageAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC );&#xD;
&#xD;
if (batteryAsset == null &amp;&amp; setBatteryCapacity_kWh == 0) {&#xD;
	return;&#xD;
}&#xD;
else if (batteryAsset == null) {&#xD;
	GridConnection gc = p_company.f_getOwnedGridConnections().get(v_currentSelectedGCnr);&#xD;
	batteryAsset = new J_EAStorageElectric(gc, 0, 0, 0, zero_Interface.energyModel.p_timeStep_h);&#xD;
}&#xD;
double existing_batterypower_capacity_ratio = zero_Interface.energyModel.avgc_data.p_avgRatioBatteryCapacity_v_Power;&#xD;
&#xD;
if(((J_EAStorageElectric)batteryAsset).getCapacityElectric_kW() != 0){&#xD;
	existing_batterypower_capacity_ratio = ((J_EAStorageElectric)batteryAsset).getCapacityElectric_kW()/((J_EAStorageElectric)batteryAsset).getStorageCapacity_kWh();	&#xD;
}&#xD;
&#xD;
((J_EAStorageElectric)batteryAsset).setCapacityElectric_kW(setBatteryCapacity_kWh*existing_batterypower_capacity_ratio); //Set Power&#xD;
((J_EAStorageElectric)batteryAsset).setStorageCapacity_kWh(setBatteryCapacity_kWh);										 //Set storage capacity&#xD;
&#xD;
//Add battery algorithm if it is not present&#xD;
if(GC.p_batteryAlgorithm == null){&#xD;
	GC.p_batteryAlgorithm = new J_BatteryManagementSelfConsumption(GC);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713954180112</Id>
						<Name>f_setPVSystem</Name>
						<X>-430</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>v_rooftopPV_kWp</Name>
							<Type>double</Type>
						</Parameter>
						<Body>if (GC.v_liveAssetsMetaData.hasPV){&#xD;
	J_EAProduction pvAsset = findFirst(GC.c_productionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );&#xD;
	if (v_rooftopPV_kWp == 0) {&#xD;
		pvAsset.removeEnergyAsset();;&#xD;
	}&#xD;
	else {&#xD;
		pvAsset.setCapacityElectric_kW(v_rooftopPV_kWp);&#xD;
	}&#xD;
}&#xD;
else{&#xD;
	if (v_rooftopPV_kWp != 0) {&#xD;
		f_addPVAsset(GC, OL_EnergyAssetType.PHOTOVOLTAIC, v_rooftopPV_kWp);&#xD;
	}&#xD;
}&#xD;
&#xD;
if(!b_runningMainInterfaceSlider){&#xD;
	zero_Interface.f_updateMainInterfaceSliders();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713956765904</Id>
						<Name>f_setSliderPresets</Name>
						<Description>Set Slider presets (limits, start value, text) for private company sliders</Description>
						<X>-1090</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Heating radio button&#xD;
f_setHeatingRB();&#xD;
&#xD;
//Set grid capacity slider (delivery)&#xD;
f_setGCCapacitySliderPresets();&#xD;
&#xD;
//Set connection capacity slider (feedin)&#xD;
f_setGCCapacitySliderPresets_Feedin();&#xD;
&#xD;
//PV slider&#xD;
f_setPVSliderPresets();&#xD;
&#xD;
//Battery slider&#xD;
f_setBatSliderPresets();&#xD;
&#xD;
//Vehicles sliders&#xD;
f_setVehicleSliderPresets();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713961813474</Id>
						<Name>f_setComboBoxGC</Name>
						<X>-1070</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(c_ownedGridConnections.size() &lt;= 1){&#xD;
	gr_selectedGC.setVisible(false);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714139629738</Id>
						<Name>f_setPVSliderPresets</Name>
						<X>-1070</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_rooftopPVCompany.setRange(0, 2000000);&#xD;
&#xD;
//Set range specific for each company&#xD;
v_minPVSlider = roundToInt(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentPV_kW());&#xD;
v_maxPVSlider = roundToInt(zero_Interface.energyModel.avgc_data.p_avgRatioRoofPotentialPV* c_ownedGridConnections.get(v_currentSelectedGCnr).p_roofSurfaceArea_m2*zero_Interface.energyModel.avgc_data.p_avgPVPower_kWpm2);&#xD;
if(v_maxPVSlider &lt;= v_minPVSlider){&#xD;
	v_maxPVSlider = v_minPVSlider + 1000;&#xD;
}&#xD;
v_defaultPVSlider = v_minPVSlider;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714139648227</Id>
						<Name>f_setBatSliderPresets</Name>
						<X>-1070</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_batteryCompany.setRange(0, 10000);&#xD;
&#xD;
double upperLimit = 1000 + 1000 * Math.ceil(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentPV_kW()/1000.0);&#xD;
v_minBatSlider = roundToInt(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentBatteryCapacity_kWh());&#xD;
v_maxBatSlider = Math.max(v_minBatSlider*2, upperLimit);&#xD;
v_defaultBatSlider = v_minBatSlider;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714139684603</Id>
						<Name>f_setVehicleSliderPresets</Name>
						<X>-1070</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Cars&#xD;
f_setCarSliderPresets();&#xD;
&#xD;
//Vans&#xD;
f_setVanSliderPresets();&#xD;
&#xD;
//Trucks&#xD;
f_setTruckSliderPresets();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714140108358</Id>
						<Name>f_setCarSliderPresets</Name>
						<X>-1060</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_electricCarsCompany.setRange(0, 500);&#xD;
sl_dieselCarsCompany.setRange(0, 500);&#xD;
sl_hydrogenCarsCompany.setRange(0, 500);&#xD;
&#xD;
&#xD;
//Get default values&#xD;
int default_nbEVCars = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCars();&#xD;
int default_nbDieselCars = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselCars();&#xD;
int default_nbHydrogenCars = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenCars();&#xD;
&#xD;
//Set minimum value&#xD;
v_minEVCarSlider = default_nbEVCars;&#xD;
v_minDieselCarSlider = 0;&#xD;
v_minHydrogenCarSlider = 0;&#xD;
&#xD;
//Determine realistic max additional vehicles&#xD;
int max_additonal_vehicles = p_maxAddedVehicles; //min((default_nbEVCars + default_nbDieselCars + default_nbHydrogenCars)*1, 20);&#xD;
&#xD;
//Set maximum&#xD;
v_maxEVCarSlider = default_nbEVCars + default_nbDieselCars + default_nbHydrogenCars + max_additonal_vehicles; // loading of EV is included in the quarter electricity data --&gt; Cant filter --&gt; cant get less EV than atm.&#xD;
v_maxDieselCarSlider = default_nbDieselCars + default_nbHydrogenCars + max_additonal_vehicles;&#xD;
v_maxHydrogenCarSlider = default_nbDieselCars + default_nbHydrogenCars + max_additonal_vehicles;&#xD;
&#xD;
//Set default values&#xD;
v_nbEVCars = default_nbEVCars;&#xD;
v_nbDieselCars = default_nbDieselCars;&#xD;
v_nbHydrogenCars = default_nbHydrogenCars;&#xD;
&#xD;
//Set slider knobs&#xD;
sl_electricCarsCompany.setValue(v_nbEVCars, false);&#xD;
sl_dieselCarsCompany.setValue(v_nbDieselCars, false);&#xD;
sl_hydrogenCarsCompany.setValue(v_nbHydrogenCars, false);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714140134819</Id>
						<Name>f_setVanSliderPresets</Name>
						<X>-1060</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_electricVansCompany.setRange(0, 500);&#xD;
sl_dieselVansCompany.setRange(0, 500);&#xD;
sl_hydrogenVansCompany.setRange(0, 500);&#xD;
&#xD;
//Get default values&#xD;
int default_nbEVVans = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVans();&#xD;
int default_nbDieselVans = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselVans();&#xD;
int default_nbHydrogenVans = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenVans();&#xD;
&#xD;
//Set minimum value&#xD;
v_minEVVanSlider = default_nbEVVans;&#xD;
v_minDieselVanSlider = 0;&#xD;
v_minHydrogenVanSlider = 0;&#xD;
&#xD;
//Determine realistic max additional vehicles&#xD;
int max_additonal_vehicles = p_maxAddedVehicles; //min((default_nbEVVans + default_nbDieselVans + default_nbHydrogenVans)*2, 20);&#xD;
&#xD;
//Set maximum&#xD;
v_maxEVVanSlider = default_nbEVVans + default_nbDieselVans + default_nbHydrogenVans + max_additonal_vehicles; // loading of EV is included in the quarter electricity data --&gt; Cant filter --&gt; cant get less EV than atm.&#xD;
v_maxDieselVanSlider = default_nbDieselVans + default_nbHydrogenVans + max_additonal_vehicles;&#xD;
v_maxHydrogenVanSlider = default_nbDieselVans + default_nbHydrogenVans + max_additonal_vehicles;&#xD;
&#xD;
//Set default values&#xD;
v_nbEVVans = default_nbEVVans;&#xD;
v_nbDieselVans = default_nbDieselVans;&#xD;
v_nbHydrogenVans = default_nbHydrogenVans;&#xD;
&#xD;
//Set slider knob&#xD;
sl_electricVansCompany.setValue(v_nbEVVans, false);&#xD;
sl_dieselVansCompany.setValue(v_nbDieselVans, false);&#xD;
sl_hydrogenVansCompany.setValue(v_nbHydrogenVans, false);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714140156233</Id>
						<Name>f_setTruckSliderPresets</Name>
						<X>-1060</X>
						<Y>970</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_electricTrucksCompany.setRange(0, 500);&#xD;
sl_dieselTrucksCompany.setRange(0, 500);&#xD;
sl_hydrogenTrucksCompany.setRange(0, 500);&#xD;
&#xD;
//Get default values&#xD;
int default_nbEVTrucks = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTrucks();&#xD;
int default_nbDieselTrucks = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentDieselTrucks();&#xD;
int default_nbHydrogenTrucks = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHydrogenTrucks();&#xD;
&#xD;
//Set minimum value&#xD;
v_minEVTruckSlider = default_nbEVTrucks;&#xD;
v_minDieselTruckSlider = 0;&#xD;
v_minHydrogenTruckSlider = 0;&#xD;
&#xD;
//Determine realistic max additional vehicles&#xD;
int max_additonal_vehicles = p_maxAddedVehicles; //min((default_nbEVTrucks + default_nbDieselTrucks + default_nbHydrogenTrucks)*2, 20);&#xD;
&#xD;
//Set maximum&#xD;
v_maxEVTruckSlider = default_nbEVTrucks + default_nbDieselTrucks + default_nbHydrogenTrucks + max_additonal_vehicles; // loading of EV is included in the quarter electricity data --&gt; Cant filter --&gt; cant get less EV than atm.&#xD;
v_maxDieselTruckSlider = default_nbDieselTrucks + default_nbHydrogenTrucks + max_additonal_vehicles;&#xD;
v_maxHydrogenTruckSlider = default_nbDieselTrucks + default_nbHydrogenTrucks + max_additonal_vehicles;&#xD;
&#xD;
//Set default values&#xD;
v_nbEVTrucks = default_nbEVTrucks;&#xD;
v_nbDieselTrucks = default_nbDieselTrucks;&#xD;
v_nbHydrogenTrucks = default_nbHydrogenTrucks;&#xD;
&#xD;
//Set slider knob&#xD;
sl_electricTrucksCompany.setValue(v_nbEVTrucks, false);&#xD;
sl_dieselTrucksCompany.setValue(v_nbDieselTrucks, false);&#xD;
sl_hydrogenTrucksCompany.setValue(v_nbHydrogenTrucks, false);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714410040303</Id>
						<Name>f_createVehicle</Name>
						<X>-410</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicleType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>tripTracker</Name>
							<Type>J_ActivityTrackerTrips</Type>
						</Parameter>
						<Parameter>
							<Name>available</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>isAdditionalVehicle</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>double energyConsumption_kWhpkm = 0;&#xD;
double vehicleScaling 			= 1.0;&#xD;
double timestep_h				= zero_Interface.energyModel.p_timeStep_h;&#xD;
&#xD;
if (vehicleType == OL_EnergyAssetType.ELECTRIC_VEHICLE || vehicleType == OL_EnergyAssetType.ELECTRIC_VAN || vehicleType == OL_EnergyAssetType.ELECTRIC_TRUCK ){ // Create EVS&#xD;
	double storageCapacity_kWh 		= 0;&#xD;
	double capacityElectricity_kW 	= 0;&#xD;
	double stateOfCharge_fr  		= 1; // Initial state of charge&#xD;
&#xD;
	switch(vehicleType){&#xD;
		case ELECTRIC_VEHICLE:&#xD;
			capacityElectricity_kW	= (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCarChargePower_kW() != 0) ? c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVCarChargePower_kW() : zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerCar_kW;&#xD;
			storageCapacity_kWh		= zero_Interface.energyModel.avgc_data.p_avgEVStorageCar_kWh;&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;&#xD;
		break;&#xD;
		case ELECTRIC_VAN:&#xD;
			capacityElectricity_kW	= (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVanChargePower_kW() != 0) ? c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVVanChargePower_kW() : zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerVan_kW;&#xD;
			storageCapacity_kWh		= zero_Interface.energyModel.avgc_data.p_avgEVStorageVan_kWh;&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionVan_kWhpkm;&#xD;
		break;&#xD;
		case ELECTRIC_TRUCK:&#xD;
			capacityElectricity_kW	= (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTruckChargePower_kW() != 0) ? c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentEVTruckChargePower_kW() : zero_Interface.energyModel.avgc_data.p_avgEVMaxChargePowerTruck_kW;&#xD;
			storageCapacity_kWh		= zero_Interface.energyModel.avgc_data.p_avgEVStorageTruck_kWh;&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;&#xD;
		break;&#xD;
	&#xD;
	}&#xD;
	&#xD;
	//Create EV and connect to GC and selected trip tracker&#xD;
	J_EAEV electricVehicle = new J_EAEV(parentGC, capacityElectricity_kW, storageCapacity_kWh, stateOfCharge_fr, timestep_h, energyConsumption_kWhpkm, vehicleScaling, vehicleType, tripTracker);	&#xD;
	electricVehicle.available = available;&#xD;
&#xD;
	&#xD;
	&#xD;
	if (isAdditionalVehicle){&#xD;
		c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).add(electricVehicle);&#xD;
	}&#xD;
	else{&#xD;
		zero_Interface.c_orderedVehicles.add(0, electricVehicle);&#xD;
	}&#xD;
}&#xD;
&#xD;
else if (vehicleType == OL_EnergyAssetType.DIESEL_VEHICLE || vehicleType == OL_EnergyAssetType.DIESEL_VAN || vehicleType == OL_EnergyAssetType.DIESEL_TRUCK ){ // Create diesel vehicles&#xD;
	switch (vehicleType){&#xD;
		&#xD;
		case DIESEL_VEHICLE:&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionCar_kWhpkm;&#xD;
		break;&#xD;
		&#xD;
		case DIESEL_VAN:&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionVan_kWhpkm;&#xD;
		break;&#xD;
		&#xD;
		case DIESEL_TRUCK:&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgDieselConsumptionTruck_kWhpkm;&#xD;
		break;&#xD;
	}&#xD;
	&#xD;
	//Create Diesel vehicle and connect to GC and selected trip tracker&#xD;
	J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(parentGC, energyConsumption_kWhpkm, timestep_h, vehicleScaling, vehicleType, tripTracker);&#xD;
	dieselVehicle.available = available;&#xD;
	&#xD;
	&#xD;
	&#xD;
	if (isAdditionalVehicle){&#xD;
		c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).add(dieselVehicle);&#xD;
	}&#xD;
	else{&#xD;
		zero_Interface.c_orderedVehicles.add(0, dieselVehicle);&#xD;
	}&#xD;
}&#xD;
&#xD;
else{ // (Hydrogen vehicles)&#xD;
	switch (vehicleType){&#xD;
		case HYDROGEN_VEHICLE:&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionCar_kWhpkm;&#xD;
		break;&#xD;
		case HYDROGEN_VAN:&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionVan_kWhpkm;&#xD;
		break;&#xD;
		case HYDROGEN_TRUCK:&#xD;
			energyConsumption_kWhpkm = zero_Interface.energyModel.avgc_data.p_avgHydrogenConsumptionTruck_kWhpkm;&#xD;
		break;&#xD;
		&#xD;
	}&#xD;
	&#xD;
	//Create Hydrogen vehicle and connect to GC and selected trip tracker&#xD;
	J_EAHydrogenVehicle hydrogenVehicle = new J_EAHydrogenVehicle(parentGC, energyConsumption_kWhpkm, timestep_h, vehicleScaling, vehicleType, tripTracker);&#xD;
	hydrogenVehicle.available = available;&#xD;
	&#xD;
	&#xD;
	&#xD;
	if (isAdditionalVehicle){&#xD;
		c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).add(hydrogenVehicle);&#xD;
	}&#xD;
	else{&#xD;
		zero_Interface.c_orderedVehicles.add(0, hydrogenVehicle);&#xD;
	}&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>int</ReturnType>
						<Id>1714411599586</Id>
						<Name>f_setElectricVehicleSliders</Name>
						<X>-430</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicleType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>setAmountOfVehicles</Name>
							<Type>int</Type>
						</Parameter>
						<Body>int local_EV_nb;&#xD;
int local_DieselV_nb;&#xD;
int local_HydrogenV_nb;&#xD;
int max_amount_diesel_vehicles;&#xD;
&#xD;
OL_EnergyAssetType vehicleType_diesel;&#xD;
OL_EnergyAssetType vehicleType_hydrogen;&#xD;
&#xD;
switch (vehicleType){&#xD;
	&#xD;
	case ELECTRIC_VEHICLE:&#xD;
&#xD;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VEHICLE;&#xD;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VEHICLE;&#xD;
&#xD;
	local_EV_nb = v_nbEVCars;&#xD;
	local_DieselV_nb = v_nbDieselCars;&#xD;
	local_HydrogenV_nb = v_nbHydrogenCars;&#xD;
	&#xD;
	max_amount_diesel_vehicles = v_maxDieselCarSlider;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case ELECTRIC_VAN:&#xD;
	&#xD;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VAN;&#xD;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VAN;&#xD;
	&#xD;
	local_EV_nb = v_nbEVVans;&#xD;
	local_DieselV_nb = v_nbDieselVans;&#xD;
	local_HydrogenV_nb = v_nbHydrogenVans;&#xD;
	&#xD;
	max_amount_diesel_vehicles = v_maxDieselVanSlider;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case ELECTRIC_TRUCK:&#xD;
&#xD;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_TRUCK;&#xD;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_TRUCK;&#xD;
	&#xD;
	local_EV_nb = v_nbEVTrucks;&#xD;
	local_DieselV_nb = v_nbDieselTrucks;&#xD;
	local_HydrogenV_nb = v_nbHydrogenTrucks;&#xD;
	&#xD;
	max_amount_diesel_vehicles = v_maxDieselTruckSlider;&#xD;
		&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
	traceln("SLIDER SET TO WRONG VEHICLE TYPE, DO NOTHING");&#xD;
	return;&#xD;
}&#xD;
&#xD;
&#xD;
if (setAmountOfVehicles &gt; local_EV_nb){ // Slider has increased the amount of selected vehicles&#xD;
	&#xD;
	//First convert all other existing additional vehicles&#xD;
	int nbOfOtherAdditionalVehiclesOfThisClass = findAll(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_diesel || p.energyAssetType == vehicleType_hydrogen).size();&#xD;
	while(setAmountOfVehicles &gt; local_EV_nb &amp;&amp; nbOfOtherAdditionalVehiclesOfThisClass &gt; 0 ){&#xD;
		&#xD;
		// Find an additional Diesel vehicle&#xD;
		J_EAVehicle dieselVehicle = findFirst(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_diesel);&#xD;
		&#xD;
		if(dieselVehicle != null){&#xD;
			J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;&#xD;
			&#xD;
			// Remove Diesel vehicle		&#xD;
			boolean available = dieselVehicle.getAvailability();&#xD;
			dieselVehicle.removeEnergyAsset();&#xD;
			c_additionalVehicles.get(GC).remove(dieselVehicle);&#xD;
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);&#xD;
			&#xD;
			//Create new additional EV&#xD;
			f_createVehicle(GC, vehicleType, tripTracker, available, true);			&#xD;
&#xD;
			//Update local variables&#xD;
			local_EV_nb++;&#xD;
			local_DieselV_nb--;&#xD;
			nbOfOtherAdditionalVehiclesOfThisClass--;&#xD;
		}&#xD;
		else{&#xD;
			// Find an additional Hydrogen vehicle&#xD;
			J_EAVehicle hydrogenVehicle = findFirst(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_hydrogen);&#xD;
			J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;&#xD;
			&#xD;
			// Remove Hydrogen vehicle		&#xD;
			boolean available = hydrogenVehicle.getAvailability();&#xD;
			hydrogenVehicle.removeEnergyAsset();&#xD;
			c_additionalVehicles.get(GC).remove(hydrogenVehicle);&#xD;
			zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);&#xD;
			&#xD;
			//Create new additional EV&#xD;
			f_createVehicle(GC, vehicleType, tripTracker, available, true);&#xD;
&#xD;
			//Update local variables&#xD;
			local_EV_nb++;&#xD;
			local_HydrogenV_nb--;&#xD;
			nbOfOtherAdditionalVehiclesOfThisClass--;&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	while ( setAmountOfVehicles &gt; local_EV_nb &amp;&amp; local_DieselV_nb &gt; 0) {&#xD;
		&#xD;
		// Find a Diesel vehicle&#xD;
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType_diesel &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker; &#xD;
		&#xD;
		// Remove Diesel vehicle		&#xD;
		boolean available = dieselVehicle.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(dieselVehicle);&#xD;
		dieselVehicle.removeEnergyAsset();&#xD;
&#xD;
		//Create new EV&#xD;
		f_createVehicle(GC, vehicleType, tripTracker, available, false);&#xD;
			&#xD;
		//Update variables&#xD;
		local_EV_nb++;&#xD;
		local_DieselV_nb--;&#xD;
	}&#xD;
	while (setAmountOfVehicles &gt; local_EV_nb &amp;&amp; local_HydrogenV_nb &gt; 0){&#xD;
	&#xD;
		// Find a Hydrogen vehicle&#xD;
		J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType_hydrogen  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;&#xD;
		&#xD;
		// Remove Hydrogen vehicle		&#xD;
		boolean available = hydrogenVehicle.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);&#xD;
		hydrogenVehicle.removeEnergyAsset();&#xD;
&#xD;
		//Create new EV&#xD;
		f_createVehicle(GC, vehicleType, tripTracker, available, false);&#xD;
	&#xD;
		//Update variables&#xD;
		local_EV_nb++;&#xD;
		local_HydrogenV_nb--;&#xD;
	}&#xD;
	while (setAmountOfVehicles &gt; local_EV_nb){ //If still not enough EV:&#xD;
		&#xD;
		// Create additional vehicles&#xD;
		f_createVehicle(GC, vehicleType, null, true, true);&#xD;
		&#xD;
		//Update variables&#xD;
		local_EV_nb++;&#xD;
	}&#xD;
	&#xD;
}&#xD;
else if(setAmountOfVehicles &lt; local_EV_nb){ // Slider has decreased the amount of selected vehicles&#xD;
	&#xD;
	ArrayList&lt;J_EAVehicle&gt; additionalVehicles = new ArrayList&lt;J_EAVehicle&gt;(findAll(c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)), vehicle -&gt; vehicle.energyAssetType == vehicleType ));&#xD;
	while(setAmountOfVehicles &lt; local_EV_nb &amp;&amp; additionalVehicles.size() &gt; 0){ //If there are additional EV, remove them first&#xD;
&#xD;
		//Find additional created vehicle&#xD;
		J_EAEV ev = (J_EAEV)additionalVehicles.get(additionalVehicles.size()-1); // Get latest added&#xD;
		&#xD;
		// Remove electric vehicle&#xD;
		additionalVehicles.remove(ev);&#xD;
		c_additionalVehicles.get(GC).remove(ev);&#xD;
		zero_Interface.c_orderedVehicles.remove(ev);&#xD;
		ev.removeEnergyAsset();&#xD;
			&#xD;
		//Update variable&#xD;
		local_EV_nb--;&#xD;
	}&#xD;
	while ( setAmountOfVehicles &lt; local_EV_nb &amp;&amp; local_DieselV_nb &lt; max_amount_diesel_vehicles) {&#xD;
&#xD;
		//Find a to be removed EV&#xD;
		J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType &amp;&amp; !c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).contains(p)  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = ev.tripTracker;&#xD;
&#xD;
		//Remove EV&#xD;
		boolean available = ev.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(ev);&#xD;
		ev.removeEnergyAsset();&#xD;
		&#xD;
		// Create diesel vehicle	&#xD;
		f_createVehicle(GC, vehicleType_diesel, tripTracker, available, false);				&#xD;
		&#xD;
		local_EV_nb--;&#xD;
		local_DieselV_nb++;&#xD;
		}&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
//Update variables&#xD;
switch (vehicleType){&#xD;
	&#xD;
	case ELECTRIC_VEHICLE:&#xD;
	&#xD;
	v_nbEVCars = local_EV_nb;&#xD;
	v_nbDieselCars = local_DieselV_nb;&#xD;
	v_nbHydrogenCars = local_HydrogenV_nb;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case ELECTRIC_VAN:&#xD;
	&#xD;
	v_nbEVVans = local_EV_nb;&#xD;
	v_nbDieselVans = local_DieselV_nb;&#xD;
	v_nbHydrogenVans = local_HydrogenV_nb;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case ELECTRIC_TRUCK:&#xD;
	&#xD;
	v_nbEVTrucks = local_EV_nb;&#xD;
	v_nbDieselTrucks = local_DieselV_nb;&#xD;
	v_nbHydrogenTrucks = local_HydrogenV_nb;&#xD;
		&#xD;
	break;&#xD;
}&#xD;
&#xD;
if(!b_runningMainInterfaceSlider){&#xD;
	zero_Interface.f_updateMainInterfaceSliders();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>int</ReturnType>
						<Id>1714471183392</Id>
						<Name>f_setDieselVehicleSliders</Name>
						<X>-430</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicleType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>setAmountOfVehicles</Name>
							<Type>int</Type>
						</Parameter>
						<Body>int local_EV_nb;&#xD;
int local_DieselV_nb;&#xD;
int local_HydrogenV_nb;&#xD;
&#xD;
int min_amount_EV;&#xD;
int	max_amount_EV;&#xD;
&#xD;
OL_EnergyAssetType vehicleType_electric;&#xD;
OL_EnergyAssetType vehicleType_hydrogen;&#xD;
	&#xD;
switch (vehicleType){&#xD;
	&#xD;
	case DIESEL_VEHICLE:&#xD;
&#xD;
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VEHICLE;&#xD;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VEHICLE;&#xD;
&#xD;
	local_EV_nb = v_nbEVCars;&#xD;
	local_DieselV_nb = v_nbDieselCars;&#xD;
	local_HydrogenV_nb = v_nbHydrogenCars;&#xD;
	&#xD;
	min_amount_EV = v_minEVCarSlider;&#xD;
	max_amount_EV = v_maxEVCarSlider;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case DIESEL_VAN:&#xD;
	&#xD;
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VAN;&#xD;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_VAN;&#xD;
	&#xD;
	local_EV_nb = v_nbEVVans;&#xD;
	local_DieselV_nb = v_nbDieselVans;&#xD;
	local_HydrogenV_nb = v_nbHydrogenVans;&#xD;
	&#xD;
	min_amount_EV = v_minEVVanSlider;&#xD;
	max_amount_EV = v_maxEVVanSlider;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case DIESEL_TRUCK:&#xD;
&#xD;
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_TRUCK;&#xD;
	vehicleType_hydrogen = OL_EnergyAssetType.HYDROGEN_TRUCK;&#xD;
	&#xD;
	local_EV_nb = v_nbEVTrucks;&#xD;
	local_DieselV_nb = v_nbDieselTrucks;&#xD;
	local_HydrogenV_nb = v_nbHydrogenTrucks;&#xD;
	&#xD;
	min_amount_EV = v_minEVTruckSlider;&#xD;
	max_amount_EV = v_maxEVTruckSlider;&#xD;
		&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
	traceln("SLIDER SET TO WRONG VEHICLE TYPE, DO NOTHING");&#xD;
	return;&#xD;
}&#xD;
&#xD;
&#xD;
if (setAmountOfVehicles &gt; local_DieselV_nb){ // Slider has increased the amount of selected vehicles&#xD;
	//First convert all other existing additional vehicles&#xD;
	int nbOfOtherAdditionalVehiclesOfThisClass = findAll(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_hydrogen || p.energyAssetType == vehicleType_electric).size();&#xD;
	while(setAmountOfVehicles &gt; local_DieselV_nb &amp;&amp; nbOfOtherAdditionalVehiclesOfThisClass &gt; 0 ){&#xD;
&#xD;
		// Find an additional EV vehicle&#xD;
		J_EAVehicle ev = findFirst(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_electric);&#xD;
			&#xD;
		if(ev != null){&#xD;
			J_ActivityTrackerTrips tripTracker = ev.tripTracker;&#xD;
		&#xD;
			// Remove EV&#xD;
			boolean available = ev.getAvailability();&#xD;
			ev.removeEnergyAsset();&#xD;
			c_additionalVehicles.get(GC).remove(ev);&#xD;
			zero_Interface.c_orderedVehicles.remove(ev);&#xD;
			&#xD;
			//Create new additional Diesel vehicle&#xD;
			f_createVehicle(GC, vehicleType, tripTracker, available, true);&#xD;
&#xD;
			//Update local variables&#xD;
			local_DieselV_nb++;&#xD;
			local_EV_nb--;&#xD;
			nbOfOtherAdditionalVehiclesOfThisClass--;&#xD;
		}&#xD;
		else{&#xD;
			// Find an additional Hydrogen vehicle&#xD;
			J_EAVehicle hydrogenVehicle = findFirst(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_hydrogen);&#xD;
			J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;&#xD;
			&#xD;
			// Remove Hydrogen vehicle		&#xD;
			boolean available = hydrogenVehicle.getAvailability();&#xD;
			hydrogenVehicle.removeEnergyAsset();&#xD;
			c_additionalVehicles.get(GC).remove(hydrogenVehicle);&#xD;
			zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);&#xD;
			&#xD;
			//Create new additional Diesel vehicle&#xD;
			f_createVehicle(GC, vehicleType, tripTracker, available, true);&#xD;
&#xD;
			//Update local variables&#xD;
			local_DieselV_nb++;&#xD;
			local_HydrogenV_nb--;&#xD;
			nbOfOtherAdditionalVehiclesOfThisClass--;&#xD;
		}&#xD;
	}&#xD;
	while ( setAmountOfVehicles &gt; local_DieselV_nb &amp;&amp; local_EV_nb &gt; min_amount_EV) {&#xD;
&#xD;
		// Find an EV&#xD;
		J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType_electric  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = ev.tripTracker;&#xD;
		&#xD;
		//Remove one EV&#xD;
		boolean available = ev.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(ev);&#xD;
		ev.removeEnergyAsset();&#xD;
		&#xD;
		//Create new Diesel vehicle&#xD;
		f_createVehicle(GC, vehicleType, tripTracker, available, false);&#xD;
			&#xD;
		//Update variables&#xD;
		local_DieselV_nb++;&#xD;
		local_EV_nb--;&#xD;
	}&#xD;
	while (setAmountOfVehicles &gt; local_DieselV_nb &amp;&amp; local_HydrogenV_nb &gt; 0){&#xD;
	&#xD;
		// Find a Hydrogen vehicle&#xD;
		J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType_hydrogen  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;&#xD;
		&#xD;
		// Remove hydrogen vehicle			&#xD;
		boolean available = hydrogenVehicle.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);&#xD;
		hydrogenVehicle.removeEnergyAsset();&#xD;
		&#xD;
		//Create new Diesel vehicle&#xD;
		f_createVehicle(GC, vehicleType, tripTracker, available, false);&#xD;
	&#xD;
		//Update variables&#xD;
		local_DieselV_nb++;&#xD;
		local_HydrogenV_nb--;&#xD;
	}&#xD;
	while (setAmountOfVehicles &gt; local_DieselV_nb){ // Create additional vehicles&#xD;
	&#xD;
	f_createVehicle(GC, vehicleType, null, true, true);&#xD;
&#xD;
	local_DieselV_nb++;&#xD;
	}&#xD;
}&#xD;
else if(setAmountOfVehicles &lt; local_DieselV_nb){ // Slider has decreased the amount of selected vehicles&#xD;
	&#xD;
	ArrayList&lt;J_EAVehicle&gt; additionalVehicles = new ArrayList&lt;J_EAVehicle&gt;(findAll(c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)), vehicle -&gt; vehicle.energyAssetType == vehicleType ));&#xD;
	while(setAmountOfVehicles &lt; local_DieselV_nb &amp;&amp; additionalVehicles.size() &gt; 0){ //Remove additional Diesel vehicles first&#xD;
	&#xD;
	//Find additional created vehicle&#xD;
	J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)additionalVehicles.get(additionalVehicles.size()-1); // Get latest added&#xD;
	&#xD;
	// Remove diesel vehicle&#xD;
	additionalVehicles.remove(dieselVehicle);&#xD;
	c_additionalVehicles.get(GC).remove(dieselVehicle);&#xD;
	dieselVehicle.removeEnergyAsset();&#xD;
	zero_Interface.c_orderedVehicles.remove(dieselVehicle);&#xD;
	&#xD;
	//Update variable&#xD;
	local_DieselV_nb--;&#xD;
	}&#xD;
	while ( setAmountOfVehicles &lt; local_DieselV_nb &amp;&amp; local_EV_nb &lt; max_amount_EV) {&#xD;
	&#xD;
	// Find a to be removed Diesel vehicle&#xD;
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType &amp;&amp; !c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).contains(p)  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;&#xD;
		&#xD;
		// Remove diesel vehicle		&#xD;
		boolean available = dieselVehicle.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(dieselVehicle);&#xD;
		dieselVehicle.removeEnergyAsset();&#xD;
		&#xD;
		//Create new EV&#xD;
		f_createVehicle(GC, vehicleType_electric, tripTracker, available, false);&#xD;
			&#xD;
		//Update variables&#xD;
		local_DieselV_nb--;&#xD;
		local_EV_nb++;&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
//Update variables&#xD;
switch (vehicleType){&#xD;
	&#xD;
	case DIESEL_VEHICLE:&#xD;
	v_nbEVCars = local_EV_nb;&#xD;
	v_nbDieselCars = local_DieselV_nb;&#xD;
	v_nbHydrogenCars = local_HydrogenV_nb;&#xD;
	break;&#xD;
	&#xD;
	case DIESEL_VAN:&#xD;
	v_nbEVVans = local_EV_nb;&#xD;
	v_nbDieselVans = local_DieselV_nb;&#xD;
	v_nbHydrogenVans = local_HydrogenV_nb;&#xD;
	break;&#xD;
	&#xD;
	case DIESEL_TRUCK:&#xD;
	v_nbEVTrucks = local_EV_nb;&#xD;
	v_nbDieselTrucks = local_DieselV_nb;&#xD;
	v_nbHydrogenTrucks = local_HydrogenV_nb;&#xD;
	break;&#xD;
}&#xD;
&#xD;
if(!b_runningMainInterfaceSlider){&#xD;
	zero_Interface.f_updateMainInterfaceSliders();&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>int</ReturnType>
						<Id>1714474430338</Id>
						<Name>f_setHydrogenVehicleSliders</Name>
						<X>-430</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicleType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>setAmountOfVehicles</Name>
							<Type>int</Type>
						</Parameter>
						<Body>int local_EV_nb;&#xD;
int local_DieselV_nb;&#xD;
int local_HydrogenV_nb;&#xD;
&#xD;
int min_amount_EV;&#xD;
int	max_amount_EV;&#xD;
&#xD;
OL_EnergyAssetType vehicleType_electric;&#xD;
OL_EnergyAssetType vehicleType_diesel;&#xD;
	&#xD;
switch (vehicleType){&#xD;
	&#xD;
	case HYDROGEN_VEHICLE:&#xD;
&#xD;
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VEHICLE;&#xD;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VEHICLE;&#xD;
&#xD;
	local_EV_nb = v_nbEVCars;&#xD;
	local_DieselV_nb = v_nbDieselCars;&#xD;
	local_HydrogenV_nb = v_nbHydrogenCars;&#xD;
	&#xD;
	min_amount_EV = v_minEVCarSlider;&#xD;
	max_amount_EV = v_maxEVCarSlider;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case HYDROGEN_VAN:&#xD;
	&#xD;
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_VAN;&#xD;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_VAN;&#xD;
	&#xD;
	local_EV_nb = v_nbEVVans;&#xD;
	local_DieselV_nb = v_nbDieselVans;&#xD;
	local_HydrogenV_nb = v_nbHydrogenVans;&#xD;
	&#xD;
	min_amount_EV = v_minEVVanSlider;&#xD;
	max_amount_EV = v_maxEVVanSlider;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case HYDROGEN_TRUCK:&#xD;
&#xD;
	vehicleType_electric = OL_EnergyAssetType.ELECTRIC_TRUCK;&#xD;
	vehicleType_diesel = OL_EnergyAssetType.DIESEL_TRUCK;&#xD;
	&#xD;
	local_EV_nb = v_nbEVTrucks;&#xD;
	local_DieselV_nb = v_nbDieselTrucks;&#xD;
	local_HydrogenV_nb = v_nbHydrogenTrucks;&#xD;
	&#xD;
	min_amount_EV = v_minEVTruckSlider;&#xD;
	max_amount_EV = v_maxEVTruckSlider;&#xD;
		&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
	traceln("SLIDER SET TO WRONG VEHICLE TYPE, DO NOTHING");&#xD;
	return;&#xD;
}&#xD;
&#xD;
if (setAmountOfVehicles &gt; local_HydrogenV_nb){ // Slider has increased the amount of selected vehicles&#xD;
	&#xD;
	//First convert all other existing additional vehicles&#xD;
	int nbOfOtherAdditionalVehiclesOfThisClass = findAll(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_diesel || p.energyAssetType == vehicleType_electric).size();&#xD;
	while(setAmountOfVehicles &gt; local_HydrogenV_nb &amp;&amp; nbOfOtherAdditionalVehiclesOfThisClass &gt; 0 ){&#xD;
		&#xD;
		// Find an additional Diesel vehicle&#xD;
		J_EAVehicle dieselVehicle = findFirst(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_diesel);&#xD;
		&#xD;
		if(dieselVehicle != null){&#xD;
			J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;&#xD;
			&#xD;
			// Remove Diesel vehicle		&#xD;
			boolean available = dieselVehicle.getAvailability();&#xD;
			dieselVehicle.removeEnergyAsset();&#xD;
			c_additionalVehicles.get(GC).remove(dieselVehicle);&#xD;
			zero_Interface.c_orderedVehicles.remove(dieselVehicle);&#xD;
			&#xD;
			//Create new additional Hydrogen vehicle&#xD;
			f_createVehicle(GC, vehicleType, tripTracker, available, true);			&#xD;
&#xD;
			//Update local variables&#xD;
			local_HydrogenV_nb++;&#xD;
			local_DieselV_nb--;&#xD;
			nbOfOtherAdditionalVehiclesOfThisClass--;&#xD;
		}&#xD;
		else{&#xD;
			// Find an additional EV vehicle&#xD;
			J_EAVehicle ev = findFirst(c_additionalVehicles.get(GC), p -&gt; p.energyAssetType == vehicleType_electric);&#xD;
			J_ActivityTrackerTrips tripTracker = ev.tripTracker;&#xD;
		&#xD;
			// Remove EV&#xD;
			boolean available = ev.getAvailability();&#xD;
			ev.removeEnergyAsset();&#xD;
			c_additionalVehicles.get(GC).remove(ev);&#xD;
			zero_Interface.c_orderedVehicles.remove(ev);&#xD;
			&#xD;
			//Create new additional Hydrogen vehicle&#xD;
			f_createVehicle(GC, vehicleType, tripTracker, available, true);&#xD;
&#xD;
			//Update local variables&#xD;
			local_HydrogenV_nb++;&#xD;
			local_EV_nb--;&#xD;
			nbOfOtherAdditionalVehiclesOfThisClass--;&#xD;
		}&#xD;
	}&#xD;
	while ( setAmountOfVehicles &gt; local_HydrogenV_nb &amp;&amp; local_DieselV_nb &gt; 0) {&#xD;
&#xD;
		// Find a to be removed Diesel vehicle&#xD;
		J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType_diesel  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = dieselVehicle.tripTracker;&#xD;
&#xD;
		//Remove diesel vehicle&#xD;
		boolean available = dieselVehicle.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(dieselVehicle);&#xD;
		dieselVehicle.removeEnergyAsset();&#xD;
		&#xD;
		//Create new Hydrogen vehicle&#xD;
		f_createVehicle(GC, vehicleType, tripTracker, available, false);&#xD;
			&#xD;
		//Update variables&#xD;
		local_HydrogenV_nb++;&#xD;
		local_DieselV_nb--;&#xD;
		&#xD;
	}&#xD;
	while (setAmountOfVehicles &gt; local_HydrogenV_nb &amp;&amp; local_EV_nb &gt; min_amount_EV){&#xD;
		&#xD;
		// Find a to be removed EV&#xD;
		J_EAEV ev = (J_EAEV)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType_electric  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = ev.tripTracker;&#xD;
		&#xD;
		// Remove EV&#xD;
		boolean available = ev.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(ev);&#xD;
		ev.removeEnergyAsset();&#xD;
		&#xD;
		//Create new Hydrogen vehicle&#xD;
		f_createVehicle(GC, vehicleType, tripTracker, available, false);&#xD;
			&#xD;
		//Update variables&#xD;
		local_HydrogenV_nb++;&#xD;
		local_EV_nb--;&#xD;
	}&#xD;
	while (setAmountOfVehicles &gt; local_HydrogenV_nb){ // Create additional vehicles&#xD;
	&#xD;
	f_createVehicle(GC, vehicleType, null, true, true);&#xD;
	local_HydrogenV_nb++;	&#xD;
	}&#xD;
&#xD;
	&#xD;
}&#xD;
else if(setAmountOfVehicles &lt; local_HydrogenV_nb){ // Slider has decreased the amount of selected vehicles&#xD;
	&#xD;
	ArrayList&lt;J_EAVehicle&gt; additionalVehicles = new ArrayList&lt;J_EAVehicle&gt;(findAll(c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)), vehicle -&gt; vehicle.energyAssetType == vehicleType ));&#xD;
	while(setAmountOfVehicles &lt; local_HydrogenV_nb &amp;&amp; additionalVehicles.size() &gt; 0){//Remove additional Hydrogen vehicles first&#xD;
&#xD;
	//Find additional created vehicle&#xD;
	J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)additionalVehicles.get(additionalVehicles.size()-1); // Get latest added&#xD;
	&#xD;
	// Remove hydrogen vehicle&#xD;
	additionalVehicles.remove(hydrogenVehicle);&#xD;
	c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).remove(hydrogenVehicle);&#xD;
	hydrogenVehicle.removeEnergyAsset();&#xD;
	zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);&#xD;
	&#xD;
	//Update variable&#xD;
	local_HydrogenV_nb--;&#xD;
	}&#xD;
	while ( setAmountOfVehicles &lt; local_HydrogenV_nb &amp;&amp; local_EV_nb &lt; max_amount_EV) {&#xD;
	&#xD;
		// Find a to be removed Hydrogen vehicle&#xD;
		J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)findFirst(zero_Interface.c_orderedVehicles, p -&gt; p.energyAssetType == vehicleType &amp;&amp; !c_additionalVehicles.get(c_ownedGridConnections.get(v_currentSelectedGCnr)).contains(p)  &amp;&amp; ((GridConnection)p.getParentAgent()) == GC);&#xD;
		J_ActivityTrackerTrips tripTracker = hydrogenVehicle.tripTracker;&#xD;
		&#xD;
		// Remove hydrogen vehicle			&#xD;
		boolean available = hydrogenVehicle.getAvailability();&#xD;
		zero_Interface.c_orderedVehicles.remove(hydrogenVehicle);&#xD;
		hydrogenVehicle.removeEnergyAsset();&#xD;
		&#xD;
		//Create new EV vehicle&#xD;
		f_createVehicle(GC, vehicleType_electric, tripTracker, available, false);&#xD;
	&#xD;
		//Update variables&#xD;
		local_HydrogenV_nb--;&#xD;
		local_EV_nb++;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Update variables&#xD;
switch (vehicleType){&#xD;
	&#xD;
	case HYDROGEN_VEHICLE:&#xD;
	&#xD;
	v_nbEVCars = local_EV_nb;&#xD;
	v_nbDieselCars = local_DieselV_nb;&#xD;
	v_nbHydrogenCars = local_HydrogenV_nb;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case HYDROGEN_VAN:&#xD;
	&#xD;
	v_nbEVVans = local_EV_nb;&#xD;
	v_nbDieselVans = local_DieselV_nb;&#xD;
	v_nbHydrogenVans = local_HydrogenV_nb;&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	case HYDROGEN_TRUCK:&#xD;
	&#xD;
	v_nbEVTrucks = local_EV_nb;&#xD;
	v_nbDieselTrucks = local_DieselV_nb;&#xD;
	v_nbHydrogenTrucks = local_HydrogenV_nb;&#xD;
	&#xD;
	break;&#xD;
}&#xD;
&#xD;
if(!b_runningMainInterfaceSlider){&#xD;
	zero_Interface.f_updateMainInterfaceSliders();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714654645264</Id>
						<Name>f_setResultsUIPresets</Name>
						<X>-1070</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set the order of the resultsUI to front but behind simulation screen group and load icon&#xD;
presentation.remove(uI_Results_presentation);&#xD;
presentation.insert(presentation.size()-1, uI_Results_presentation);&#xD;
presentation.remove(gr_loadIcon);&#xD;
presentation.insert(presentation.size()-1, gr_loadIcon);&#xD;
presentation.remove(gr_simulateYearScreen);&#xD;
presentation.insert(presentation.size()-1, gr_simulateYearScreen);&#xD;
&#xD;
&#xD;
&#xD;
//Set the locations and visibilities of the ResultsUI agents&#xD;
uI_Results.f_setChartProfiles_Presentation(0, 0, true);&#xD;
uI_Results.f_setChartBalance_Presentation(530, 0, true);&#xD;
uI_Results.f_setChartGridLoad_Presentation(1060, 0, false);&#xD;
uI_Results.f_setChartSankey_Presentation(1060, 0, true);&#xD;
uI_Results.f_setResultsUIHeader(null, null, false);&#xD;
&#xD;
//Disable KPIsummary button if KPIsummary is not selected&#xD;
if(zero_Interface.settings.showKPISummary() == null || !zero_Interface.settings.showKPISummary()){&#xD;
	uI_Results.getCheckbox_KPISummary().setVisible(false);&#xD;
}&#xD;
else{&#xD;
	//uI_Results.f_setCB_KPISummary_Presentation(10, -30, true);&#xD;
}&#xD;
&#xD;
//Set selected object display flase&#xD;
uI_Results.b_isCompanyUIResultsUI = true;&#xD;
&#xD;
//Set the color of the charts&#xD;
uI_Results.f_styleAllCharts(v_chartBackgroundColor, v_companyUILineColor, v_chartLineWidth, LINE_STYLE_SOLID);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714655282643</Id>
						<Name>f_initializeCompanyUI</Name>
						<X>-1090</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set GC combobox &#xD;
f_setComboBoxGC();&#xD;
&#xD;
//Initialize graph locations and visibility&#xD;
f_setResultsUIPresets();&#xD;
&#xD;
//Initialize the sliders&#xD;
f_setSliderPresets();&#xD;
&#xD;
//Scale companyName to the box size&#xD;
f_setNameTextSize();&#xD;
&#xD;
&#xD;
//Enable/disable all sliders (based on paused)&#xD;
if(!c_ownedGridConnections.get(v_currentSelectedGCnr).v_isActive){&#xD;
	f_enableAllSliders(false);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714656835269</Id>
						<Name>f_updateUIResultsCompanyUI</Name>
						<X>-1050</X>
						<Y>1350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>uI_Results.f_updateResultsUI(c_ownedGridConnections.get(v_currentSelectedGCnr));&#xD;
uI_Results.f_setChartProfiles_Presentation(null, null, true);&#xD;
uI_Results.f_setChartBalance_Presentation(null, null, true);&#xD;
&#xD;
if(cb_showGridloadPlot.isSelected())&#xD;
	uI_Results.f_setChartGridLoad_Presentation(null, null, true);&#xD;
else{&#xD;
	uI_Results.f_setChartSankey_Presentation(null, null, true);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715713362876</Id>
						<Name>f_setHeatingRB</Name>
						<X>-1070</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>int nr_currentHeatingType = 0;&#xD;
String rbHeating_acces = "enabled";&#xD;
&#xD;
switch (c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentHeatingType()){&#xD;
	case GASBURNER:&#xD;
		nr_currentHeatingType = 0;&#xD;
		break;&#xD;
&#xD;
	case HYBRID_HEATPUMP:&#xD;
		nr_currentHeatingType = 1;&#xD;
		rbHeating_acces = "disabled";&#xD;
		break;&#xD;
&#xD;
	case ELECTRIC_HEATPUMP:&#xD;
		nr_currentHeatingType = 2;&#xD;
		rbHeating_acces = "disabled";&#xD;
		break;&#xD;
		&#xD;
	//case HYDROGENBURNER:&#xD;
	case DISTRICTHEAT:&#xD;
		nr_currentHeatingType = 3;&#xD;
		break;&#xD;
	&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		nr_currentHeatingType = 4;&#xD;
		gr_heatingOptionBlockerCHP.setVisible(false);&#xD;
		break;&#xD;
		&#xD;
	case OTHER:&#xD;
		//not supported&#xD;
		rbHeating_acces = "invisible";&#xD;
		break;&#xD;
		&#xD;
	default:&#xD;
		rbHeating_acces = "invisible";&#xD;
}&#xD;
&#xD;
if (rbHeating_acces.equals("disabled") || rbHeating_acces.equals("invisible")){&#xD;
	rb_heatingTypePrivateUI.setEnabled(false);&#xD;
	&#xD;
	if(c_ownedGridConnections.get(v_currentSelectedGCnr).v_hasQuarterHourlyValues){&#xD;
		sl_heatDemandCompanyReduction.setEnabled(false);&#xD;
	}&#xD;
	&#xD;
	if (rbHeating_acces.equals("invisible")){&#xD;
		rb_heatingTypePrivateUI.setVisible(false);&#xD;
		gr_heatDemandReductionSlider.setVisible(false);&#xD;
	}&#xD;
}&#xD;
else{ // if(rbHeating_acces.equals("enabled"){&#xD;
	rb_heatingTypePrivateUI.setEnabled(true);&#xD;
	rb_heatingTypePrivateUI.setVisible(true);&#xD;
	sl_heatDemandCompanyReduction.setEnabled(true);&#xD;
	sl_heatDemandCompanyReduction.setVisible(true);&#xD;
}&#xD;
&#xD;
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, false);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715952034311</Id>
						<Name>f_addPVAsset</Name>
						<X>-410</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>asset_type</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>installedPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>String asset_name					= "Solar Panels";&#xD;
double capacityElectric_kW			= installedPower_kW;&#xD;
double capacityHeat_kW				= 0;&#xD;
double yearlyProductionMethane_kWh 	= 0;&#xD;
double yearlyProductionHydrogen_kWh = 0;&#xD;
double timestep_h 					= zero_Interface.energyModel.p_timeStep_h;&#xD;
double outputTemperature_degC 		= 0;&#xD;
parentGC.v_liveAssetsMetaData.hasPV = true;&#xD;
&#xD;
J_EAProduction production_asset = new J_EAProduction(parentGC, asset_type, asset_name, OL_EnergyCarriers.ELECTRICITY, capacityElectric_kW, timestep_h, zero_Interface.energyModel.pp_PVProduction35DegSouth_fr);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717576974529</Id>
						<Name>f_setSelectedGC</Name>
						<Description>Function that sets the sliders to match the currently present settings of the energy assets owned by the selected GC. Used when a connection owner has multiple grid connections, and wants to set the sliders of a different GC. </Description>
						<X>-430</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set the Adress to selected GC&#xD;
v_adressGC = c_ownedGridConnections.get(v_currentSelectedGCnr).p_address.getAddress();&#xD;
&#xD;
//Set the sliders&#xD;
f_setSelectedGCSliders();&#xD;
&#xD;
//Set the new graphs/building selection&#xD;
if(!b_runningMainInterfaceScenarioSettings &amp;&amp; !b_runningMainInterfaceSlider &amp;&amp; c_ownedGridConnections.get(v_currentSelectedGCnr).v_isActive){&#xD;
	f_setSelectedGCGraphs();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725439625846</Id>
						<Name>f_setSelectedGCSliders</Name>
						<X>-400</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Reset GC capacities to without NFATO values&#xD;
c_ownedGridConnections.get(v_currentSelectedGCnr).f_nfatoSetConnectionCapacity(true);&#xD;
	&#xD;
//Initialize slider presets to selected GC (min, max, etc.)&#xD;
f_setSliderPresets();&#xD;
&#xD;
//If GC not active in current situation, disable scenario rb&#xD;
rb_scenariosPrivateUI.setEnabled(c_scenarioSettings_Current.get(v_currentSelectedGCnr).getIsCurrentlyActive());&#xD;
&#xD;
//Find the current heating type&#xD;
int nr_currentHeatingType = 0;&#xD;
switch (c_ownedGridConnections.get(v_currentSelectedGCnr).p_heatingType){&#xD;
	case GASBURNER:&#xD;
		nr_currentHeatingType = 0;&#xD;
	break;&#xD;
&#xD;
	case HYBRID_HEATPUMP:&#xD;
		nr_currentHeatingType = 1;&#xD;
	break;&#xD;
&#xD;
	case ELECTRIC_HEATPUMP:&#xD;
		nr_currentHeatingType = 2;&#xD;
	break;&#xD;
		&#xD;
	case HYDROGENBURNER:&#xD;
		nr_currentHeatingType = 3;&#xD;
	break;&#xD;
		&#xD;
	case OTHER:&#xD;
		//not supported&#xD;
	break;&#xD;
		&#xD;
	default:&#xD;
}&#xD;
&#xD;
&#xD;
//Find the current heat saving percentage&#xD;
int currentHeatSavings = 0;&#xD;
&#xD;
J_EAConsumption consumptionEAHEAT = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_consumptionAssets, consumptionAsset -&gt; consumptionAsset.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND);&#xD;
if (consumptionEAHEAT != null){&#xD;
	currentHeatSavings = roundToInt((consumptionEAHEAT.getConsumptionScaling_fr() - 1)*-100);&#xD;
}&#xD;
else{   &#xD;
	J_EAProfile profileEAHEAT = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_profileAssets, profileAsset -&gt; profileAsset.profileType == OL_ProfileAssetType.HEATDEMAND);&#xD;
	if (profileEAHEAT != null){&#xD;
		currentHeatSavings = roundToInt((profileEAHEAT.getProfileScaling_fr() - 1)*-100);&#xD;
	}&#xD;
}&#xD;
&#xD;
//Find the current electricity savings percentage&#xD;
int currentElectricitySavings = 0;&#xD;
&#xD;
J_EAConsumption consumptionEAELECTRIC = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_consumptionAssets, consumptionAsset -&gt; consumptionAsset.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND);&#xD;
if (consumptionEAELECTRIC != null){&#xD;
	currentElectricitySavings = roundToInt((consumptionEAELECTRIC.getConsumptionScaling_fr() - 1)*-100);&#xD;
}&#xD;
else{&#xD;
	J_EAProfile profileEAELECTRIC = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_profileAssets, profileAsset -&gt; profileAsset.profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD);&#xD;
	if (profileEAELECTRIC != null){&#xD;
		currentElectricitySavings = roundToInt((profileEAELECTRIC.getProfileScaling_fr() - 1)*-100);&#xD;
	}&#xD;
}&#xD;
&#xD;
//Find the current Connection capacity (delivery)&#xD;
int GCContractCapacityCurrent_Delivery = roundToInt(c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
&#xD;
//Find the current Connection capacity (feedin)&#xD;
int GCContractCapacityCurrent_Feedin = roundToInt(c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
&#xD;
//Set the nfato values&#xD;
f_getNFATOValues();&#xD;
&#xD;
//Find the current battery capacity&#xD;
int BatteryCapacityCurrent = 0;&#xD;
J_EAStorage batteryAsset = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_storageAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.STORAGE_ELECTRIC );&#xD;
if (batteryAsset != null){&#xD;
	BatteryCapacityCurrent = roundToInt(((J_EAStorageElectric)batteryAsset).getStorageCapacity_kWh());&#xD;
}&#xD;
&#xD;
//Find the current PV capacity&#xD;
int PVCapacityCurrent = 0;&#xD;
if (c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveAssetsMetaData.hasPV){&#xD;
	J_EAProduction pvAsset = findFirst(c_ownedGridConnections.get(v_currentSelectedGCnr).c_productionAssets, p -&gt; p.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC );&#xD;
	PVCapacityCurrent = roundToInt(pvAsset.getCapacityElectric_kW());&#xD;
}&#xD;
&#xD;
//Find the current curtailment setting&#xD;
boolean currentCurtailmentSetting = c_ownedGridConnections.get(v_currentSelectedGCnr).v_enableCurtailment;&#xD;
&#xD;
//Find the current transport savings&#xD;
int currentTransportSavings = 0;&#xD;
if (c_ownedGridConnections.get(v_currentSelectedGCnr).c_tripTrackers.size() &gt; 0){&#xD;
	currentTransportSavings = - roundToInt(c_ownedGridConnections.get(v_currentSelectedGCnr).c_tripTrackers.get(0).getDistanceScaling_fr()*100) + 100;&#xD;
}&#xD;
&#xD;
&#xD;
//Find the current number of vehicles for each type&#xD;
int nbEcarsCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VEHICLE);&#xD;
int nbHydrogencarsCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VEHICLE);&#xD;
int nbDieselcarsCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_VEHICLE);&#xD;
&#xD;
int nbEvansCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN);&#xD;
int nbHydrogenvansCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN);&#xD;
int nbDieselvansCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_VAN);&#xD;
&#xD;
int nbEtrucksCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK);&#xD;
int nbHydrogentrucksCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK);&#xD;
int nbDieseltrucksCurrent = count(c_ownedGridConnections.get(v_currentSelectedGCnr).c_vehicleAssets, p-&gt;p.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK);&#xD;
&#xD;
//Check on electric cars, cause for companies that have quarterlyhour electricity data, the initial ea for EV (and other electric appliances) are not made.&#xD;
if (c_ownedGridConnections.get(v_currentSelectedGCnr).v_hasQuarterHourlyValues){&#xD;
	&#xD;
	nbEcarsCurrent += v_minEVCarSlider;&#xD;
	nbEvansCurrent += v_minEVVanSlider;&#xD;
	nbEtrucksCurrent += v_minEVTruckSlider;&#xD;
}&#xD;
&#xD;
&#xD;
////Set slider knobs at the currently (!) correct points&#xD;
&#xD;
//heating&#xD;
rb_heatingTypePrivateUI.setValue(nr_currentHeatingType, false);		&#xD;
&#xD;
//Heat savings&#xD;
sl_heatDemandCompanyReduction.setValue(currentHeatSavings, false);&#xD;
&#xD;
//Electricity savings&#xD;
sl_electricityDemandCompanyReduction.setValue(currentElectricitySavings, false);&#xD;
&#xD;
//Contract connection capacity (delivery)&#xD;
sl_GCCapacityCompany.setValue(GCContractCapacityCurrent_Delivery, false);&#xD;
v_defaultGCCapacitySlider = GCContractCapacityCurrent_Delivery;&#xD;
&#xD;
//Contract connection capacity (feedin)&#xD;
sl_GCCapacityCompany_Feedin.setValue(GCContractCapacityCurrent_Feedin, false);&#xD;
v_defaultGCCapacitySlider_Feedin = GCContractCapacityCurrent_Feedin;&#xD;
&#xD;
//Battery capacity&#xD;
sl_batteryCompany.setValue(BatteryCapacityCurrent, false);&#xD;
v_defaultBatSlider = BatteryCapacityCurrent;&#xD;
&#xD;
//Solar panel power&#xD;
sl_rooftopPVCompany.setValue(PVCapacityCurrent, false);&#xD;
v_defaultPVSlider = PVCapacityCurrent;&#xD;
&#xD;
//Curtailment setting&#xD;
cb_curtailmentCompany.setSelected(currentCurtailmentSetting, false);&#xD;
&#xD;
&#xD;
//Mobility savings&#xD;
sl_mobilityDemandCompanyReduction.setValue(currentTransportSavings, false);&#xD;
&#xD;
//Cars &#xD;
sl_electricCarsCompany.setValue(nbEcarsCurrent, false);&#xD;
sl_hydrogenCarsCompany.setValue(nbHydrogencarsCurrent, false);&#xD;
sl_dieselCarsCompany.setValue(nbDieselcarsCurrent, false);&#xD;
&#xD;
v_nbEVCars = nbEcarsCurrent;&#xD;
v_nbHydrogenCars = nbHydrogencarsCurrent;&#xD;
v_nbDieselCars = nbDieselcarsCurrent;&#xD;
&#xD;
&#xD;
//Vans&#xD;
sl_electricVansCompany.setValue(nbEvansCurrent, false);&#xD;
sl_hydrogenVansCompany.setValue(nbHydrogenvansCurrent, false);&#xD;
sl_dieselVansCompany.setValue(nbDieselvansCurrent, false);&#xD;
&#xD;
v_nbEVVans = nbEvansCurrent;&#xD;
v_nbHydrogenVans = nbHydrogenvansCurrent;&#xD;
v_nbDieselVans = nbDieselvansCurrent;&#xD;
&#xD;
&#xD;
//Trucks&#xD;
sl_electricTrucksCompany.setValue(nbEtrucksCurrent, false);&#xD;
sl_hydrogenTrucksCompany.setValue(nbHydrogentrucksCurrent, false);&#xD;
sl_dieselTrucksCompany.setValue(nbDieseltrucksCurrent, false);&#xD;
&#xD;
v_nbEVTrucks = nbEtrucksCurrent;&#xD;
v_nbHydrogenTrucks = nbHydrogentrucksCurrent;&#xD;
v_nbDieselTrucks = nbDieseltrucksCurrent;&#xD;
&#xD;
//Add nfato again&#xD;
c_ownedGridConnections.get(v_currentSelectedGCnr).f_nfatoSetConnectionCapacity(false);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725439635605</Id>
						<Name>f_setSelectedGCGraphs</Name>
						<X>-400</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set the graphs to the correct GC&#xD;
zero_Interface.v_previousClickedObjectType = OL_GISObjectType.BUILDING;&#xD;
zero_Interface.c_selectedGridConnections.clear();&#xD;
zero_Interface.f_deselectPreviousSelect( );&#xD;
zero_Interface.f_selectBuilding(c_ownedGridConnections.get(v_currentSelectedGCnr).c_connectedGISObjects.get(0), c_ownedGridConnections.get(v_currentSelectedGCnr).c_connectedGISObjects);&#xD;
f_updateUIResultsCompanyUI();&#xD;
if(c_ownedGridConnections.get(v_currentSelectedGCnr).v_rapidRunData != null){&#xD;
	uI_Results.f_setAllCharts();&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725607045331</Id>
						<Name>f_setSimulateYearScreen</Name>
						<X>-430</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>gr_simulateYearScreen.setVisible(true);&#xD;
&#xD;
&#xD;
&#xD;
if(!b_runningMainInterfaceScenarioSettings &amp;&amp; !b_runningMainInterfaceSlider){&#xD;
	//Set it for main interface as well&#xD;
	zero_Interface.f_resetSettings();&#xD;
	&#xD;
	//Update variable to change to custom scenario&#xD;
	zero_Interface.b_changeToCustomScenario = true;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725614403909</Id>
						<Name>f_setGCCapacitySliderPresets</Name>
						<X>-1070</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_GCCapacityCompany.setRange(0, 100000);&#xD;
&#xD;
//Get current grid capacity&#xD;
double defaultGCCapacitySlider = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractDeliveryCapacity_kW();&#xD;
&#xD;
//Get future grid capacity&#xD;
double futureGCCapacity_delivery_kW = c_scenarioSettings_Future.get(v_currentSelectedGCnr).getRequestedContractDeliveryCapacity_kW();&#xD;
&#xD;
//Get current physical capacity&#xD;
v_physicalConnectionCapacity_kW = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentPhysicalConnectionCapacity_kW();&#xD;
&#xD;
//Set range specific for specific intervals of capacity&#xD;
v_minGCCapacitySlider = 0;&#xD;
&#xD;
if(futureGCCapacity_delivery_kW &lt; 100 &amp;&amp; defaultGCCapacitySlider &lt; 100){&#xD;
	v_maxGCCapacitySlider = 150;&#xD;
}&#xD;
else if(futureGCCapacity_delivery_kW &lt; 1000 &amp;&amp; defaultGCCapacitySlider &lt; 1000){&#xD;
	v_maxGCCapacitySlider = 2000;&#xD;
}&#xD;
else if(futureGCCapacity_delivery_kW &lt; 8000 &amp;&amp; defaultGCCapacitySlider &lt; 8000){&#xD;
	v_maxGCCapacitySlider = 10000;&#xD;
}&#xD;
else if(futureGCCapacity_delivery_kW &lt; 15000 &amp;&amp; defaultGCCapacitySlider &lt; 15000){&#xD;
	v_maxGCCapacitySlider = 20000;&#xD;
}&#xD;
else{&#xD;
	v_maxGCCapacitySlider = max(futureGCCapacity_delivery_kW, defaultGCCapacitySlider);&#xD;
}&#xD;
&#xD;
v_defaultGCCapacitySlider = roundToInt(defaultGCCapacitySlider);&#xD;
&#xD;
//Set slider knob&#xD;
sl_GCCapacityCompany.setValue(v_defaultGCCapacitySlider, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1727712593952</Id>
						<Name>f_setNameTextSize</Name>
						<X>-1070</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (p_companyName == null) {&#xD;
    return;&#xD;
}&#xD;
&#xD;
int nameLength = p_companyName.length();&#xD;
&#xD;
int i = 0;&#xD;
if(nameLength &gt; 24){&#xD;
	while(24+i != nameLength){&#xD;
	&#xD;
		t_companyName.setScale(0.9);&#xD;
		i++;&#xD;
	}&#xD;
}&#xD;
//Works for now: Possible to make it more accurate using getFontMetrics package and comparing width of text with the name text box width.&#xD;
//--&gt; Not done for now, as it feels unnecessary.</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1727798399503</Id>
						<Name>f_setGCCapacitySliderPresets_Feedin</Name>
						<X>-1070</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set back end range (to prevent anylogic errors)&#xD;
sl_GCCapacityCompany_Feedin.setRange(0, 100000);&#xD;
&#xD;
//Get current grid capacity&#xD;
double defaultGCCapacitySlider_Feedin = c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractFeedinCapacity_kW();&#xD;
&#xD;
//Set range specific for specific intervals of capacity&#xD;
v_minGCCapacitySlider_Feedin = 0;&#xD;
&#xD;
if(defaultGCCapacitySlider_Feedin &lt; 100){&#xD;
	v_maxGCCapacitySlider_Feedin = 150;&#xD;
}&#xD;
else if(defaultGCCapacitySlider_Feedin &lt; 1000){&#xD;
	v_maxGCCapacitySlider_Feedin = 2000;&#xD;
}&#xD;
else if(defaultGCCapacitySlider_Feedin &lt; 8000){&#xD;
	v_maxGCCapacitySlider_Feedin = 10000;&#xD;
}&#xD;
else if(defaultGCCapacitySlider_Feedin &lt; 15000){&#xD;
	v_maxGCCapacitySlider_Feedin = 20000;&#xD;
}&#xD;
else{&#xD;
	v_maxGCCapacitySlider_Feedin = defaultGCCapacitySlider_Feedin;&#xD;
}&#xD;
&#xD;
v_defaultGCCapacitySlider_Feedin = roundToInt(defaultGCCapacitySlider_Feedin);&#xD;
&#xD;
//Set slider knob&#xD;
sl_GCCapacityCompany_Feedin.setValue(v_defaultGCCapacitySlider_Feedin, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1727884380899</Id>
						<Name>f_getNFATOValues</Name>
						<X>-440</X>
						<Y>765</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_NFATO_active = c_ownedGridConnections.get(v_currentSelectedGCnr).v_enableNFato;&#xD;
v_NFATO_kW_delivery = c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.contractedDeliveryCapacity_kW - v_defaultGCCapacitySlider;&#xD;
v_NFATO_kW_feedin = c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.contractedFeedinCapacity_kW- v_defaultGCCapacitySlider_Feedin;&#xD;
&#xD;
if(v_NFATO_kW_delivery &gt; 0){&#xD;
	t_GCCapacityCompany_delivery_nfato.setColor(green);&#xD;
}&#xD;
else if(v_NFATO_kW_delivery &lt; 0){&#xD;
	t_GCCapacityCompany_delivery_nfato.setColor(red);&#xD;
}&#xD;
else{&#xD;
	t_GCCapacityCompany_delivery_nfato.setColor(black);&#xD;
}&#xD;
&#xD;
if(v_NFATO_kW_feedin &gt; 0){&#xD;
	t_GCCapacityCompany_Feedin_nfato.setColor(green);&#xD;
}&#xD;
else if(v_NFATO_kW_feedin &lt; 0){&#xD;
	t_GCCapacityCompany_Feedin_nfato.setColor(red);&#xD;
}&#xD;
else{&#xD;
	t_GCCapacityCompany_Feedin_nfato.setColor(black);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1729515671654</Id>
						<Name>f_enableAllSliders</Name>
						<X>-1070</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>enable</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>sl_heatDemandCompanyReduction.setEnabled(enable);&#xD;
rb_heatingTypePrivateUI.setEnabled(enable);&#xD;
&#xD;
sl_electricityDemandCompanyReduction.setEnabled(enable);&#xD;
sl_GCCapacityCompany.setEnabled(enable);&#xD;
sl_GCCapacityCompany_Feedin.setEnabled(enable);&#xD;
sl_batteryCompany.setEnabled(enable);&#xD;
sl_rooftopPVCompany.setEnabled(enable);&#xD;
cb_curtailmentCompany.setEnabled(enable);&#xD;
&#xD;
sl_mobilityDemandCompanyReduction.setEnabled(enable);&#xD;
&#xD;
sl_electricCarsCompany.setEnabled(enable);&#xD;
sl_hydrogenCarsCompany.setEnabled(enable);&#xD;
sl_dieselCarsCompany.setEnabled(enable);&#xD;
&#xD;
sl_electricVansCompany.setEnabled(enable);&#xD;
sl_hydrogenVansCompany.setEnabled(enable);&#xD;
sl_dieselVansCompany.setEnabled(enable);&#xD;
&#xD;
sl_electricTrucksCompany.setEnabled(enable);&#xD;
sl_hydrogenTrucksCompany.setEnabled(enable);&#xD;
sl_dieselTrucksCompany.setEnabled(enable);&#xD;
&#xD;
//Set heating rb to correct setting (no matter what input of this function is)&#xD;
f_setHeatingRB();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747316158336</Id>
						<Name>f_setErrorScreen</Name>
						<X>5540</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>errorMessage</Name>
							<Type>String</Type>
						</Parameter>
						<Body>//Reset location and height&#xD;
button_errorOK.setY(50);&#xD;
rect_errorMessage.setY(-120);&#xD;
rect_errorMessage.setHeight(200);&#xD;
t_errorMessage.setY(-70);&#xD;
&#xD;
//Set position above all other things&#xD;
presentation.remove(gr_errorScreen);&#xD;
presentation.insert(presentation.size(), gr_errorScreen);&#xD;
&#xD;
int width_numberOfCharacters = 44;&#xD;
&#xD;
// Set Text&#xD;
Pair&lt;String, Integer&gt; p = zero_Interface.v_infoText.restrictWidth(errorMessage, width_numberOfCharacters);&#xD;
errorMessage = p.getFirst();&#xD;
int numberOfLines = p.getSecond();&#xD;
int additionalLines = max(0, numberOfLines - 3);&#xD;
&#xD;
// Set Size&#xD;
rect_errorMessage.setHeight(rect_errorMessage.getHeight() + additionalLines * 40);&#xD;
rect_errorMessage.setY(rect_errorMessage.getY() - 40 * additionalLines);&#xD;
//button_errorOK.setY(button_errorOK.getY() - 10 * additionalLines);&#xD;
t_errorMessage.setY(t_errorMessage.getY() - 40 * additionalLines);&#xD;
&#xD;
t_errorMessage.setText(errorMessage);&#xD;
gr_errorScreen.setVisible(true);</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1708522361863</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>20</X>
						<Y>-160</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1708522362017</Id>
						<Name>zero_Interface</Name>
						<X>20</X>
						<Y>-120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<EmbeddedObjects>
					<EmbeddedObject>
						<Id>1714652079023</Id>
						<Name>uI_Results</Name>
						<X>-1050</X>
						<Y>1330</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1714652081119</PresentationId>
						<ActiveObjectClass>
							<PackageName>digital_twin_results</PackageName>
							<ClassName>UI_Results</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>digital_twin_results</PackageName>
								<ClassName>UI_Results</ClassName>
								<ItemName>1704197366556</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>energyModel</Name>
								<Value Class="CodeValue">
									<Code>zero_Interface.energyModel</Code>
								</Value>
							</Parameter>
							<Parameter>
								<Name>p_cutOff_MWh</Name>
							</Parameter>
							<Parameter>
								<Name>gr_infoText</Name>
							</Parameter>
							<Parameter>
								<Name>gr_closeInfoText</Name>
							</Parameter>
							<Parameter>
								<Name>t_infoTextDescription</Name>
							</Parameter>
							<Parameter>
								<Name>rect_infoText</Name>
							</Parameter>
							<Parameter>
								<Name>p_currentActiveInfoBubble</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089973</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
				</EmbeddedObjects>
				<Presentation>
					<Level>
						<Id>1708522361869</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1708612468547</Id>
								<Name>rect_canvas</Name>
								<X>-1160</X>
								<Y>-400</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>4560</Width>
								<Height>1800</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1708522459040</Id>
								<Name>rect_background</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineWidthCode>v_companyUILineWidth</LineWidthCode>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_companyUILineColor</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>1920</Width>
								<Height>980</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_companyUIBackgroundColor</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1713446065829</Id>
								<Name>rect_sliders</Name>
								<X>0</X>
								<Y>140</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineWidthCode>v_companyUILineWidth</LineWidthCode>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_companyUILineColor</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>360</Width>
								<Height>840</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_companyUIBackgroundColorSliders</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1708611929678</Id>
								<Name>rect_scenarios</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineWidthCode>v_companyUILineWidth</LineWidthCode>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_companyUILineColor</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>360</Width>
								<Height>140</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_companyUIBackgroundColorSliders</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1708611713278</Id>
								<Name>text</Name>
								<X>-440</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Colors and Styling</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1708611755978</Id>
								<Name>text4</Name>
								<X>-750</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Company parameters</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1709571615104</Id>
								<Name>text5</Name>
								<X>-750</X>
								<Y>180</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1711555257574</Id>
								<Name>button1</Name>
								<X>180</X>
								<Y>-80</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="160" Height="40">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>c_ownedGridConnections.get(v_currentSelectedGCnr).va_gridConnection.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Go to GC in engine</LabelText>
								</ExtendedProperties>
							</Control>
							<Group>
								<Id>1713447348497</Id>
								<Name>gr_scenarioRB</Name>
								<X>140</X>
								<Y>100</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1713447230459</Id>
										<Name>rb_scenariosPrivateUI</Name>
										<X>-100</X>
										<Y>-60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="180" Height="120">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (c_scenarioSettings_Current.size() &gt; 0 &amp;&amp; c_scenarioSettings_Future.size() &gt; 0){
	f_setScenario(rb_scenariosPrivateUI.getValue());
}

// Simulate Year button on Interface
zero_Interface.f_resetSettings();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="14" Style="0"/>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>Huidige situatie</Button>
											<Button>Toekomstplannen</Button>
											<Button>Custom</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1713447252716</Id>
										<Name>txt_scenario</Name>
										<X>-100</X>
										<Y>-80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer een scenario</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>20</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1713537625797</Id>
								<Name>txt_scenarioSettings</Name>
								<X>-440</X>
								<Y>340</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Set Sliders to Scenario</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1713957149840</Id>
								<Name>txt_sliderPresetsAndLimits</Name>
								<X>-1100</X>
								<Y>140</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Slider limits and presets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1713957196998</Id>
								<Name>txt_sliderFunctions</Name>
								<X>-440</X>
								<Y>460</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Slider functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1714641703973</Id>
								<Name>button2</Name>
								<X>360</X>
								<Y>-80</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="160" Height="40">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>((GIS_Building)c_ownedBuildings.get(0)).va_building.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Go to Building in engine</LabelText>
								</ExtendedProperties>
							</Control>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1714641782724</Id>
								<Name>button3</Name>
								<X>0</X>
								<Y>-80</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="160" Height="40">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>p_company.va_ConnectionOwner.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Go to Owner in engine</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1714655090415</Id>
								<Name>txt_onStartup</Name>
								<X>-1100</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>On Startup settings</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1714660279044</Id>
								<Name>txt_uiResult</Name>
								<X>-1060</X>
								<Y>1300</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>UI_Result connection (graphs)</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1715626747942</Id>
								<Name>gr_companyUISliders</Name>
								<X>310</X>
								<Y>445</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1713446221121</Id>
										<Name>txt_warmte</Name>
										<X>-240</X>
										<Y>-270</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmte</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>22</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1713446658919</Id>
										<Name>t_GCCapacityCompany</Name>
										<X>-85</X>
										<Y>6</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kW</Text>
										<TextCode>sl_GCCapacityCompany.getIntValue() + " kW"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1713446658921</Id>
										<Name>sl_GCCapacityCompany</Name>
										<X>-58</X>
										<Y>1</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setGCCapacity(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_GCCapacityCompany.getValue(), "DELIVERY");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_defaultGCCapacitySlider</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>v_minGCCapacitySlider</MinValue>
											<MaxValue>v_maxGCCapacitySlider</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1713446658933</Id>
										<Name>txt_GCCapacity</Name>
										<X>-290</X>
										<Y>6</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Contr. capaciteit (af.)</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Group>
										<Id>1713446065831</Id>
										<Name>gr_heatDemandReductionSlider</Name>
										<X>-120</X>
										<Y>-106</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446065865</Id>
												<Name>sl_heatDemandCompanyReduction</Name>
												<X>62</X>
												<Y>-130</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>double newHeatDemandReduction_pct = sl_heatDemandCompanyReduction.getValue();
double consumptionScaling_fr = 1  - newHeatDemandReduction_pct/100;

for (J_EA j_ea : c_ownedGridConnections.get(v_currentSelectedGCnr).c_energyAssets){
	if (j_ea instanceof J_EAConsumption) {
		if (j_ea.energyAssetType == OL_EnergyAssetType.HEAT_DEMAND) {
			((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
		}
	}
	if (j_ea instanceof J_EAProfile) {
		if (((J_EAProfile) j_ea).energyCarrier== OL_EnergyCarriers.HEAT) {
			((J_EAProfile) j_ea).resetEnergyProfile();
			((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
		}
	}
}

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>0</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>-50</MinValue>
													<MaxValue>50</MaxValue>
													<Step>5</Step>
													<LinkTo>false</LinkTo>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446065869</Id>
												<Name>text195</Name>
												<X>-170</X>
												<Y>-125</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Besparing warmte</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446065871</Id>
												<Name>t_heatDemandReductionCompanies</Name>
												<X>35</X>
												<Y>-125</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0%</Text>
												<TextCode>sl_heatDemandCompanyReduction.getIntValue() + "%"</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
										</Presentation>
									</Group>
									<Text>
										<Id>1713446065985</Id>
										<Name>txt_elektriciteit</Name>
										<X>-240</X>
										<Y>-68</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elektriciteit</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>22</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1713446438059</Id>
										<Name>txt_mobiliteit</Name>
										<X>-240</X>
										<Y>166</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Transport</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>22</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1713446065961</Id>
										<Name>t_electricityDemandReductionCompany</Name>
										<X>-85</X>
										<Y>-24</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0%</Text>
										<TextCode>sl_electricityDemandCompanyReduction.getIntValue() + "%"
</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1713446065963</Id>
										<Name>sl_electricityDemandCompanyReduction</Name>
										<X>-58</X>
										<Y>-29</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>double newElectricityDemandReduction_pct = sl_electricityDemandCompanyReduction.getValue();
double consumptionScaling_fr = 1  - newElectricityDemandReduction_pct/100;

for (J_EA j_ea : c_ownedGridConnections.get(v_currentSelectedGCnr).c_energyAssets) {
	if (j_ea instanceof J_EAConsumption) {
		if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND) {
			((J_EAConsumption)j_ea).setConsumptionScaling_fr(consumptionScaling_fr);
		}
	}
	if (j_ea instanceof J_EAProfile) {
		if (((J_EAProfile) j_ea).energyCarrier  == OL_EnergyCarriers.ELECTRICITY) {
			((J_EAProfile) j_ea).resetEnergyProfile();
			((J_EAProfile) j_ea).scaleEnergyProfile(consumptionScaling_fr);
		}
	}
}

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>-50</MinValue>
											<MaxValue>50</MaxValue>
											<Step>5</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1713446065965</Id>
										<Name>text279</Name>
										<X>-290</X>
										<Y>-24</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Besparing elektriciteit</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Group>
										<Id>1713447888398</Id>
										<Name>gr_companyMobilitySliders</Name>
										<X>-120</X>
										<Y>360</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446839189</Id>
												<Name>sl_electricVansCompany</Name>
												<X>62</X>
												<Y>-3</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setElectricVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.ELECTRIC_VAN, (int)sl_electricVansCompany.getValue());

//Update the other two sliders aswell
sl_hydrogenVansCompany.setValue(v_nbHydrogenVans, false);
sl_dieselVansCompany.setValue(v_nbDieselVans, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbEVVans</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minEVVanSlider</MinValue>
													<MaxValue>v_maxEVVanSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbEVVans</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446839191</Id>
												<Name>text266</Name>
												<X>-170</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Elektrisch</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446839193</Id>
												<Name>t_numberOfElectricVansCompany</Name>
												<X>35</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_electricVansCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446839195</Id>
												<Name>sl_hydrogenVansCompany</Name>
												<X>62</X>
												<Y>22</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setHydrogenVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.HYDROGEN_VAN, (int)sl_hydrogenVansCompany.getValue());

//Update the other two sliders aswell
sl_electricVansCompany.setValue(v_nbEVVans, false);
sl_dieselVansCompany.setValue(v_nbDieselVans, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbHydrogenVans</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minHydrogenVanSlider</MinValue>
													<MaxValue>v_maxHydrogenVanSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbHydrogenVans</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446839197</Id>
												<Name>text271</Name>
												<X>-170</X>
												<Y>25</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Waterstof</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446839199</Id>
												<Name>t_numberOfHydrogenVansCompany</Name>
												<X>35</X>
												<Y>25</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_hydrogenVansCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446839201</Id>
												<Name>sl_dieselVansCompany</Name>
												<X>62</X>
												<Y>47</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setDieselVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.DIESEL_VAN, (int)sl_dieselVansCompany.getValue());

//Update the other two sliders aswell
sl_electricVansCompany.setValue(v_nbEVVans, false);
sl_hydrogenVansCompany.setValue(v_nbHydrogenVans, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbDieselVans</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minDieselVanSlider</MinValue>
													<MaxValue>v_maxDieselVanSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbDieselVans</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446839203</Id>
												<Name>text285</Name>
												<X>-170</X>
												<Y>50</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Fossiele brandstof</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446839205</Id>
												<Name>t_numberOfDieselVansCompany</Name>
												<X>35</X>
												<Y>50</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_dieselVansCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Text>
												<Id>1713446839207</Id>
												<Name>text274</Name>
												<X>-170</X>
												<Y>-25</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Busjes</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>1</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446857516</Id>
												<Name>t_numberOfDieselTrucksCompany</Name>
												<X>35</X>
												<Y>145</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_dieselTrucksCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Text>
												<Id>1713446857518</Id>
												<Name>t_numberOfHydrogenTrucksCompany</Name>
												<X>35</X>
												<Y>120</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_hydrogenTrucksCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Text>
												<Id>1713446857520</Id>
												<Name>text272</Name>
												<X>-170</X>
												<Y>120</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Waterstof</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446857522</Id>
												<Name>text286</Name>
												<X>-170</X>
												<Y>145</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Fossiele brandstof</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446857524</Id>
												<Name>text268</Name>
												<X>-170</X>
												<Y>95</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Elektrisch</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446857528</Id>
												<Name>text275</Name>
												<X>-170</X>
												<Y>70</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Trucks</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>1</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446857530</Id>
												<Name>sl_hydrogenTrucksCompany</Name>
												<X>62</X>
												<Y>117</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setHydrogenVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.HYDROGEN_TRUCK, (int)sl_hydrogenTrucksCompany.getValue());

//Update the other two sliders aswell
sl_electricTrucksCompany.setValue(v_nbEVTrucks, false);
sl_dieselTrucksCompany.setValue(v_nbDieselTrucks, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbHydrogenTrucks</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minHydrogenTruckSlider</MinValue>
													<MaxValue>v_maxHydrogenTruckSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbHydrogenTrucks</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446857532</Id>
												<Name>t_numberOfElectricTrucksCompany</Name>
												<X>35</X>
												<Y>95</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_electricTrucksCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446857534</Id>
												<Name>sl_electricTrucksCompany</Name>
												<X>62</X>
												<Y>92</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setElectricVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.ELECTRIC_TRUCK, (int)sl_electricTrucksCompany.getValue());

//Update the other two sliders aswell
sl_hydrogenTrucksCompany.setValue(v_nbHydrogenTrucks, false);
sl_dieselTrucksCompany.setValue(v_nbDieselTrucks, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbEVTrucks</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minEVTruckSlider</MinValue>
													<MaxValue>v_maxEVTruckSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbEVTrucks</Link>
												</ExtendedProperties>
											</Control>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446857526</Id>
												<Name>sl_dieselTrucksCompany</Name>
												<X>62</X>
												<Y>142</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setDieselVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.DIESEL_TRUCK, (int)sl_dieselTrucksCompany.getValue());

//Update the other two sliders aswell
sl_electricTrucksCompany.setValue(v_nbEVTrucks, false);
sl_hydrogenTrucksCompany.setValue(v_nbHydrogenTrucks, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbDieselTrucks</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minDieselTruckSlider</MinValue>
													<MaxValue>v_maxDieselTruckSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbDieselTrucks</Link>
												</ExtendedProperties>
											</Control>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446065901</Id>
												<Name>sl_electricCarsCompany</Name>
												<X>62</X>
												<Y>-103</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setElectricVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.ELECTRIC_VEHICLE, (int)sl_electricCarsCompany.getValue());

//Update the other two sliders aswell
sl_hydrogenCarsCompany.setValue(v_nbHydrogenCars, false);
sl_dieselCarsCompany.setValue(v_nbDieselCars, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbEVCars</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minEVCarSlider</MinValue>
													<MaxValue>v_maxEVCarSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbEVCars</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446065907</Id>
												<Name>text265</Name>
												<X>-170</X>
												<Y>-100</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Elektrisch</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446065909</Id>
												<Name>t_numberOfElectricCarsCompany</Name>
												<X>35</X>
												<Y>-100</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_electricCarsCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Text>
												<Id>1713446065917</Id>
												<Name>text267</Name>
												<X>-170</X>
												<Y>-155</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Besparing transport</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446065919</Id>
												<Name>sl_mobilityDemandCompanyReduction</Name>
												<X>62</X>
												<Y>-160</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>c_ownedGridConnections.get(v_currentSelectedGCnr).c_tripTrackers.forEach(tt -&gt; tt.distanceScaling_fr = 1-sl_mobilityDemandCompanyReduction.getValue()/100);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>0</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>-50</MinValue>
													<MaxValue>50</MaxValue>
													<Step>5</Step>
													<LinkTo>false</LinkTo>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446065921</Id>
												<Name>t_mobilityDemandReductionCompany</Name>
												<X>35</X>
												<Y>-155</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0%</Text>
												<TextCode>sl_mobilityDemandCompanyReduction.getIntValue() + "%"</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446065923</Id>
												<Name>sl_hydrogenCarsCompany</Name>
												<X>62</X>
												<Y>-78</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setHydrogenVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.HYDROGEN_VEHICLE, (int)sl_hydrogenCarsCompany.getValue());

//Update the other two sliders aswell
sl_electricCarsCompany.setValue(v_nbEVCars, false);
sl_dieselCarsCompany.setValue(v_nbDieselCars, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbHydrogenCars</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minHydrogenCarSlider</MinValue>
													<MaxValue>v_maxHydrogenCarSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbHydrogenCars</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446065925</Id>
												<Name>text270</Name>
												<X>-170</X>
												<Y>-75</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Waterstof</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446065927</Id>
												<Name>t_numberOfHydrogenCarsCompany</Name>
												<X>35</X>
												<Y>-75</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_hydrogenCarsCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Control Type="Slider">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713446065933</Id>
												<Name>sl_dieselCarsCompany</Name>
												<X>62</X>
												<Y>-54</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="100" Height="30">
													<EmbeddedIcon>false</EmbeddedIcon>
													<Enabled>true</Enabled>
													<ActionCode>//Slider function
f_setDieselVehicleSliders(c_ownedGridConnections.get(v_currentSelectedGCnr), OL_EnergyAssetType.DIESEL_VEHICLE, (int)sl_dieselCarsCompany.getValue());

//Update the other two sliders aswell
sl_electricCarsCompany.setValue(v_nbEVCars, false);
sl_hydrogenCarsCompany.setValue(v_nbHydrogenCars, false);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<DefaultValueCode>v_nbDieselCars</DefaultValueCode>
													<Orientation>HORIZONTAL</Orientation>
													<MinValue>v_minDieselCarSlider</MinValue>
													<MaxValue>v_maxDieselCarSlider</MaxValue>
													<Step>1</Step>
													<LinkTo>false</LinkTo>
													<Link>v_nbDieselCars</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713446065935</Id>
												<Name>text284</Name>
												<X>-170</X>
												<Y>-50</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Fossiele brandstof</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1713446065937</Id>
												<Name>t_numberOfDieselCarsCompany</Name>
												<X>35</X>
												<Y>-50</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0</Text>
												<TextCode>sl_dieselCarsCompany.getIntValue()</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>RIGHT</Alignment>
											</Text>
											<Text>
												<Id>1713446065939</Id>
												<Name>text273</Name>
												<X>-170</X>
												<Y>-125</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Autos</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>1</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
										</Presentation>
									</Group>
									<Group>
										<Id>1713547081193</Id>
										<Name>gr_selectedGC</Name>
										<X>-60</X>
										<Y>-290</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>c_ownedGridConnections.size()&gt;1 &amp;&amp; c_ownedGridConnections.get(0).v_isActive &amp;&amp; c_ownedGridConnections.get(1).v_isActive</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Control Type="ComboBox">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1713544148158</Id>
												<Name>GCnr_selection</Name>
												<X>50</X>
												<Y>-10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="50" Height="20">
													<EmbeddedIcon>false</EmbeddedIcon>
													<FillColor>-1</FillColor>
													<TextColor>-16777216</TextColor>
													<Enabled>true</Enabled>
													<ActionCode>if(c_ownedGridConnections.size()&gt;1){
	f_setSelectedGC();
}</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<Font Name="Dialog" Size="11" Style="0"/>
													<Editable>false</Editable>
													<Button>0</Button>
													<Button>1</Button>
													<LinkTo>true</LinkTo>
													<Link>v_currentSelectedGCnr</Link>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1713547027389</Id>
												<Name>text9</Name>
												<X>-119</X>
												<Y>-8</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Geselecteerde Aansluiting:</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>1</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
										</Presentation>
									</Group>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1713963799790</Id>
										<Name>sl_batteryCompany</Name>
										<X>-58</X>
										<Y>61</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//traceln("Slider werkt nog niet volledig!!, batterij sturing werkt nog niet goed");
f_setBattery(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_batteryCompany.getValue());

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_defaultBatSlider</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>v_minBatSlider</MinValue>
											<MaxValue>v_maxBatSlider</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1713963799825</Id>
										<Name>t_batteryCompany</Name>
										<X>-85</X>
										<Y>66</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kWh</Text>
										<TextCode>sl_batteryCompany.getIntValue() + " kWh"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Text>
										<Id>1713963799827</Id>
										<Name>text283</Name>
										<X>-290</X>
										<Y>66</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Batterij capaciteit</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Group>
										<Id>1715084970828</Id>
										<Name>g_energyDemandSettings</Name>
										<X>280</X>
										<Y>-100</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Group>
												<Id>1715084970830</Id>
												<Name>gr_electricityButton1</Name>
												<X>-560</X>
												<Y>42</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Oval>
														<Id>1715084970832</Id>
														<Name>ovalElectricityButton1</Name>
														<X>0</X>
														<Y>0</Y>
														<Label>
															<X>0</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>2</LineWidth>
														<LineColor>-657931</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<RadiusX>20</RadiusX>
														<RadiusY>40</RadiusY>
														<Rotation>0.0</Rotation>
														<FillColor>-32</FillColor>
														<FillMaterial>null</FillMaterial>
													</Oval>
													<Image>
														<Id>1715084970834</Id>
														<Name>image4</Name>
														<X>-14</X>
														<Y>-12</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Width>28</Width>
														<Height>24</Height>
														<Rotation>0.0</Rotation>
														<ImageFiles>
															<ImageResourceReference>
															 <PackageName>zerointerfaceloader</PackageName>
															 <ClassName>noun-electricity-3408805.png</ClassName>
															</ImageResourceReference>
														</ImageFiles>
														<OriginalSize>false</OriginalSize>
													</Image>
												</Presentation>
											</Group>
											<Group>
												<Id>1715084970836</Id>
												<Name>gr_heatButton1</Name>
												<X>-560</X>
												<Y>-160</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Oval>
														<Id>1715084970838</Id>
														<Name>ovalHeatButton1</Name>
														<X>0</X>
														<Y>0</Y>
														<Label>
															<X>0</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>2</LineWidth>
														<LineColor>-657931</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<RadiusX>20</RadiusX>
														<RadiusY>40</RadiusY>
														<Rotation>0.0</Rotation>
														<FillColor>-6943</FillColor>
														<FillMaterial>null</FillMaterial>
													</Oval>
													<Image>
														<Id>1715084970840</Id>
														<Name>image11</Name>
														<X>-14</X>
														<Y>-12</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Width>28</Width>
														<Height>24</Height>
														<Rotation>0.0</Rotation>
														<ImageFiles>
															<ImageResourceReference>
															 <PackageName>zerointerfaceloader</PackageName>
															 <ClassName>noun-fire-2429630.png</ClassName>
															</ImageResourceReference>
														</ImageFiles>
														<OriginalSize>false</OriginalSize>
													</Image>
												</Presentation>
											</Group>
											<Group>
												<Id>1715084970842</Id>
												<Name>gr_transportButton1</Name>
												<X>-560</X>
												<Y>276</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Oval>
														<Id>1715084970844</Id>
														<Name>ovalTransportButton1</Name>
														<X>0</X>
														<Y>0</Y>
														<Label>
															<X>0</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>2</LineWidth>
														<LineColor>-657931</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<RadiusX>20</RadiusX>
														<RadiusY>40</RadiusY>
														<Rotation>0.0</Rotation>
														<FillColor>-2625550</FillColor>
														<FillMaterial>null</FillMaterial>
													</Oval>
													<Image>
														<Id>1715084970846</Id>
														<Name>image16</Name>
														<X>-14</X>
														<Y>-12</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Width>28</Width>
														<Height>24</Height>
														<Rotation>0.0</Rotation>
														<ImageFiles>
															<ImageResourceReference>
															 <PackageName>zerointerfaceloader</PackageName>
															 <ClassName>noun-car-1777731.png</ClassName>
															</ImageResourceReference>
														</ImageFiles>
														<OriginalSize>false</OriginalSize>
													</Image>
												</Presentation>
											</Group>
										</Presentation>
									</Group>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1715093089631</Id>
										<Name>rb_heatingTypePrivateUI</Name>
										<X>-290</X>
										<Y>-206</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="180" Height="121">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>if (!rb_heatingTypePrivateUI.isEnabled()){// check if disabled, if so, skip when called
	return;
}

//Convert radiobutton integer to OL type
OL_GridConnectionHeatingType selectedHeatingType;
switch (rb_heatingTypePrivateUI.getValue()){
	case 0:
		selectedHeatingType = OL_GridConnectionHeatingType.GASBURNER;
	break;
	case 1:
		selectedHeatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;
	break;
	case 2:
		selectedHeatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;
	break;
	case 3:
		selectedHeatingType = OL_GridConnectionHeatingType.DISTRICTHEAT;
		//selectedHeatingType = OL_GridConnectionHeatingType.HYDROGENBURNER;
	break;
	case 4:
		selectedHeatingType = OL_GridConnectionHeatingType.GASFIRED_CHPPEAK;
	break;
	default:
		selectedHeatingType = OL_GridConnectionHeatingType.NONE;
}


//Radio button function
f_setHeatingType(c_ownedGridConnections.get(v_currentSelectedGCnr), selectedHeatingType);

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="12" Style="0"/>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>HR ketel aardgas</Button>
											<Button>Hybride warmtepomp</Button>
											<Button>Elek. warmtepomp</Button>
											<Button>Warmtenet</Button>
											<Button>Gas WKK</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1725618990626</Id>
										<Name>t_rooftopSolarCompany</Name>
										<X>-85</X>
										<Y>96</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kW</Text>
										<TextCode>sl_rooftopPVCompany.getIntValue() + " kW"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1725618990628</Id>
										<Name>sl_rooftopPVCompany</Name>
										<X>-58</X>
										<Y>91</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setPVSystem(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_rooftopPVCompany.getValue());

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_defaultPVSlider</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>v_minPVSlider</MinValue>
											<MaxValue>v_maxPVSlider</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1725618990630</Id>
										<Name>txt_PVPower</Name>
										<X>-290</X>
										<Y>96</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>PV vermogen</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1727796446739</Id>
										<Name>t_GCCapacityCompany_Feedin</Name>
										<X>-85</X>
										<Y>36</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kW</Text>
										<TextCode>sl_GCCapacityCompany_Feedin.getIntValue() + " kW"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1727796446741</Id>
										<Name>sl_GCCapacityCompany_Feedin</Name>
										<X>-58</X>
										<Y>31</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>f_setGCCapacity(c_ownedGridConnections.get(v_currentSelectedGCnr), sl_GCCapacityCompany_Feedin.getValue(), "FEEDIN");

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_defaultGCCapacitySlider_Feedin</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>v_minGCCapacitySlider_Feedin</MinValue>
											<MaxValue>v_maxGCCapacitySlider_Feedin</MaxValue>
											<Step>1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1727796446743</Id>
										<Name>txt_GCCapacityCompany_Feedin</Name>
										<X>-290</X>
										<Y>36</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Contr. capaciteit (te.)</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1708523022017</Id>
								<Name>button</Name>
								<X>1670</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="230" Height="50">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>zero_Interface.uI_Results.getCheckbox_KPISummary().setSelected(false, true);

zero_Interface.va_Interface.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="14" Style="0"/>
									<LabelText>Terug naar hoofdscherm</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1717514421993</Id>
								<Name>txt_setSlidersToSelectedGC</Name>
								<X>-440</X>
								<Y>230</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Set Sliders to selected GC</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1725365029204</Id>
								<Name>gr_companyDetails</Name>
								<X>1140</X>
								<Y>80</Y>
								<Label>
									<X>11.669</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<RoundedRectangle>
										<Id>1725366551214</Id>
										<Name>roundRect_companyName</Name>
										<X>-298</X>
										<Y>-59.512</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_companyUILineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>596</Width>
										<Height>119.024</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1708611721668</Id>
										<Name>t_companyName</Name>
										<X>0</X>
										<Y>-46.34</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Company Name</Text>
										<TextCode>p_companyName</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>48</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1708611716618</Id>
										<Name>t_GCadress</Name>
										<X>0</X>
										<Y>23.17</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Adress</Text>
										<TextCode>v_adressGC</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>20</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<EmbeddedObjectPresentation>
								<Id>1714652081119</Id>
								<Name>uI_Results_presentation</Name>
								<X>380</X>
								<Y>220</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
								<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
								<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
								<Latitude>0.0</Latitude>
								<Longitude>0.0</Longitude>
							</EmbeddedObjectPresentation>
							<Rectangle>
								<Id>1725381132369</Id>
								<Name>mask_resultsUI1</Name>
								<X>370</X>
								<Y>60</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-1</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>470</Width>
								<Height>110</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1725381214835</Id>
								<Name>mask_resultsUI2</Name>
								<X>845</X>
								<Y>270</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-1</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>2495</Width>
								<Height>700</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Group>
								<Id>1725382426671</Id>
								<Name>gr_chartNameLeft</Name>
								<X>610</X>
								<Y>200</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1725381345763</Id>
										<Name>rect_chartNameLeft</Name>
										<X>-230</X>
										<Y>-30</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>460</Width>
										<Height>50</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_chartBackgroundColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1725382366046</Id>
										<Name>txt_chartNameLeft</Name>
										<X>0</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Profielen</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>24</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1725382459577</Id>
								<Name>gr_chartNameMiddle</Name>
								<X>1140</X>
								<Y>200</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1725382459579</Id>
										<Name>rect_chartNameMiddle</Name>
										<X>-230</X>
										<Y>-30</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>460</Width>
										<Height>50</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_chartBackgroundColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1725382459581</Id>
										<Name>txt_chartNameMiddle</Name>
										<X>0</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Opwek/verbruik diagram</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>24</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1725382464651</Id>
								<Name>gr_chartNameRight</Name>
								<X>1670</X>
								<Y>200</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1725382464653</Id>
										<Name>rect_chartNameRight</Name>
										<X>-230</X>
										<Y>-30</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>460</Width>
										<Height>50</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_chartBackgroundColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1725382464655</Id>
										<Name>txt_chartNameRight</Name>
										<X>0</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Energiestromen</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>24</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1725606178083</Id>
								<Name>gr_simulateYearScreen</Name>
								<X>1375</X>
								<Y>540</Y>
								<Label>
									<X>22.522</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1725608394737</Id>
										<Name>rect_simulateYearScreen1</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>-995</X>
										<Y>-320</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>!uI_Results.b_showKPISummary</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-369756683</LineColor>
										<LineColorCode>v_loadScreenColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>530</Width>
										<Height>45</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-369756683</FillColor>
										<FillColorCode>v_loadScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1725606178085</Id>
										<Name>rect_simulateYearScreen2</Name>
										<X>-535</X>
										<Y>-320</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-6943</LineColor>
										<LineColorCode>v_companyUIBackgroundColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1060</Width>
										<Height>750</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_companyUIBackgroundColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Group>
										<Id>1725606178087</Id>
										<Name>gr_simulateYearToCalculateKPIs</Name>
										<X>-35</X>
										<Y>40</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>//Set correct overlay
gr_simulateYearScreen.setVisible(false);		
gr_loadIcon.setVisible(true);
		

//Run simulation
new Thread( () -&gt; {	
	zero_Interface.energyModel.f_runRapidSimulation();
	zero_Interface.uI_Results.f_updateResultsUI(zero_Interface.energyModel);
	f_setSelectedGCGraphs();
	gr_loadIcon.setVisible(false);
	
	//Update and show kpi summary chart after run
	if(zero_Interface.settings.showKPISummary() != null &amp;&amp; zero_Interface.settings.showKPISummary()){
		uI_Results.getCheckbox_KPISummary().setSelected(true, true);
	}
	
	//Update results up to date boolean
	uI_Results.f_enableNonLivePlotRadioButtons(true);
	zero_Interface.b_resultsUpToDate = true;
	zero_Interface.gr_simulateYearScreenSmall.setVisible(false);
	zero_Interface.uI_Results.f_enableNonLivePlotRadioButtons(true);
	
}).start();



</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Text>
												<Id>1725606178089</Id>
												<Name>t_simulateYearToCalculateCostsSmall</Name>
												<X>-140</X>
												<Y>-40</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Simuleer jaar voor KPI's</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>28</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Image>
												<Id>1725606178091</Id>
												<Name>image_simulateYearToCalculateCostsSmall</Name>
												<X>-420</X>
												<Y>-70</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>102.315</Width>
												<Height>99.723</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_greater_than.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Group>
								<Id>1725606178111</Id>
								<Name>gr_loadIcon</Name>
								<X>2360</X>
								<Y>280</Y>
								<Label>
									<X>10.169</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1725606813428</Id>
										<Name>rect_loadIcon2</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>-1980</X>
										<Y>-60</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>!uI_Results.b_showKPISummary</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-369756683</LineColor>
										<LineColorCode>v_loadScreenColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>530</Width>
										<Height>45</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-369756683</FillColor>
										<FillColorCode>v_loadScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1725606178113</Id>
										<Name>rect_loadIcon</Name>
										<X>-1520</X>
										<Y>-60.969</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-369756683</LineColor>
										<LineColorCode>v_loadScreenColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1060</Width>
										<Height>750.969</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-369756683</FillColor>
										<FillColorCode>v_loadScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1729516584700</Id>
										<Name>rect_GCisPausedScreen3</Name>
										<X>-1980</X>
										<Y>-60</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>!c_ownedGridConnections.get(v_currentSelectedGCnr).v_isActive</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-6943</LineColor>
										<LineColorCode>v_companyUIBackgroundColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>460</Width>
										<Height>750</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_companyUIBackgroundColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Group>
										<Id>1725606744485</Id>
										<Name>gr_loadIconText</Name>
										<X>-1220</X>
										<Y>280</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Image>
												<Id>1725606744487</Id>
												<Name>image_loadIconSmall</Name>
												<X>-27.610999999999876</X>
												<Y>-5.4780000000000655</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>61.016</Width>
												<Height>60.969</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_loading.gif</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
											<Text>
												<Id>1725606744489</Id>
												<Name>t_loadIconSmall</Name>
												<X>2.8969999999999345</X>
												<Y>-55.96199999999999</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Jaar wordt gesimuleerd </Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>28</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Text>
								<Id>1727797637172</Id>
								<Name>txt_curtailmentDescriptionCompany</Name>
								<X>20</X>
								<Y>571</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Curtailment opwek</Text>
								<Font>
									<Name>Dialog</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="CheckBox">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1727797637174</Id>
								<Name>cb_curtailmentCompany</Name>
								<X>291</X>
								<Y>564</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="20" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>if (cb_curtailmentCompany.isSelected()) {
	c_ownedGridConnections.get(v_currentSelectedGCnr).v_enableCurtailment = true;
}
else {
	c_ownedGridConnections.get(v_currentSelectedGCnr).v_enableCurtailment = false;
}

//Set scenario to custom
f_setScenario(2);

// Simulate Year screen
f_setSimulateYearScreen();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText/>
									<LinkTo>false</LinkTo>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1727883464770</Id>
								<Name>txt_nfatoValues</Name>
								<X>-450</X>
								<Y>740</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>NF ATO values</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1727939194812</Id>
								<Name>gr_TableConnectionCapacity</Name>
								<X>565</X>
								<Y>80</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1727939194814</Id>
										<Name>rect_table_GridconnectionCapacaties</Name>
										<X>-185</X>
										<Y>-60</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_companyUILineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>380</Width>
										<Height>120</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1727939194816</Id>
										<Name>txt_additionalGCCapacityInfo</Name>
										<X>-178</X>
										<Y>-51</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Aansluitings capaciteit type</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>16</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1727939194818</Id>
										<Name>text1</Name>
										<X>-175</X>
										<Y>-17</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Fysieke capaciteit</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1727939194820</Id>
										<Name>text2</Name>
										<X>-175</X>
										<Y>8</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Contract capaciteit afname</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1727939194822</Id>
										<Name>text3</Name>
										<X>-175</X>
										<Y>33</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Contract capaciteit teruglevering</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1727939194824</Id>
										<Name>t_GCCapacityCompany_delivery2</Name>
										<X>152</X>
										<Y>8</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kW</Text>
										<TextCode>t_GCCapacityCompany.getText()</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1727939194826</Id>
										<Name>t_GCCapacityCompany_Feedin_2</Name>
										<X>152</X>
										<Y>33</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kW</Text>
										<TextCode>t_GCCapacityCompany_Feedin.getText()</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1727939194828</Id>
										<Name>t_GCCapacityCompany_physical</Name>
										<X>152</X>
										<Y>-17</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0 kW</Text>
										<TextCode>roundToInt(v_physicalConnectionCapacity_kW) + " kW"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Line>
										<Id>1727939194830</Id>
										<Name>line_table_ConnectionCapacityInfo_1</Name>
										<X>41</X>
										<Y>-60</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_companyUILineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>0</Dx>
										<Dy>120</Dy>
										<Dz>0</Dz>
									</Line>
									<Text>
										<Id>1727939194832</Id>
										<Name>txt_table_ConnectionCapacityInfo_owned</Name>
										<X>152</X>
										<Y>-51</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Capaciteit</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>16</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Line>
										<Id>1727939194834</Id>
										<Name>line_table_ConnectionCapacityInfo_3</Name>
										<X>-185</X>
										<Y>-25</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_companyUILineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>380</Dx>
										<Dy>0</Dy>
										<Dz>0</Dz>
									</Line>
									<Group>
										<Id>1727939206993</Id>
										<Name>gr_table_nfato</Name>
										<X>225</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_NFATO_active



</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1727939206995</Id>
												<Name>rect_Table_NFATO</Name>
												<X>-30</X>
												<Y>-60</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>2</LineWidth>
												<LineWidthCode>v_companyUILineWidth</LineWidthCode>
												<LineColor>-16777216</LineColor>
												<LineColorCode>v_companyUILineColor</LineColorCode>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>65</Width>
												<Height>120</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1727939206997</Id>
												<Name>txt_table_ConnectionCapacityInfo_nfato</Name>
												<X>3</X>
												<Y>-51</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>NF ATO</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>16</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Text>
												<Id>1727939206999</Id>
												<Name>t_GCCapacityCompany_delivery_nfato</Name>
												<X>0.5</X>
												<Y>8</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0 kW</Text>
												<TextCode>roundToInt(v_NFATO_kW_delivery) + " kW"</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Text>
												<Id>1727939207001</Id>
												<Name>t_GCCapacityCompany_Feedin_nfato</Name>
												<X>0.5</X>
												<Y>33</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>0 kW</Text>
												<TextCode>roundToInt(v_NFATO_kW_feedin) + " kW"</TextCode>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Text>
												<Id>1727939207003</Id>
												<Name>t_GCCapacityCompany_physical_nfato</Name>
												<X>0.5</X>
												<Y>-17</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>---</Text>
												<Font>
													<Name>Dialog</Name>
													<Size>14</Size>
													<Style>0</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Line>
												<Id>1727939207005</Id>
												<Name>line_table_ConnectionCapacityInfo_NFATO</Name>
												<X>-30</X>
												<Y>-25</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>2</LineWidth>
												<LineWidthCode>v_companyUILineWidth</LineWidthCode>
												<LineColor>-16777216</LineColor>
												<LineColorCode>v_companyUILineColor</LineColorCode>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>65</Dx>
												<Dy>0</Dy>
												<Dz>0</Dz>
											</Line>
										</Presentation>
									</Group>
									<Line>
										<Id>1744645098225</Id>
										<Name>line_table_ConnectionCapacityInfo_2</Name>
										<X>109</X>
										<Y>-60</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_companyUILineWidth</LineWidthCode>
										<LineColor>-16777216</LineColor>
										<LineColorCode>v_companyUILineColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>0</Dx>
										<Dy>120</Dy>
										<Dz>0</Dz>
									</Line>
									<Text>
										<Id>1744645140831</Id>
										<Name>txt_table_ConnectionCapacityInfo_known</Name>
										<X>75</X>
										<Y>-51</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Status</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>16</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1744645285983</Id>
										<Name>t_GCCapacityCompany_delivery3</Name>
										<X>75</X>
										<Y>8</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Custom</Text>
										<TextCode>c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractDeliveryCapacity_kW() != sl_GCCapacityCompany.getValue() ? "Custom" :
c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.contractedDeliveryCapacityKnown ? "Bekend" : "Geschat"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1744645285985</Id>
										<Name>t_GCCapacityCompany_Feedin_3</Name>
										<X>75</X>
										<Y>33</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Geschat</Text>
										<TextCode>c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentContractFeedinCapacity_kW() != sl_GCCapacityCompany_Feedin.getValue() ? "Custom" :
c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.contractedFeedinCapacityKnown ? "Bekend" : "Geschat"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1744645285987</Id>
										<Name>t_GCCapacityCompany_physical1</Name>
										<X>75</X>
										<Y>-17</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Bekend</Text>
										<TextCode>c_scenarioSettings_Current.get(v_currentSelectedGCnr).getCurrentPhysicalConnectionCapacity_kW() != v_physicalConnectionCapacity_kW ? "Custom" :
c_ownedGridConnections.get(v_currentSelectedGCnr).v_liveConnectionMetaData.physicalCapacityKnown ? "Bekend" : "Geschat"</TextCode>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1729511748859</Id>
								<Name>gr_GCisPausedScreen</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>4480</X>
								<Y>920</Y>
								<Label>
									<X>22.522</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>1375</XCode>
								<YCode>540</YCode>
								<VisibleCode>!c_ownedGridConnections.get(v_currentSelectedGCnr).v_isActive</VisibleCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1729511748861</Id>
										<Name>rect_GCisPausedScreen</Name>
										<X>-995</X>
										<Y>-320</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-369756683</LineColor>
										<LineColorCode>v_loadScreenColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>530</Width>
										<Height>740</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-369756683</FillColor>
										<FillColorCode>v_loadScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1729511748863</Id>
										<Name>rect_GCisPausedScreen2</Name>
										<X>-535</X>
										<Y>-320</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineWidthCode>v_chartLineWidth+0.5</LineWidthCode>
										<LineColor>-6943</LineColor>
										<LineColorCode>v_companyUIBackgroundColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1060</Width>
										<Height>740</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_companyUIBackgroundColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Group>
										<Id>1729511748865</Id>
										<Name>gr_GCisPausedScreenText</Name>
										<X>-35</X>
										<Y>40</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>//Set correct overlay
gr_simulateYearScreen.setVisible(false);		
gr_loadIcon.setVisible(true);

//Unpause gc
c_ownedGridConnections.get(v_currentSelectedGCnr).f_setActive(true);

//Select unpaused GC
zero_Interface.f_selectBuilding(c_ownedGridConnections.get(v_currentSelectedGCnr).c_connectedGISObjects.get(0), c_ownedGridConnections.get(v_currentSelectedGCnr).c_connectedGISObjects);
f_copyResultsUI();
uI_Results.f_setAllCharts();
		

//Run simulation
new Thread( () -&gt; {	
	//Save previous totals
	zero_Interface.f_updatePreviousTotalsGC();

	zero_Interface.energyModel.f_runRapidSimulation();
	zero_Interface.f_updateUIresultsMainArea();
	f_setSelectedGCGraphs();
	gr_loadIcon.setVisible(false);
	
	//Update and show kpi summary chart after run
	//uI_Results.chartKPISummary.f_setKPISummaryChart();
	
	//Update and show kpi summary chart after run
	if(zero_Interface.settings.showKPISummary() != null &amp;&amp; zero_Interface.settings.showKPISummary()){
		uI_Results.getCheckbox_KPISummary().setSelected(true, true);
	}
	
}).start();


//Update results up to date boolean
zero_Interface.b_resultsUpToDate = true;
</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Text>
												<Id>1729511748867</Id>
												<Name>t_GCisPausedScreen</Name>
												<X>-140</X>
												<Y>-80</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Onpauzeer aansluiting
en 
simuleer jaar voor KPI's</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>28</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Image>
												<Id>1729511748869</Id>
												<Name>image_simulateYearToCalculateCostsSmall1</Name>
												<X>-420</X>
												<Y>-70</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>102.315</Width>
												<Height>99.723</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_greater_than.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
									<Text>
										<Id>1729511999717</Id>
										<Name>txt_GCisPaused</Name>
										<X>-235</X>
										<Y>-230</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Aansluiting is gepauzeerd!</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>72</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Control Type="CheckBox">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1740047018374</Id>
								<Name>cb_showGridloadPlot</Name>
								<X>1450</X>
								<Y>130</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="180" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>uI_Results.f_setChartGridLoad_Presentation(null, null, cb_showGridloadPlot.isSelected());
uI_Results.f_setChartSankey_Presentation(null, null, !cb_showGridloadPlot.isSelected());

if(cb_showGridloadPlot.isSelected()){
	txt_chartNameRight.setText("Netbelasting");
}
else{
	txt_chartNameRight.setText("Energiestromen");
}</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Toon Netbelasting duurkromme</LabelText>
									<LinkTo>false</LinkTo>
								</ExtendedProperties>
							</Control>
							<Group>
								<Id>1747234551900</Id>
								<Name>gr_heatingOptionBlockerCHP</Name>
								<X>150</X>
								<Y>350</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1747234424173</Id>
										<Name>rect_heatingOptionClickBlockerCHP</Name>
										<X>-140</X>
										<Y>-15</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>rb_heatingTypePrivateUI.isVisible()</VisibleCode>
										<OnClickCode>;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>280</Width>
										<Height>30</Height>
										<Rotation>0.0</Rotation>
										<FillColor/>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1747234398590</Id>
										<Name>rect_heatingOptionBlockerCHP</Name>
										<X>-140</X>
										<Y>-15</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>280</Width>
										<Height>30</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_companyUIBackgroundColorSliders</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
								</Presentation>
							</Group>
							<Group>
								<Id>1747316158314</Id>
								<Name>gr_errorScreen</Name>
								<X>6480</X>
								<Y>600</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>960</XCode>
								<YCode>500</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1747316158316</Id>
										<Name>rect_errorScreenGrayOut</Name>
										<X>-960</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>//traceln();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-2049715245</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1920</Width>
										<Height>980</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-2049715245</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1747316158318</Id>
										<Name>rect_errorScreenClickBlocking</Name>
										<X>-960</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>double click_block = 0;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-2049715245</LineColor>
										<LineColorCode>null</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1920</Width>
										<Height>980</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-2049715245</FillColor>
										<FillColorCode>null</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<RoundedRectangle>
										<Id>1747326072959</Id>
										<Name>rect_errorMessage</Name>
										<X>-270</X>
										<Y>-120</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>4</LineWidth>
										<LineColor>-65536</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>540</Width>
										<Height>200</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1747316158322</Id>
										<Name>t_errorMessage</Name>
										<X>0</X>
										<Y>-70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>TYPE YOUR ERROR MESSAGE HERE</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>24</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Group>
										<Id>1747316158324</Id>
										<Name>button_errorOK</Name>
										<X>0</X>
										<Y>50</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>gr_errorScreen.setVisible(false);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1747316158326</Id>
												<Name>rect_errorOK</Name>
												<X>-60</X>
												<Y>-20</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>120</Width>
												<Height>40</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1747316158328</Id>
												<Name>txt_errorOK</Name>
												<X>0</X>
												<Y>-10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Ok</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>18</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1708523262441</Id>
						<Name>va_companyUI</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title>company UI</Title>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1717506309790</Id>
				<Name>UI_Hydrogen</Name>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1717506309785</Id>
					<Name>1717506309785</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089972</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1717506309786</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1717506309821</CurrentLevel>
				<ConnectionsId>1717506309867</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1717506309811</Id>
						<Name>v_sliderStartValue_priceLimit</Name>
						<X>-930</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1717506309813</Id>
						<Name>v_sliderMinValue_balanceLimit</Name>
						<X>-930</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>-zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1717506309815</Id>
						<Name>v_sliderMaxValue_balanceLimit</Name>
						<X>-930</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>zero_Interface.energyModel.f_getGridNodesTopLevel().get(0).p_capacity_kW/1000</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1717506309817</Id>
						<Name>v_sliderStartValue_balanceLimit</Name>
						<X>-930</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1717506309819</Id>
						<Name>v_sliderStartValue_ElectrolyserP_MW</Name>
						<X>-930</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724859028571</Id>
						<Name>v_colorH2_blue</Name>
						<X>-940</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(33, 164, 195)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724859028735</Id>
						<Name>v_colorH2_green</Name>
						<X>-940</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(104, 193, 103)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724859028737</Id>
						<Name>v_colorH2_white</Name>
						<X>-940</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>white</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724860189446</Id>
						<Name>v_currentSelectedElectrolyser</Name>
						<X>-360</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724944015553</Id>
						<Name>v_currentSelectedStorage</Name>
						<X>-360</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724944025798</Id>
						<Name>v_currentSelectedFuelCell</Name>
						<X>-360</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1724921941090</Id>
						<Name>p_amountOfGISObjects</Name>
						<X>-360</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1724921941088</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1724921946872</Id>
						<Name>p_amountOfGC</Name>
						<X>-360</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1724921946870</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724859404446</Id>
						<Name>c_GISObjects_Hydrogen</Name>
						<X>-360</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724859404449</Id>
						<Name>c_gridConnections_Hydrogen</Name>
						<X>-360</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724859404455</Id>
						<Name>c_connectedGridNodes</Name>
						<X>-360</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724943470087</Id>
						<Name>c_connectionOwners_Hydrogen</Name>
						<X>-360</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>ConnectionOwner</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724943620236</Id>
						<Name>c_hydrogenStorages</Name>
						<X>-360</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAStorageGas</ElementClass>
							<ValueElementClass>J_EAConversionElectrolyser</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724943636670</Id>
						<Name>c_hydrogenElectrolysers</Name>
						<X>-360</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConversionElectrolyser</ElementClass>
							<ValueElementClass>J_EAConversionElectrolyser</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1724943685107</Id>
						<Name>c_hydrogenFuelCells</Name>
						<X>-360</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConversionFuelCell</ElementClass>
							<ValueElementClass>J_EAStorageGas</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717506309797</Id>
						<Name>f_styleHydrogenUI</Name>
						<X>-960</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717506309801</Id>
						<Name>f_initializeUIElectrolyser</Name>
						<X>-960</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>COC</Name>
							<Type>ConnectionOwner</Type>
						</Parameter>
						<Body>//Instantiate sliders &#xD;
f_instantiateSlidersElectrolyser(COC);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717506309803</Id>
						<Name>f_instantiateSlidersElectrolyser</Name>
						<X>-940</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>COC</Name>
							<Type>ConnectionOwner</Type>
						</Parameter>
						<Body>// Electrolyser Power start  value&#xD;
v_sliderStartValue_ElectrolyserP_MW = ((J_EAConversionElectrolyser)COC.f_getOwnedGridConnections().get(0).c_conversionAssets.get(0)).getInputCapacity_kW()/1000; &#xD;
sl_electrolyserPower.setValue(v_sliderStartValue_ElectrolyserP_MW, false);&#xD;
t_powerElectrolyser.setText(v_sliderStartValue_ElectrolyserP_MW + " MW");&#xD;
&#xD;
&#xD;
// Price limit start value&#xD;
v_sliderStartValue_priceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_electricityPriceMaxForProfit_eurpkWh; &#xD;
sl_electrolyserElectricityPriceLimit.setValue(v_sliderStartValue_priceLimit, false);&#xD;
t_electricityPriceLimit.setText("€" + v_sliderStartValue_priceLimit);&#xD;
&#xD;
&#xD;
//Balance limit start value&#xD;
v_sliderStartValue_balanceLimit = ((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).v_gridNodeCongestionLimit_kW; &#xD;
sl_electrolyserElectricityBalanceLimit.setValue(v_sliderStartValue_balanceLimit, false);&#xD;
t_electricityBalanceLimit.setText(v_sliderStartValue_balanceLimit + " MW");&#xD;
&#xD;
&#xD;
//Radio button balance or price mode&#xD;
int rb_value = 0;&#xD;
switch (((GCEnergyConversion)COC.f_getOwnedGridConnections().get(0)).p_electrolyserOperationMode){&#xD;
&#xD;
	case PRICE:&#xD;
		&#xD;
		rb_value = 0;&#xD;
		//Set visibility of price slider true and balance slider false&#xD;
		gr_electricityPriceSlider.setVisible(true);&#xD;
		gr_electricityBalanceSlider.setVisible(false);&#xD;
	break;&#xD;
	&#xD;
	case BALANCE:&#xD;
		rb_value = 1;&#xD;
		&#xD;
		//Set visibility of balance slider true and price slider false&#xD;
		gr_electricityBalanceSlider.setVisible(true);&#xD;
		gr_electricityPriceSlider.setVisible(false);&#xD;
	break;&#xD;
}&#xD;
rb_electrolyserMode.setValue(rb_value, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724859526072</Id>
						<Name>f_setScenarioFuture</Name>
						<X>-340</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>//Set button to custom early on, so traceln will get ignored.&#xD;
rb_scenariosPrivateUI.setValue(2, false);&#xD;
&#xD;
&#xD;
//Scenario code here&#xD;
&#xD;
&#xD;
//Reset button to current, due to sliders putting it on custom&#xD;
rb_scenariosPrivateUI.setValue(1, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724859526076</Id>
						<Name>f_setScenario</Name>
						<X>-360</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>scenario_nr</Name>
							<Type>int</Type>
						</Parameter>
						<Body>switch (scenario_nr){&#xD;
&#xD;
	case 0: // Current&#xD;
&#xD;
	break;&#xD;
	&#xD;
	case 1: // Future&#xD;
&#xD;
	break;&#xD;
	&#xD;
	case 2: // Hydrogen&#xD;
		traceln("Selected scenario: Hydrogen : DOES NOTHING YET");&#xD;
	break;&#xD;
	&#xD;
	case 3: // Custom&#xD;
&#xD;
		if(rb_scenariosPrivateUI.getValue() == 2){&#xD;
		return;&#xD;
		}&#xD;
		rb_scenariosPrivateUI.setValue(2, false);&#xD;
		traceln("Selected scenario: Custom");&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
&#xD;
}&#xD;
&#xD;
//Set 'results up to date' to false&#xD;
zero_Interface.b_resultsUpToDate = false;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724859526078</Id>
						<Name>f_setScenarioCurrent</Name>
						<X>-340</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>//Set button to custom early on, so traceln will get ignored.&#xD;
rb_scenariosPrivateUI.setValue(2, false);&#xD;
&#xD;
&#xD;
//Scenario code here&#xD;
&#xD;
&#xD;
//Reset button to current, due to sliders putting it on custom&#xD;
rb_scenariosPrivateUI.setValue(0, false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724859526080</Id>
						<Name>f_setSelectedGC</Name>
						<Description>Function that sets the sliders to match the currently present settings of the energy assets owned by the selected GC. Used when a connection owner has multiple grid connections, and wants to set the sliders of a different GC. </Description>
						<X>-360</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Initialize slider presets to selected GC (min, max, etc.)&#xD;
//f_setSliderPresets();&#xD;
&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1717506309867</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1717506328385</Id>
						<Name>zero_Interface</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1717506309821</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1725003123558</Id>
								<Name>rect_canvas</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_colorH2_blue</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>1920</Width>
								<Height>980</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_colorH2_white</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1724944453528</Id>
								<Name>rect_scenarios</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_colorH2_blue</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>370</Width>
								<Height>170</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_colorH2_white</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<TimePlot>
								<Id>1717506309825</Id>
								<Name>plot</Name>
								<X>400</X>
								<Y>280</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751013532514</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1709625600000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>540</Width>
								<Height>400</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>460</Width>
									<Height>310</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<SamplesToKeep>100</SamplesToKeep>
								<TimeWindowExpression>100</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
							</TimePlot>
							<Rectangle>
								<Id>1717506309827</Id>
								<Name>rect_sliders</Name>
								<X>0</X>
								<Y>170</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineColorCode>v_colorH2_blue</LineColorCode>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>370</Width>
								<Height>810</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillColorCode>v_colorH2_white</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1717506309829</Id>
								<Name>txt_electrolyserSliders</Name>
								<X>70</X>
								<Y>200</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electrolyser</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>22</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1717506309831</Id>
								<Name>gr_buttonH2Electrolyser</Name>
								<X>41</X>
								<Y>211</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Oval>
										<Id>1717506309833</Id>
										<Name>ovalElectrolyserButton</Name>
										<X>-1</X>
										<Y>-1</Y>
										<Label>
											<X>0</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<RadiusX>20</RadiusX>
										<RadiusY>40</RadiusY>
										<Rotation>0.0</Rotation>
										<FillColor>-14774017</FillColor>
										<FillColorCode>v_colorH2_blue</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Oval>
									<Text>
										<Id>1717506309835</Id>
										<Name>txt_h21</Name>
										<X>-10</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-1</Color>
										<Text>H2</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1717506309837</Id>
								<Name>gr_electricityPriceSlider</Name>
								<X>190</X>
								<Y>410</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1717506309839</Id>
										<Name>txt_electricityPriceLimit</Name>
										<X>-170</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Electriciteits prijs limiet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1717506309841</Id>
										<Name>sl_electrolyserElectricityPriceLimit</Name>
										<X>62</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//Adjust the maximum price of electricity used to produce hydrogen
((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_electricityPriceMaxForProfit_eurpkWh = sl_electrolyserElectricityPriceLimit.getValue();

//Set text accordingly
t_electricityPriceLimit.setText( "€" + sl_electrolyserElectricityPriceLimit.getValue());


//Set scenario to custom
f_setScenario(2);
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_sliderStartValue_priceLimit</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>0.5</MaxValue>
											<Step>0.01</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1717506309843</Id>
										<Name>t_electricityPriceLimit</Name>
										<X>40</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text> €0.00</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1717506309845</Id>
								<Name>gr_electrolyserPowerSlider</Name>
								<X>190</X>
								<Y>280</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1717506309847</Id>
										<Name>txt_powerElectrolyser</Name>
										<X>-170</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Vermogen electrolyser</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1717506309849</Id>
										<Name>sl_electrolyserPower</Name>
										<X>62</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>//Adjust the electric capacity
c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).setInputCapacity_kW(sl_electrolyserPower.getValue()*1000);// Multiplied by 1000, as the energy asset is in kW

//Adjust grid connection capacity as well (if needed)
if(sl_electrolyserPower.getValue()*1000 &gt; 2000){
	((GridConnection)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_liveConnectionMetaData.physicalCapacity_kW = sl_electrolyserPower.getValue()*1000;
	((GridConnection)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_liveConnectionMetaData.contractedDeliveryCapacity_kW = sl_electrolyserPower.getValue()*1000;
	((GridConnection)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_liveConnectionMetaData.contractedFeedinCapacity_kW = sl_electrolyserPower.getValue()*1000;
}

//Set the text accordingly
t_powerElectrolyser.setText(sl_electrolyserPower.getValue() + " MW");


//Set scenario to custom
f_setScenario(2);
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>0</MinValue>
											<MaxValue>10</MaxValue>
											<Step>0.1</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1717506309851</Id>
										<Name>t_powerElectrolyser</Name>
										<X>35</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>1.0 MW</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1717506309853</Id>
								<Name>gr_electrolyserMode</Name>
								<X>100</X>
								<Y>340</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1717506309855</Id>
										<Name>rb_electrolyserMode</Name>
										<X>-80</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="150" Height="50">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>switch (rb_electrolyserMode.getValue()){

	case 0:
		((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.PRICE;
		
		//Set visibility of price slider true and balance slider false
		gr_electricityPriceSlider.setVisible(true);
		gr_electricityBalanceSlider.setVisible(false);
	break;
	
	case 1:
		((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).p_electrolyserOperationMode = OL_ElectrolyserOperationMode.BALANCE;
		
		//Set visibility of balance slider true and price slider false
		gr_electricityBalanceSlider.setVisible(true);
		gr_electricityPriceSlider.setVisible(false);
	break;
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>Prijs</Button>
											<Button>Balans</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1717506309857</Id>
										<Name>txt_electrolyserMode</Name>
										<X>-80</X>
										<Y>-40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Electrolyser modus</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1717506309859</Id>
								<Name>gr_electricityBalanceSlider</Name>
								<X>190</X>
								<Y>450</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1717506309861</Id>
										<Name>txt_electricityBalanceLimit</Name>
										<X>-170</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Electriciteits balans limiet</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Slider">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1717506309863</Id>
										<Name>sl_electrolyserElectricityBalanceLimit</Name>
										<X>62</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="100" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<Enabled>true</Enabled>
											<ActionCode>
//Adjust the maximum price of electricity used to produce hydrogen
((GCEnergyConversion)c_hydrogenElectrolysers.get(v_currentSelectedElectrolyser).getParentAgent()).v_gridNodeCongestionLimit_kW = sl_electrolyserElectricityBalanceLimit.getValue()*1000;

//Set text accordingly
t_electricityBalanceLimit.setText( sl_electrolyserElectricityBalanceLimit.getValue() + " MW" );

//Set scenario to custom
f_setScenario(2);
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<DefaultValueCode>v_sliderStartValue_balanceLimit</DefaultValueCode>
											<Orientation>HORIZONTAL</Orientation>
											<MinValue>v_sliderMinValue_balanceLimit</MinValue>
											<MaxValue>v_sliderMaxValue_balanceLimit</MaxValue>
											<Step>0.01</Step>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1717506309865</Id>
										<Name>t_electricityBalanceLimit</Name>
										<X>50</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>0.0 MW</Text>
										<Font>
											<Name>Dialog</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>RIGHT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1724859404444</Id>
								<Name>text5</Name>
								<X>-370</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724859526068</Id>
								<Name>text7</Name>
								<X>-370</X>
								<Y>360</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Set Sliders to Scenario</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724859526070</Id>
								<Name>txt_setSlidersToSelectedGC</Name>
								<X>-370</X>
								<Y>310</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Set Sliders to selected GC</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1724859673741</Id>
								<Name>gr_scenarioRB</Name>
								<X>130</X>
								<Y>100</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Control Type="RadioButtons">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1724859673743</Id>
										<Name>rb_scenariosPrivateUI</Name>
										<X>-100</X>
										<Y>-60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="180" Height="120">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>f_setScenario(rb_scenariosPrivateUI.getValue());</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="14" Style="0"/>
											<DefaultValueCode>0</DefaultValueCode>
											<Orientation>VERTICAL</Orientation>
											<Button>Huidig - 2023</Button>
											<Button>Toekomstplannen</Button>
											<Button>Custom</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1724859673745</Id>
										<Name>text187</Name>
										<X>-100</X>
										<Y>-80</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer een scenario</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>20</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1724943713523</Id>
								<Name>txt_hydrogenAssets</Name>
								<X>-370</X>
								<Y>210</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Hydrogen assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1724944232372</Id>
								<Name>txt_h2storageSliders</Name>
								<X>72</X>
								<Y>513</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Waterstof opslag</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>22</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1724944232376</Id>
								<Name>gr_buttonH2Storage</Name>
								<X>43</X>
								<Y>524</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Oval>
										<Id>1724944232378</Id>
										<Name>ovalH2StorageButton</Name>
										<X>-1</X>
										<Y>-1</Y>
										<Label>
											<X>0</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<RadiusX>20</RadiusX>
										<RadiusY>40</RadiusY>
										<Rotation>0.0</Rotation>
										<FillColor>-14774017</FillColor>
										<FillColorCode>v_colorH2_blue</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Oval>
									<Text>
										<Id>1724944232380</Id>
										<Name>txt_h22</Name>
										<X>-10</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-1</Color>
										<Text>H2</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1724944302875</Id>
								<Name>txt_fuelCellSliders</Name>
								<X>69</X>
								<Y>739</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Fuelcell</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>22</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1724944302879</Id>
								<Name>gr_buttonH2FuelCell</Name>
								<X>40</X>
								<Y>750</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Oval>
										<Id>1724944302881</Id>
										<Name>ovalH2StorageButton1</Name>
										<X>-1</X>
										<Y>-1</Y>
										<Label>
											<X>0</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<RadiusX>20</RadiusX>
										<RadiusY>40</RadiusY>
										<Rotation>0.0</Rotation>
										<FillColor>-14774017</FillColor>
										<FillColorCode>v_colorH2_blue</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Oval>
									<Text>
										<Id>1724944302883</Id>
										<Name>txt_h23</Name>
										<X>-10</X>
										<Y>-10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-1</Color>
										<Text>H2</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1724947265014</Id>
								<Name>text</Name>
								<X>-370</X>
								<Y>480</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Current selected assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1725003108502</Id>
								<Name>txt_hydrogenControlRoom</Name>
								<X>770</X>
								<Y>70</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<ColorCode>v_colorH2_blue</ColorCode>
								<Text>Hydrogen Controlroom</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>72</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1725002833718</Id>
						<Name>va_hydrogenUI</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title>Hydrogen UI</Title>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1722245292185</Id>
				<Name>UI_Tabs</Name>
				<AdditionalClassCode>/*&#xD;
public ShapeGroup getGroupElectricityPresentation() {&#xD;
	return gr_tabElectricity_presentation;&#xD;
}&#xD;
&#xD;
public ShapeEmbeddedObjectPresentation getElectricityPresentation() {&#xD;
	return pop_tabElectricity_presentation;&#xD;
}&#xD;
*/</AdditionalClassCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1722245292191</Id>
					<Name>1722245292191</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089971</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1722326400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1722245292188</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1722245292192</CurrentLevel>
				<ConnectionsId>1722245292186</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1722245555993</Id>
						<Name>v_selectedTabType</Name>
						<X>250</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnergyDemandTab</Type>
							<InitialValue Class="CodeValue">
								<Code>ELECTRICITY</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1746099651858</Id>
						<Name>v_presentationXOffset</Name>
						<X>250</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>15</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1746099651890</Id>
						<Name>v_presentationYOffset</Name>
						<X>250</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>630</Code>
							</InitialValue>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722245473562</Id>
						<Name>f_showCorrectTab</Name>
						<X>250</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>pop_tabElectricity_presentation.setVisible(false);&#xD;
pop_tabHeating_presentation.setVisible(false);&#xD;
pop_tabMobility_presentation.setVisible(false);&#xD;
pop_tabEHub_presentation.setVisible(false);&#xD;
&#xD;
switch (v_selectedTabType) {&#xD;
	case ELECTRICITY:&#xD;
		pop_tabElectricity_presentation.setVisible(true);&#xD;
		break;&#xD;
	case HEAT:&#xD;
		pop_tabHeating_presentation.setVisible(true);&#xD;
		break;&#xD;
	case MOBILITY:&#xD;
		pop_tabMobility_presentation.setVisible(true);&#xD;
		break;&#xD;
	case HUB:&#xD;
	case NFATO:&#xD;
		pop_tabEHub_presentation.setVisible(true);&#xD;
		//tabEHub.f_setTab();&#xD;
		break;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722259092945</Id>
						<Name>f_setTab</Name>
						<X>250</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>tab</Name>
							<Type>EnergyDemandTab</Type>
						</Parameter>
						<Body>v_selectedTabType = tab;&#xD;
f_showCorrectTab();&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1722245292186</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1722252542602</Id>
						<Name>zero_Interface</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Zero_Interface</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<EmbeddedObjects>
					<EmbeddedObject>
						<Id>1722245482640</Id>
						<Name>pop_tabMobility</Name>
						<X>50</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>2</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1744964660761</PresentationId>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>tabMobility</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>tabMobility</ClassName>
								<ItemName>1722245324901</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters/>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089970</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1722245482641</Id>
						<Name>pop_tabElectricity</Name>
						<X>50</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>2</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1744964655611</PresentationId>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>tabElectricity</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>tabElectricity</ClassName>
								<ItemName>1722247653567</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_currentPVOnLand_ha</Name>
							</Parameter>
							<Parameter>
								<Name>p_currentWindTurbines_MW</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089969</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1722253113248</Id>
						<Name>pop_tabHeating</Name>
						<X>50</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1744964658364</PresentationId>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>tabHeating</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>tabHeating</ClassName>
								<ItemName>1722253108631</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters/>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089968</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1722253478328</Id>
						<Name>pop_tabEHub</Name>
						<X>50</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1744964663750</PresentationId>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>tabEHub</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>tabEHub</ClassName>
								<ItemName>1722253463901</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters/>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089967</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
				</EmbeddedObjects>
				<Presentation>
					<Level>
						<Id>1722245292192</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Group>
								<Id>1722248369298</Id>
								<Name>g_energyDemandSettings</Name>
								<X>200</X>
								<Y>580</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Group>
										<Id>1722248369300</Id>
										<Name>gr_electricityButton</Name>
										<X>-125</X>
										<Y>-25</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>v_selectedTabType = EnergyDemandTab.ELECTRICITY;
f_showCorrectTab();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Oval>
												<Id>1722248369302</Id>
												<Name>ovalElectricityButton</Name>
												<X>0</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>2</LineWidth>
												<LineColor>-657931</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>20</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-32</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Image>
												<Id>1722248369304</Id>
												<Name>image3</Name>
												<X>-14</X>
												<Y>-12</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>28</Width>
												<Height>24</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>noun-electricity-3408805.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
									<Group>
										<Id>1722248369306</Id>
										<Name>gr_heatButton</Name>
										<X>-40</X>
										<Y>-25</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>v_selectedTabType = EnergyDemandTab.HEAT;
f_showCorrectTab();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Oval>
												<Id>1722248369308</Id>
												<Name>ovalHeatButton</Name>
												<X>0</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>2</LineWidth>
												<LineColor>-657931</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>20</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-6943</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Image>
												<Id>1722248369310</Id>
												<Name>image10</Name>
												<X>-14</X>
												<Y>-12</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>28</Width>
												<Height>24</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>noun-fire-2429630.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
									<Group>
										<Id>1722248369312</Id>
										<Name>gr_mobilityButton</Name>
										<X>45</X>
										<Y>-25</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>v_selectedTabType = EnergyDemandTab.MOBILITY;
f_showCorrectTab();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Oval>
												<Id>1722248369314</Id>
												<Name>ovalTransportButton</Name>
												<X>0</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>2</LineWidth>
												<LineColor>-657931</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>20</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-2625550</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Image>
												<Id>1722248369316</Id>
												<Name>image15</Name>
												<X>-14</X>
												<Y>-12</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>28</Width>
												<Height>24</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>noun-car-1777731.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
									<Group>
										<Id>1722248369318</Id>
										<Name>gr_eHubButton</Name>
										<X>130</X>
										<Y>-25</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>v_selectedTabType = EnergyDemandTab.HUB;
f_showCorrectTab();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Oval>
												<Id>1722248369320</Id>
												<Name>ovalHubButton</Name>
												<X>0</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>2</LineWidth>
												<LineColor>-657931</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>20</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-3736634</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Line>
												<Id>1722248369322</Id>
												<Name>line</Name>
												<X>-10</X>
												<Y>-7</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1.5</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>20</Dx>
												<Dy>-2</Dy>
												<Dz>0</Dz>
											</Line>
											<Line>
												<Id>1722248369324</Id>
												<Name>line1</Name>
												<X>-6</X>
												<Y>6</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1.5</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>16</Dx>
												<Dy>-15</Dy>
												<Dz>0</Dz>
											</Line>
											<Line>
												<Id>1722248369326</Id>
												<Name>line2</Name>
												<X>-10</X>
												<Y>-4</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1.5</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>18</Dx>
												<Dy>15</Dy>
												<Dz>0</Dz>
											</Line>
											<Oval>
												<Id>1722248369328</Id>
												<Name>oval</Name>
												<X>-11</X>
												<Y>-6</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>3</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-657931</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Oval>
												<Id>1722248369330</Id>
												<Name>oval1</Name>
												<X>-8</X>
												<Y>8</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>3</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-657931</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Line>
												<Id>1722248369332</Id>
												<Name>line3</Name>
												<X>8</X>
												<Y>10</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>DOTTED</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>1</Dx>
												<Dy>-17</Dy>
												<Dz>0</Dz>
											</Line>
											<Oval>
												<Id>1722248369334</Id>
												<Name>oval4</Name>
												<X>8</X>
												<Y>10</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>3</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-657931</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Oval>
												<Id>1722248369336</Id>
												<Name>oval3</Name>
												<X>10</X>
												<Y>-9</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>3</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-657931</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
										</Presentation>
									</Group>
									<Text>
										<Id>1722248369338</Id>
										<Name>t_electricityButtonDescription</Name>
										<X>-125</X>
										<Y>10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Elektriciteit</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>12</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722248369340</Id>
										<Name>t_heatButtonDescription</Name>
										<X>-40</X>
										<Y>10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Warmte</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>12</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722248369342</Id>
										<Name>t_mobilityButtonDescription</Name>
										<X>45</X>
										<Y>10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Transport</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>12</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1722248369344</Id>
										<Name>t_eHubButtonDescription</Name>
										<X>130</X>
										<Y>10</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>E-hub</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>12</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1744964727616</Id>
								<Name>gr_tabElectricity_presentation</Name>
								<X>15</X>
								<Y>630</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<EmbeddedObjectPresentation>
										<Id>1744964655611</Id>
										<Name>pop_tabElectricity_presentation</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
										<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
										<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
										<Latitude>0.0</Latitude>
										<Longitude>0.0</Longitude>
									</EmbeddedObjectPresentation>
								</Presentation>
							</Group>
							<Group>
								<Id>1744964732289</Id>
								<Name>gr_tabHeating_presentation</Name>
								<X>15</X>
								<Y>630</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<EmbeddedObjectPresentation>
										<Id>1744964658364</Id>
										<Name>pop_tabHeating_presentation</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
										<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
										<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
										<Latitude>0.0</Latitude>
										<Longitude>0.0</Longitude>
									</EmbeddedObjectPresentation>
								</Presentation>
							</Group>
							<Group>
								<Id>1744964737688</Id>
								<Name>gr_tabEHub_presentation</Name>
								<X>15</X>
								<Y>630</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<EmbeddedObjectPresentation>
										<Id>1744964663750</Id>
										<Name>pop_tabEHub_presentation</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
										<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
										<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
										<Latitude>0.0</Latitude>
										<Longitude>0.0</Longitude>
									</EmbeddedObjectPresentation>
								</Presentation>
							</Group>
							<Group>
								<Id>1744964742286</Id>
								<Name>gr_tabMobility_presentation</Name>
								<X>15</X>
								<Y>630</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<EmbeddedObjectPresentation>
										<Id>1744964660761</Id>
										<Name>pop_tabMobility_presentation</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
										<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
										<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
										<Latitude>0.0</Latitude>
										<Longitude>0.0</Longitude>
									</EmbeddedObjectPresentation>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658477103140</Id>
				<Name>Zero_Interface</Name>
				<AdditionalClassCode>public ShapeButton getButton_goToUI() {&#xD;
	return this.button_goToUI;&#xD;
}&#xD;
public ShapeRadioButtonGroup getBuildingColorsRB(){&#xD;
	return this.rb_mapOverlay;&#xD;
}&#xD;
public ShapeCheckBox getCb_showFilterInterface(){&#xD;
	return this.cb_showFilterInterface;&#xD;
}&#xD;
public ShapeComboBox getCb_filterOptions(){&#xD;
	return this.cb_filterOptions;&#xD;
}</AdditionalClassCode>
				<Import>/*
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.type.TypeReference;

// For deserialisation
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.annotation.PropertyAccessor;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
*/
import java.io.FileOutputStream;
import java.util.stream.Stream;
import java.util.Dictionary.*;
import java.util.Hashtable.*;
import java.util.*;
import java.util.stream.Collectors;

import java.io.*;
import java.io.File;
import java.io.IOException;
import java.util.Date;  
import java.time.LocalDate;
import java.time.DayOfWeek;
import java.text.SimpleDateFormat;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;

//Possibility to turn of traceln
import java.io.OutputStream;
import java.io.PrintStream;

//Curves
import com.anylogic.engine.markup.AbstractCurve;
import com.anylogic.engine.markup.GISMarkupSegment;
import com.anylogic.engine.markup.GISPoint;
//import zero_engine.OL_EnergyCarriers;
//import zero_engine.OL_EnergyCarriers;
import com.querydsl.core.types.dsl.TimeExpression;
//import zero_engine.J_EAStorageElectric;
//import zero_engine.J_EAConsumption;
import kotlin.Triple;</Import>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658477103138</Id>
					<Name>1658477103138</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>GIS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>false</AutoCreate>
					<Id>1658477089966</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>p_timeStep_h</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658477103136</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658477103139</CurrentLevel>
				<ConnectionsId>1658477103135</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1663238634515</Id>
						<Name>v_timeStepsElapsed</Name>
						<X>-240</X>
						<Y>890</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759932</Id>
						<Name>v_LVGridColor</Name>
						<X>395</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>purple</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759935</Id>
						<Name>v_HVGridColor</Name>
						<X>395</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>red</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759938</Id>
						<Name>v_gasGridColor</Name>
						<X>395</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>brown</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759945</Id>
						<Name>v_energieLabelAColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1165</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>darkGreen</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759948</Id>
						<Name>v_energieLabelBColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1185</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759950</Id>
						<Name>v_energieLabelCColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1205</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>yellowGreen</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759953</Id>
						<Name>v_energieLabelDColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1225</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>gold</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759955</Id>
						<Name>v_energieLabelEColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1245</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>orange</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759958</Id>
						<Name>v_energieLabelFColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1265</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>orangeRed</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759961</Id>
						<Name>v_energieLabelOnbekendColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1305</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>peru</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759963</Id>
						<Name>v_energieLabelGColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>395</X>
						<Y>1285</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>red</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837759966</Id>
						<Name>v_MVGridColor</Name>
						<X>395</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>steelBlue</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696863329269</Id>
						<Name>v_gridConnectionInBuildingIndex</Name>
						<X>50</X>
						<Y>1520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701164360663</Id>
						<Name>b_resultsUpToDate</Name>
						<X>-240</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701879001472</Id>
						<Name>v_clickedObjectText</Name>
						<X>50</X>
						<Y>1540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
							<InitialValue Class="CodeValue">
								<Code>"None"</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701879014361</Id>
						<Name>v_clickedObjectAdress</Name>
						<X>50</X>
						<Y>1560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
							<InitialValue Class="CodeValue">
								<Code>""</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702041370471</Id>
						<Name>v_simulationArea1Color</Name>
						<X>1310</X>
						<Y>1230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(178, 34, 34, 0)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702043349202</Id>
						<Name>v_companyBuildingColor</Name>
						<X>690</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>teal</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702043408687</Id>
						<Name>v_detailedCompanyBuildingColor</Name>
						<X>690</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>navy</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702043479414</Id>
						<Name>v_houseBuildingColor</Name>
						<X>690</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(154, 208, 194)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702043554935</Id>
						<Name>v_restBuildingColor</Name>
						<X>690</X>
						<Y>1210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>gainsboro</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702046920293</Id>
						<Name>v_clickedObjectDetails</Name>
						<X>50</X>
						<Y>1580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
							<InitialValue Class="CodeValue">
								<Code>""</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704450852556</Id>
						<Name>v_solarParkColor</Name>
						<X>690</X>
						<Y>1310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(250, 246, 179, 206)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704463271534</Id>
						<Name>v_selectionColor</Name>
						<X>410</X>
						<Y>1360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>yellow</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704463281781</Id>
						<Name>v_selectionColorAddBuildings</Name>
						<X>410</X>
						<Y>1380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>yellow</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705663820237</Id>
						<Name>v_HVMVNodeColor</Name>
						<X>1030</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(253, 223, 134, 206)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705663820239</Id>
						<Name>v_HVMVLineColor</Name>
						<X>1030</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>navy</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705664070254</Id>
						<Name>v_solarParkLineColor</Name>
						<X>690</X>
						<Y>1330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>gold</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705664575869</Id>
						<Name>v_electrolyserColor</Name>
						<X>690</X>
						<Y>1445</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(33, 164, 195)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705664587285</Id>
						<Name>v_chargingStationColor</Name>
						<X>690</X>
						<Y>1490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>cyan</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705668042403</Id>
						<Name>v_antiLayerColor</Name>
						<X>1310</X>
						<Y>1210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(192, 192, 192, 100)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705668569794</Id>
						<Name>v_electrolyserLineColor</Name>
						<X>690</X>
						<Y>1465</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>navy</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705668590932</Id>
						<Name>v_chargingStationLineColor</Name>
						<X>690</X>
						<Y>1510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>darkBlue</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705673181898</Id>
						<Name>v_clickedGridNode</Name>
						<X>50</X>
						<Y>1420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>GridNode</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705673647104</Id>
						<Name>v_previousClickedObjectType</Name>
						<X>50</X>
						<Y>1390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_GISObjectType</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705673714784</Id>
						<Name>v_previousClickedGridNode</Name>
						<X>50</X>
						<Y>1440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>GridNode</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705967311665</Id>
						<Name>v_simulationArea1LineColor</Name>
						<X>1310</X>
						<Y>1250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>dimGray</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705967344378</Id>
						<Name>v_simulationArea2Color</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1310</X>
						<Y>1270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(178, 34, 34, 0)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705967344381</Id>
						<Name>v_simulationArea2LineColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1310</X>
						<Y>1290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>dimGray</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1706003981173</Id>
						<Name>v_isViewAreaMenuVisible</Name>
						<X>1312</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1706003981175</Id>
						<Name>v_menuFrameColor</Name>
						<X>1312</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color (226,0,37,180)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1706892713276</Id>
						<Name>GISregion_antiLaag</Name>
						<X>-280</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>GISRegion</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1706990909665</Id>
						<Name>v_themeColor</Name>
						<X>1312</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(208, 208, 245)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1706990958029</Id>
						<Name>v_backgroundColor</Name>
						<X>1312</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>(new Color(208, 208, 245)).brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1707918668189</Id>
						<Name>v_clickedObjectType</Name>
						<X>50</X>
						<Y>1370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_GISObjectType</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708597346305</Id>
						<Name>v_connectionOwnerIndexNr</Name>
						<X>50</X>
						<Y>1340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1709803708318</Id>
						<Name>v_gridNodeFeedinColor</Name>
						<X>410</X>
						<Y>1400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>orange</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1710162245199</Id>
						<Name>v_batteryColor</Name>
						<X>690</X>
						<Y>1400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green.darker()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1710162245201</Id>
						<Name>v_batteryLineColor</Name>
						<X>690</X>
						<Y>1420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1710166484674</Id>
						<Name>v_windFarmColor</Name>
						<X>690</X>
						<Y>1355</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>white</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1710166484676</Id>
						<Name>v_windFarmLineColor</Name>
						<X>690</X>
						<Y>1375</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>black</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714137967101</Id>
						<Name>v_MVLVNodeColor</Name>
						<X>1030</X>
						<Y>1220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714137970406</Id>
						<Name>v_MVLVLineColor</Name>
						<X>1030</X>
						<Y>1240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green.brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714137978358</Id>
						<Name>v_gridNodeColorStrained</Name>
						<X>1030</X>
						<Y>1415</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>orange</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714137980262</Id>
						<Name>v_gridNodeLineColorStrained</Name>
						<X>1030</X>
						<Y>1435</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>orange.brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714137982277</Id>
						<Name>v_gridNodeColorCongested</Name>
						<X>1030</X>
						<Y>1460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>red</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1714137984157</Id>
						<Name>v_gridLineColorCongested</Name>
						<X>1030</X>
						<Y>1480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>red.brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718264413499</Id>
						<Name>v_unknownConsumptionColor</Name>
						<X>395</X>
						<Y>1145</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>white</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718567214780</Id>
						<Name>b_updateLiveCongestionColors</Name>
						<X>1030</X>
						<Y>1600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719311576065</Id>
						<Name>v_newChargingStationColor</Name>
						<X>690</X>
						<Y>1580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(173, 255, 47, 156)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719311576067</Id>
						<Name>v_newChargingStationLineColor</Name>
						<X>690</X>
						<Y>1600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719830571563</Id>
						<Name>v_outsideTemperature</Name>
						<X>1240</X>
						<Y>-260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719830581855</Id>
						<Name>v_solarIrradiance</Name>
						<X>1240</X>
						<Y>-240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719830591551</Id>
						<Name>v_windspeed</Name>
						<X>1240</X>
						<Y>-220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720905248678</Id>
						<Name>v_selectedGridConnectionIndex</Name>
						<X>940</X>
						<Y>-130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720905365617</Id>
						<Name>v_nbGridConnectionsInSelectedBuilding</Name>
						<X>940</X>
						<Y>-110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721652532124</Id>
						<Name>v_companyBuildingLineColor</Name>
						<X>690</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>black</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721652543732</Id>
						<Name>v_detailedCompanyBuildingLineColor</Name>
						<X>690</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>black</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721652554195</Id>
						<Name>v_houseBuildingLineColor</Name>
						<X>690</X>
						<Y>1180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>black</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721652564323</Id>
						<Name>v_restBuildingLineColor</Name>
						<X>690</X>
						<Y>1230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721729327873</Id>
						<Name>v_parcelColor</Name>
						<X>690</X>
						<Y>1630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>navajoWhite</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721729331151</Id>
						<Name>v_parcelLineColor</Name>
						<X>690</X>
						<Y>1650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>black</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721996776514</Id>
						<Name>v_MVMVNodeColor</Name>
						<X>1030</X>
						<Y>1150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(253, 223, 134, 206)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721996776516</Id>
						<Name>v_MVMVLineColor</Name>
						<X>1030</X>
						<Y>1170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>navy</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721998215865</Id>
						<Name>v_HVMVNodeSize</Name>
						<X>1030</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>100</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721998236233</Id>
						<Name>v_MVMVNodeSize</Name>
						<X>1030</X>
						<Y>1190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>40</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721998240384</Id>
						<Name>v_MVLVNodeSize</Name>
						<X>1030</X>
						<Y>1260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725018118872</Id>
						<Name>b_showCables</Name>
						<X>50</X>
						<Y>1620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726752465730</Id>
						<Name>v_chargingCentreColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>690</X>
						<Y>1530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>purple</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726752465732</Id>
						<Name>v_chargingCentreLineColor</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>690</X>
						<Y>1550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(48, 25, 52)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1728404379677</Id>
						<Name>v_energyAssetLineWidth</Name>
						<X>690</X>
						<Y>1280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>2</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731425176471</Id>
						<Name>b_changeToCustomScenario</Name>
						<X>-670</X>
						<Y>811</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732027307811</Id>
						<Name>b_runningMainInterfaceScenarios</Name>
						<X>-670</X>
						<Y>791</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1734617425109</Id>
						<Name>b_gridLoopsAreDefined</Name>
						<X>-630</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1736425024539</Id>
						<Name>v_groupATODeliveryCapacity_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>70</X>
						<Y>2180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1736425024541</Id>
						<Name>v_groupATOFeedInCapacity_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>70</X>
						<Y>2200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1736425024543</Id>
						<Name>v_GCGTOConnectionCapacities</Name>
						<Description>Maps every gridconnection to the calculated contribution to a GTO (Groep Transport Overeenkomst). Delivery and FeedIn respectively.</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>80</X>
						<Y>2100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>HashMap&lt;GridConnection, double[]&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>new HashMap&lt;&gt;();</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1739980192808</Id>
						<Name>v_customEnergyCoop</Name>
						<X>50</X>
						<Y>1290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnergyCoop</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1742298194173</Id>
						<Name>v_forcedClickScreenColor</Name>
						<X>140</X>
						<Y>-860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>new Color(105, 105, 105, 150)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743092928263</Id>
						<Name>b_inManualFilterSelectionMode</Name>
						<X>-1410</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743666440153</Id>
						<Name>v_currentActiveInfoBubble</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-1880</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ShapeImage</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1744205147072</Id>
						<Name>v_infoText</Name>
						<X>-1900</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_InfoText</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_InfoText()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750086295616</Id>
						<Name>v_parkingSpaceColor_private</Name>
						<X>690</X>
						<Y>1760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>salmon</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750086307414</Id>
						<Name>v_parkingSpaceLineColor_private</Name>
						<X>690</X>
						<Y>1780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>red</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750089169786</Id>
						<Name>v_parkingSpaceColor_electric</Name>
						<X>690</X>
						<Y>1720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>lightGreen</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750089169788</Id>
						<Name>v_parkingSpaceLineColor_electric</Name>
						<X>690</X>
						<Y>1740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750089171472</Id>
						<Name>v_parkingSpaceColor_public</Name>
						<X>690</X>
						<Y>1680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>lightBlue</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750089171474</Id>
						<Name>v_parkingSpaceLineColor_public</Name>
						<X>690</X>
						<Y>1700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>blue</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750165528617</Id>
						<Name>v_numberOfSurveyCompanies</Name>
						<X>1390</X>
						<Y>1520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1750777761770</Id>
						<Name>v_HVMVNodeIsVisible</Name>
						<X>1030</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1752836273466</Id>
						<Name>v_gridNodeLineColorUncongested</Name>
						<X>1030</X>
						<Y>1390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green.brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1752836375624</Id>
						<Name>v_gridNodeColorUncongested</Name>
						<X>1030</X>
						<Y>1370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1752837181466</Id>
						<Name>v_LVLVNodeColor</Name>
						<X>1030</X>
						<Y>1290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1752837181468</Id>
						<Name>v_LVLVLineColor</Name>
						<X>1030</X>
						<Y>1310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>green.brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1752837181470</Id>
						<Name>v_LVLVNodeSize</Name>
						<X>1030</X>
						<Y>1330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>10</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1753105667219</Id>
						<Name>rb_mapOverlay</Name>
						<X>1920</X>
						<Y>1495</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ShapeRadioButtonGroup</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1753110308594</Id>
						<Name>v_amountOfDefinedGridLoops</Name>
						<X>-630</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1753115730758</Id>
						<Name>v_gridNodeColorCapacityUnknown</Name>
						<X>1030</X>
						<Y>1510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>gray</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1753115736678</Id>
						<Name>v_gridNodeLineColorCapacityUnknown</Name>
						<X>1030</X>
						<Y>1530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Color</Type>
							<InitialValue Class="CodeValue">
								<Code>gray.brighter()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1715858732720</Id>
						<Name>energyModel</Name>
						<X>-240</X>
						<Y>950</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>EnergyModel</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1715858732718</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1715867611441</Id>
						<Name>map_centre_latitude</Name>
						<X>-670</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1715867611439</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1715867648777</Id>
						<Name>map_centre_longitude</Name>
						<X>-670</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1715867648775</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1724757837316</Id>
						<Name>p_selectedProjectType</Name>
						<X>-670</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_ProjectType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1724757837314</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1727251571552</Id>
						<Name>settings</Name>
						<X>-670</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Settings</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1727251571550</Id>
								<Label>settings</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728030131094</Id>
						<Name>map_scale</Name>
						<X>-670</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1728030131092</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1746106585457</Id>
						<Name>p_currentActiveInfoBubble</Name>
						<X>-1880</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>List&lt;ShapeImage&gt;</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>new ArrayList&lt;ShapeImage&gt;()</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1746106585455</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1744987127500</Id>
						<Name>p_maxNrSelectedGCForExport</Name>
						<X>-555</X>
						<Y>-440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>20</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1744987127498</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1745937830300</Id>
						<Name>p_minSelectedGCForPublicAggregation</Name>
						<X>-670</X>
						<Y>890</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>10</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745937830298</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1707918668148</Id>
						<Name>c_GISNeighborhoods</Name>
						<X>-280</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1709552799968</Id>
						<Name>c_companyUIs</Name>
						<X>-240</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>UI_company</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1713429665418</Id>
						<Name>c_scenarioMap_Future</Name>
						<X>-280</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>J_scenario_Future</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1713874283959</Id>
						<Name>c_scenarioMap_Current</Name>
						<X>-280</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>J_scenario_Current</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1715178022675</Id>
						<Name>c_orderedVehicles</Name>
						<X>68</X>
						<Y>-530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1715183417595</Id>
						<Name>c_orderedHeatingSystemsCompanies</Name>
						<X>68</X>
						<Y>-505</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCUtility</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1715183423011</Id>
						<Name>c_orderedPVSystemsCompanies</Name>
						<X>68</X>
						<Y>-580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCUtility</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1719176257019</Id>
						<Name>c_orderedHeatingSystemsHouses</Name>
						<X>68</X>
						<Y>-485</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCHouse</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1720376141906</Id>
						<Name>c_activePublicChargers</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>70</X>
						<Y>-320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCPublicCharger</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1720376165741</Id>
						<Name>c_inactivePublicChargers</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>70</X>
						<Y>-300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCPublicCharger</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1720376624239</Id>
						<Name>c_fixedPublicChargers</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>70</X>
						<Y>-340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722344496313</Id>
						<Name>c_GISNetplanes</Name>
						<X>-280</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GISRegion</ElementClass>
							<ValueElementClass>GISRegion</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1721302080638</Id>
						<Name>c_selectedGridConnections</Name>
						<X>50</X>
						<Y>1260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1725276677836</Id>
						<Name>c_LVCables</Name>
						<X>-280</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GISRoute</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1725276688077</Id>
						<Name>c_MVCables</Name>
						<X>-280</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GISRoute</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1734442668540</Id>
						<Name>c_selectedFilterOptions</Name>
						<X>-1430</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="protected" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>OL_FilterOptionsGC</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1734512815255</Id>
						<Name>c_previousSelectedObjects</Name>
						<X>50</X>
						<Y>1490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1734513139372</Id>
						<Name>c_selectedObjects</Name>
						<X>50</X>
						<Y>1470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1742226708562</Id>
						<Name>c_manualFilterDeselectedGC</Name>
						<X>-1410</X>
						<Y>455</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1742226748068</Id>
						<Name>c_manualFilterSelectedGC</Name>
						<X>-1410</X>
						<Y>435</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1742376749972</Id>
						<Name>c_filterSelectedGridLoops</Name>
						<X>-1410</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1742376765347</Id>
						<Name>c_filterSelectedNeighborhoods</Name>
						<X>-1410</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1744886925970</Id>
						<Name>c_presentations</Name>
						<Description>Would have to be filled by hand with all presentations that are (indirectly) on the interface canvas. eg: c_presentations.add(uI_Tabs_presentation)</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-1910</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>ShapeEmbeddedObjectPresentation</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1749741070275</Id>
						<Name>c_orderedParkingSpaces</Name>
						<X>70</X>
						<Y>-380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1747300275742</Id>
						<Name>c_orderedPVSystemsHouses</Name>
						<X>68</X>
						<Y>-555</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCHouse</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750078746618</Id>
						<Name>c_modelActiveSpecialGISObjects</Name>
						<X>1390</X>
						<Y>1480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashSet</CollectionClass>
							<ElementClass>OL_GISObjectType</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750247117301</Id>
						<Name>c_orderedV1GChargers</Name>
						<X>70</X>
						<Y>-280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EACharger</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750089494475</Id>
						<Name>c_modelActiveParkingSpaceTypes</Name>
						<X>1390</X>
						<Y>1500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashSet</CollectionClass>
							<ElementClass>OL_ParkingSpaceType</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750247117305</Id>
						<Name>c_orderedV2GChargers</Name>
						<X>70</X>
						<Y>-260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EACharger</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750156136377</Id>
						<Name>c_modelActiveDefaultGISBuildings</Name>
						<X>1390</X>
						<Y>1460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashSet</CollectionClass>
							<ElementClass>OL_GISBuildingTypes</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750333596459</Id>
						<Name>c_orderedActiveVehiclesPublicParking</Name>
						<X>70</X>
						<Y>-440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EADieselVehicle</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750333624380</Id>
						<Name>c_orderedNonActiveVehiclesPublicParking</Name>
						<X>70</X>
						<Y>-420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EADieselVehicle</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750333680450</Id>
						<Name>c_orderedVehiclesPrivateParking</Name>
						<X>70</X>
						<Y>-400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAVehicle</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750335318608</Id>
						<Name>c_orderedPublicChargers</Name>
						<Description>Niet laadpleinen, alleen losse palen</Description>
						<X>70</X>
						<Y>-230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GCPublicCharger</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1753087052979</Id>
						<Name>c_loadedMapOverlayTypes</Name>
						<X>1920</X>
						<Y>1470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>OL_MapOverlayTypes</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Events>
					<Event>
						<Id>1658497469833</Id>
						<Name>e_calculateEnergyBalance</Name>
						<Description>Trigger voor energieberekeningen in de model backbone. Volgorde is belangrijk voor consistente resultaten.

@since: Sprint 6
@author: Jorrit</Description>
						<X>-240</X>
						<Y>870</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="cyclic">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1/p_timeStep_h</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089965</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1658563200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>energyModel.p_timeStep_h</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>// Trigger timestep in energymodel for continuous simulation ('interactive mode')&#xD;
energyModel.f_runTimestep();&#xD;
v_timeStepsElapsed ++;&#xD;
&#xD;
// This function colors the trafos according to the amount of congestion. (maybe move this function call somewhere else?)&#xD;
if ( b_updateLiveCongestionColors ){&#xD;
	for (GridNode gn : energyModel.pop_gridNodes) {&#xD;
		if ((v_clickedObjectType != OL_GISObjectType.GRIDNODE || v_clickedGridNode != gn) &amp;&amp; gn.p_energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
			f_setColorsBasedOnCongestion_gridnodes(gn, true);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
// Update the NFATO values in the selected companyUI&#xD;
if(c_selectedGridConnections.size() &gt; 0 &amp;&amp; c_selectedGridConnections.get(0).v_enableNFato){&#xD;
	if(c_companyUIs.get(v_connectionOwnerIndexNr).v_NFATO_active){&#xD;
		c_companyUIs.get(v_connectionOwnerIndexNr).f_getNFATOValues();&#xD;
	}&#xD;
}&#xD;
&#xD;
// Get the weather info&#xD;
f_getWeatherInfo();</Action>
					</Event>
					<Event>
						<Id>1743509682728</Id>
						<Name>e_setStartView</Name>
						<X>-670</X>
						<Y>275</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="occuresOnce">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089964</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1743580800000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>f_setStartView();</Action>
					</Event>
				</Events>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1696837759924</Id>
						<Name>f_setColorsBasedOnEnergyLabels</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1960</X>
						<Y>1890</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>b</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>if (b.gisRegion != null){&#xD;
	if (indexOfMax(b.ar_countEnergyLabels) &lt; 4){&#xD;
		b.gisRegion.setFillColor(v_energieLabelAColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 4){&#xD;
		b.gisRegion.setFillColor(v_energieLabelBColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 5){&#xD;
		b.gisRegion.setFillColor(v_energieLabelCColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 6){&#xD;
		b.gisRegion.setFillColor(v_energieLabelDColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 7){&#xD;
		b.gisRegion.setFillColor(v_energieLabelEColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 8){&#xD;
		b.gisRegion.setFillColor(v_energieLabelFColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 9){&#xD;
		b.gisRegion.setFillColor(v_energieLabelGColor);&#xD;
	}&#xD;
	else if (indexOfMax(b.ar_countEnergyLabels) == 10){&#xD;
		b.gisRegion.setFillColor(v_energieLabelOnbekendColor);&#xD;
	}&#xD;
	else {&#xD;
		b.gisRegion.setFillColor(black);&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1696863329251</Id>
						<Name>f_selectGISRegion</Name>
						<Description>Function that selects gisregions after click on the map</Description>
						<X>50</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>clickx</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>clicky</Name>
							<Type>double</Type>
						</Parameter>
						<Body>if(settings.isPublicModel()){&#xD;
	f_selectGISRegion_publicModel(clickx, clicky);&#xD;
	return;&#xD;
}&#xD;
&#xD;
//After a click, reset previous clicked building/gridNode colors and text&#xD;
v_previousClickedObjectType = v_clickedObjectType;&#xD;
c_previousSelectedObjects = new ArrayList&lt;GIS_Object&gt;(c_selectedObjects);&#xD;
ArrayList&lt;GIS_Object&gt; buildingsConnectedToSelectedBuildingsList = new ArrayList&lt;&gt;();&#xD;
c_selectedGridConnections.clear();&#xD;
c_selectedObjects.clear();&#xD;
&#xD;
//Deselect previous selection&#xD;
if( v_previousClickedObjectType != null){&#xD;
	f_deselectPreviousSelect();&#xD;
}&#xD;
&#xD;
//Check if click was on Gridnode, if yes, select grid node&#xD;
for ( GridNode GN : energyModel.pop_gridNodes ){&#xD;
	if( GN.gisRegion != null &amp;&amp; GN.gisRegion.contains(clickx, clicky) &amp;&amp; GN.gisRegion.isVisible() ){&#xD;
		f_selectGridNode(GN);&#xD;
		return;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Check if click was on Building, if yes, select grid building&#xD;
for ( GIS_Building b : energyModel.pop_GIS_Buildings ){&#xD;
	if( b.gisRegion != null &amp;&amp; b.gisRegion.contains(clickx, clicky) ){&#xD;
		if (b.gisRegion.isVisible()) { //only allow us to click on visible objects&#xD;
			if (b.c_containedGridConnections.size() &gt; 0 ) { // only allow buildings with gridconnections&#xD;
				buildingsConnectedToSelectedBuildingsList = b.c_containedGridConnections.get(0).c_connectedGISObjects; // Find buildings powered by the same GC as the clicked building&#xD;
				f_selectBuilding(b, buildingsConnectedToSelectedBuildingsList);&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Check if click was on remaining objects such as chargers, solarfields, parcels: if yes, select object&#xD;
for ( GIS_Object GISobject : energyModel.pop_GIS_Objects ){&#xD;
	if( GISobject.gisRegion != null &amp;&amp; GISobject.gisRegion.contains(clickx, clicky) ) {&#xD;
		if (GISobject.gisRegion.isVisible()) { //only allow us to click on visible objects&#xD;
			if (GISobject.c_containedGridConnections.size() &gt; 0 ) { // only allow objects with gridconnections&#xD;
				&#xD;
				// Find buildings powered by the same GC as the clicked object&#xD;
				buildingsConnectedToSelectedBuildingsList = GISobject.c_containedGridConnections.get(0).c_connectedGISObjects; &#xD;
				&#xD;
				//Find the (first) connected GC in the object&#xD;
				GridConnection selectedGC = GISobject.c_containedGridConnections.get(0);&#xD;
				&#xD;
				//Set the selected GIS object type&#xD;
				v_clickedObjectType = GISobject.p_GISObjectType;&#xD;
				c_selectedObjects.add(GISobject);&#xD;
				&#xD;
				//Set the correct interface view for each object type&#xD;
				switch(v_clickedObjectType){&#xD;
				&#xD;
				case CHARGER:&#xD;
					f_selectCharger((GCPublicCharger)selectedGC, GISobject );&#xD;
					break;&#xD;
				&#xD;
				default:&#xD;
					buildingsConnectedToSelectedBuildingsList = GISobject.c_containedGridConnections.get(0).c_connectedGISObjects; // Find buildings powered by the same GC as the clicked building&#xD;
					f_selectBuilding(GISobject, buildingsConnectedToSelectedBuildingsList);		&#xD;
					break;&#xD;
				}&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Still no clicked object? :select basic region&#xD;
v_clickedObjectType = OL_GISObjectType.REGION;&#xD;
uI_Results.f_updateResultsUI(energyModel);&#xD;
&#xD;
//Enable kpi summary button&#xD;
uI_Results.getCheckbox_KPISummary().setEnabled(true);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1702045084338</Id>
						<Name>f_styleAreas</Name>
						<X>-670</X>
						<Y>371</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>double width = 1;&#xD;
&#xD;
if (gis_area instanceof GIS_Parcel ||&#xD;
	gis_area.c_containedGridConnections.size() == 0 ||&#xD;
	gis_area.c_containedGridConnections.get(0) instanceof GCPublicCharger ) {&#xD;
	// Parcels, Chargers and GIS Objects without GCs are always the default color&#xD;
	gis_area.f_style(null, null, null, null);&#xD;
	return;&#xD;
}&#xD;
&#xD;
//Get selected map overlay type, based on loaded order of the radio buttons&#xD;
OL_MapOverlayTypes selectedMapOverlayType;&#xD;
if(rb_mapOverlay != null){&#xD;
	selectedMapOverlayType = c_loadedMapOverlayTypes.get(rb_mapOverlay.getValue());&#xD;
}&#xD;
else{&#xD;
	selectedMapOverlayType = OL_MapOverlayTypes.DEFAULT;&#xD;
}&#xD;
//Set the correct map overlay&#xD;
switch(selectedMapOverlayType){&#xD;
	case DEFAULT:&#xD;
		gis_area.f_style(null, null, null, null);&#xD;
		break;&#xD;
	case ELECTRICITY_CONSUMPTION:&#xD;
		if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL) {&#xD;
			f_setColorsBasedOnConsumptionProfileHouseholds(gis_area);&#xD;
		}&#xD;
		else {&#xD;
			f_setColorsBasedOnElectricityConsumption(gis_area);&#xD;
		}&#xD;
		break;&#xD;
	case PV_PRODUCTION:&#xD;
		if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL) {&#xD;
			f_setColorsBasedOnProductionHouseholds(gis_area);&#xD;
		}&#xD;
		else {&#xD;
			f_setColorsBasedOnProduction(gis_area);&#xD;
		}&#xD;
		break;&#xD;
	case GRID_NEIGHBOURS:&#xD;
		f_setColorsBasedOnGridTopology_objects(gis_area);&#xD;
		break;&#xD;
	case CONGESTION:&#xD;
		f_setColorsBasedOnCongestion_objects(gis_area);&#xD;
		break;&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1702385530773</Id>
						<Name>f_styleSimulationAreas</Name>
						<X>-670</X>
						<Y>351</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>GISRegion gisregion = area.gisRegion; &#xD;
&#xD;
switch( area.p_GISObjectType ) {&#xD;
	case ANTI_LAYER:&#xD;
		gisregion.setVisible(true);	&#xD;
		gisregion.setLineStyle( LINE_STYLE_SOLID );&#xD;
		gisregion.setLineWidth( 0);&#xD;
		gisregion.setLineColor( v_antiLayerColor );&#xD;
		gisregion.setFillColor( v_antiLayerColor );&#xD;
		GISregion_antiLaag = gisregion;&#xD;
		&#xD;
		//Pas p_id aan naar een normale naam&#xD;
		area.p_id = "Buitengebied";&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
		gisregion.setVisible(true);	&#xD;
		gisregion.setLineColor( v_simulationArea1LineColor );&#xD;
		gisregion.setLineStyle( LINE_STYLE_SOLID );&#xD;
		gisregion.setLineWidth( 1);&#xD;
		gisregion.setFillColor( v_simulationArea1Color );&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1705499586056</Id>
						<Name>f_styleGridNodes</Name>
						<X>-670</X>
						<Y>391</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GN</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Body>//Get selected map overlay type, based on loaded order of the radio buttons&#xD;
OL_MapOverlayTypes selectedMapOverlayType;&#xD;
if(rb_mapOverlay != null){&#xD;
	selectedMapOverlayType = c_loadedMapOverlayTypes.get(rb_mapOverlay.getValue());&#xD;
}&#xD;
else{&#xD;
	selectedMapOverlayType = OL_MapOverlayTypes.DEFAULT;&#xD;
}&#xD;
//Set the correct map overlay&#xD;
switch(selectedMapOverlayType){&#xD;
	case DEFAULT:&#xD;
	case ELECTRICITY_CONSUMPTION:&#xD;
	case PV_PRODUCTION:&#xD;
		if(!b_updateLiveCongestionColors){&#xD;
			switch( GN.p_nodeType ) {&#xD;
				case LVLV:&#xD;
					f_styleLVLV(GN.gisRegion);&#xD;
					break;&#xD;
				case MVLV:&#xD;
					f_styleMVLV(GN.gisRegion);&#xD;
					break;&#xD;
				case SUBMV:&#xD;
					f_styleSUBMV(GN.gisRegion);&#xD;
					break;&#xD;
				case MVMV:&#xD;
					f_styleMVMV(GN.gisRegion);&#xD;
					break;&#xD;
				case HVMV:&#xD;
					f_styleHVMV(GN.gisRegion);&#xD;
					break;&#xD;
				case HT:&#xD;
					&#xD;
					break;&#xD;
				case MT:&#xD;
					&#xD;
					break;&#xD;
				case LT:&#xD;
					&#xD;
					break;&#xD;
				default:&#xD;
			}&#xD;
		}&#xD;
		else{&#xD;
			f_setColorsBasedOnCongestion_gridnodes(GN, false);&#xD;
		}&#xD;
		break;&#xD;
	case GRID_NEIGHBOURS:&#xD;
		f_setColorsBasedOnGridTopology_gridnodes(GN);&#xD;
		break;&#xD;
	case CONGESTION:&#xD;
		f_setColorsBasedOnCongestion_gridnodes(GN, false);&#xD;
		break;&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1705505495599</Id>
						<Name>f_styleMVLV</Name>
						<X>-650</X>
						<Y>471</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gisregion</Name>
							<Type>GISRegion</Type>
						</Parameter>
						<Body>gisregion.setLineStyle( LINE_STYLE_SOLID );&#xD;
gisregion.setLineColor( v_MVLVLineColor );&#xD;
gisregion.setLineWidth(2);		&#xD;
gisregion.setFillColor(v_MVLVNodeColor);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1705505509120</Id>
						<Name>f_styleHVMV</Name>
						<X>-650</X>
						<Y>411</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gisregion</Name>
							<Type>GISRegion</Type>
						</Parameter>
						<Body>gisregion.setFillColor(v_HVMVNodeColor);&#xD;
gisregion.setLineStyle( LINE_STYLE_SOLID );&#xD;
gisregion.setLineColor( v_HVMVLineColor );&#xD;
gisregion.setLineWidth(2);&#xD;
gisregion.setVisible(v_HVMVNodeIsVisible);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1705925024602</Id>
						<Name>f_setUITabs</Name>
						<X>-670</X>
						<Y>731</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// CHOOSE WHICH TABS YOU WANT TO BE ABLE TO SHOW FOR YOUR PROJECT &#xD;
// (OVERRIDE FUNCTION IN CHILD IF YOU WANT OTHER THAN DEFAULT)&#xD;
&#xD;
// Adding the (child) tabs to the tabArea population&#xD;
&#xD;
// If you use an extension of a tab, you must update the pointer to the instance of the interface&#xD;
// Something like: tabElectricity.zero_Interface = loader_Project.zero_Interface;&#xD;
// No update to the pointer is needed for the generic tabs&#xD;
&#xD;
uI_Tabs.add_pop_tabElectricity();&#xD;
&#xD;
uI_Tabs.add_pop_tabHeating();&#xD;
&#xD;
uI_Tabs.add_pop_tabMobility();&#xD;
&#xD;
uI_Tabs.add_pop_tabEHub();&#xD;
&#xD;
// Group visibilities&#xD;
// When using an extension of a generic tab don't forget to typecast it!&#xD;
if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL) {&#xD;
	((tabElectricity)uI_Tabs.pop_tabElectricity.get(0)).getGroupElectricityDemandSliders_ResidentialArea().setVisible(true);&#xD;
	((tabHeating)uI_Tabs.pop_tabHeating.get(0)).getGroupHeatDeandSliders_ResidentialArea().setVisible(true);&#xD;
	((tabMobility)uI_Tabs.pop_tabMobility.get(0)).getGroupMobilityDemandSliders().setVisible(true);&#xD;
	((tabEHub)uI_Tabs.pop_tabEHub.get(0)).getGroupHubSliders().setVisible(true);&#xD;
}&#xD;
else {&#xD;
	((tabElectricity)uI_Tabs.pop_tabElectricity.get(0)).getGroupElectricityDemandSliders().setVisible(true);&#xD;
	((tabHeating)uI_Tabs.pop_tabHeating.get(0)).getGroupHeatDemandSlidersCompanies().setVisible(true);&#xD;
	((tabMobility)uI_Tabs.pop_tabMobility.get(0)).getGroupMobilityDemandSliders().setVisible(true);&#xD;
	((tabEHub)uI_Tabs.pop_tabEHub.get(0)).getGroupHubSliders().setVisible(true);&#xD;
}&#xD;
uI_Tabs.f_showCorrectTab();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707918668161</Id>
						<Name>f_selectGridNode</Name>
						<X>70</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GN</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Body>v_clickedGridNode = GN;&#xD;
v_clickedObjectType = OL_GISObjectType.GRIDNODE;&#xD;
&#xD;
//Disable the KPI summary (button)&#xD;
uI_Results.getCheckbox_KPISummary().setSelected(false, true);&#xD;
uI_Results.getCheckbox_KPISummary().setEnabled(false);&#xD;
&#xD;
&#xD;
// Set info text&#xD;
if ( GN.p_realCapacityAvailable ) {&#xD;
	v_clickedObjectText = GN.p_nodeType + "-station, " + Integer.toString( ((int)GN.p_capacity_kW) ) + " kW, ID: " + GN.p_gridNodeID + ", aansluitingen: " + GN.f_getConnectedGridConnections().size() + ", Type station: " + GN.p_description;&#xD;
}&#xD;
else {&#xD;
	v_clickedObjectText =  GN.p_nodeType + "-station, " + Integer.toString( ((int)GN.p_capacity_kW) ) + " kW (ingeschat), ID: " + GN.p_gridNodeID + ", aansluitingen: " + GN.f_getConnectedGridConnections().size() + ", Type station: " + GN.p_description;&#xD;
}&#xD;
&#xD;
v_clickedObjectAdress = "";&#xD;
v_clickedObjectDetails = "Type station:\t" + GN.p_description;&#xD;
&#xD;
&#xD;
// Color the GridNode&#xD;
GN.gisRegion.setFillColor( v_selectionColor );&#xD;
GN.gisRegion.setLineColor( orange );&#xD;
&#xD;
// Color the connected GridConnections&#xD;
for ( GridConnection GC : GN.f_getAllLowerLVLConnectedGridConnections()){&#xD;
	if (GC.c_connectedGISObjects.size() == 0){&#xD;
		//traceln("Gridconnection with ID " + GC.p_ownerID + " and index " + GC.getIndex() + " has no GIS building");&#xD;
	}&#xD;
	else {&#xD;
		GC.c_connectedGISObjects.forEach(gb -&gt; gb.f_style(v_gridNodeFeedinColor, v_gridNodeFeedinColor, 2.0, null));&#xD;
	}&#xD;
}&#xD;
&#xD;
uI_Results.f_updateUIresultsGridNode(GN);</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707918668163</Id>
						<Name>f_selectBuilding</Name>
						<X>70</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>b</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Parameter>
							<Name>buildingsConnectedToSelectedGC_list</Name>
							<Type>ArrayList&lt;GIS_Object&gt;</Type>
						</Parameter>
						<Body>c_selectedObjects = new ArrayList&lt;GIS_Object&gt;(buildingsConnectedToSelectedGC_list);&#xD;
v_clickedObjectType = b.p_GISObjectType;&#xD;
&#xD;
//Enable checkbox&#xD;
uI_Results.getCheckbox_KPISummary().setEnabled(true);&#xD;
&#xD;
// Color all buildings of the GridConnection associated with the selected building&#xD;
if (!c_selectedObjects.get(0).c_containedGridConnections.get(0).p_ownerID.equals("-") &amp;&amp; !c_selectedObjects.get(0).c_containedGridConnections.get(0).p_ownerID.contains("woonfunctie") &amp;&amp; !c_selectedObjects.get(0).c_containedGridConnections.get(0).p_ownerID.contains("Onbekend")){&#xD;
	for (GIS_Object obj : c_selectedObjects) { //Buildings that are grouped, select as well.&#xD;
		obj.gisRegion.setFillColor(v_selectionColorAddBuildings);&#xD;
	}&#xD;
}&#xD;
&#xD;
//Check the amount of GC in building&#xD;
v_nbGridConnectionsInSelectedBuilding = b.c_containedGridConnections.size();&#xD;
&#xD;
//Multiple GC in building: set additional adress in building info + buttons&#xD;
if ( v_nbGridConnectionsInSelectedBuilding &gt; 1 ){&#xD;
	v_selectedGridConnectionIndex = 0;&#xD;
	v_clickedObjectText = "Pand met " + b.c_containedGridConnections.size() + " adressen: " + b.p_id;&#xD;
	gr_multipleBuildingInfo.setVisible(true);&#xD;
}&#xD;
else {&#xD;
	String text = "";&#xD;
	if (p_selectedProjectType == OL_ProjectType.BUSINESSPARK) {&#xD;
		if (b instanceof GIS_Building) {&#xD;
			if(b.c_containedGridConnections.get(0).p_owner.p_detailedCompany){&#xD;
				text = b.c_containedGridConnections.get(0).p_owner.p_actorID + ", ";&#xD;
			}&#xD;
			else if(((GIS_Building)b).p_annotation != null){&#xD;
				text = ((GIS_Building)b).p_annotation + ", ";&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			text = b.p_id + ", ";&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//Set adres text&#xD;
	if (c_selectedObjects.get(0).c_containedGridConnections.get(0).p_address == null || c_selectedObjects.get(0).c_containedGridConnections.get(0).p_address.getAddress() == null) {&#xD;
		text = text + "Onbekend adres";&#xD;
	}&#xD;
	else {&#xD;
		text = text + c_selectedObjects.get(0).c_containedGridConnections.get(0).p_address.getAddress();&#xD;
	}&#xD;
	&#xD;
	v_clickedObjectText = text;&#xD;
	gr_multipleBuildingInfo.setVisible(false);&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
//Update the resultsUI&#xD;
f_updateUIResultsData();&#xD;
&#xD;
//Set the button for going to the company UI (needs to be at the end of this function!)&#xD;
f_setUIButton();&#xD;
&#xD;
//alle panden met meerdere adressen hebben op dit moment (16-7-24) dezelfde functie(s) voor ieder adres, dus dit is op dit moment zinloos&#xD;
//f_listFunctions();&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707918668165</Id>
						<Name>f_deselectPreviousSelect</Name>
						<X>70</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Update for results_ui when deselecting objects to show entire area again as default option&#xD;
v_clickedObjectText = "None";&#xD;
v_clickedObjectAdress = "";&#xD;
v_clickedObjectDetails = "";&#xD;
v_clickedObjectType = null;&#xD;
button_goToUI.setVisible(false);&#xD;
gr_multipleBuildingInfo.setVisible(false);&#xD;
&#xD;
// We restore the colors of what we clicked on before&#xD;
if (v_previousClickedObjectType == OL_GISObjectType.GRIDNODE){&#xD;
	v_previousClickedGridNode = v_clickedGridNode;&#xD;
	f_styleGridNodes(v_clickedGridNode);&#xD;
	for ( Agent agent : v_previousClickedGridNode.f_getAllLowerLVLConnectedGridConnections()){	&#xD;
		if (agent instanceof GridConnection) {&#xD;
			GridConnection GC = (GridConnection)agent;&#xD;
			for (GIS_Object a : GC.c_connectedGISObjects) {&#xD;
				f_styleAreas(a);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else if (v_previousClickedObjectType == OL_GISObjectType.BUILDING ||&#xD;
		 v_previousClickedObjectType == OL_GISObjectType.SOLARFARM ||&#xD;
		 v_previousClickedObjectType == OL_GISObjectType.WINDFARM ||&#xD;
		 v_previousClickedObjectType == OL_GISObjectType.ELECTROLYSER ||&#xD;
		 v_previousClickedObjectType == OL_GISObjectType.BATTERY ||&#xD;
		 v_previousClickedObjectType == OL_GISObjectType.CHARGER ||&#xD;
		 v_previousClickedObjectType == OL_GISObjectType.PARKING){&#xD;
	for(GIS_Object previousClickedObject: c_previousSelectedObjects){&#xD;
		f_styleAreas(previousClickedObject);&#xD;
	}&#xD;
}&#xD;
&#xD;
if(v_customEnergyCoop != null){&#xD;
	energyModel.f_removeEnergyCoop(v_customEnergyCoop);&#xD;
	v_customEnergyCoop = null;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1708595258540</Id>
						<Name>f_createPrivateCompanyUI</Name>
						<Description>function used to create the private ui for each company</Description>
						<X>-260</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>int i = 0;&#xD;
&#xD;
//Create list of connection owners companies&#xD;
List&lt;ConnectionOwner&gt; c_COCompanies = findAll(energyModel.pop_connectionOwners, p -&gt; p.p_connectionOwnerType == OL_ConnectionOwnerType.COMPANY); &#xD;
&#xD;
// Give every connection owner an index nr, used to navigate to the correct private ui using the button.&#xD;
while (i &lt; c_COCompanies.size()){&#xD;
&#xD;
	ConnectionOwner CO = c_COCompanies.get(i);&#xD;
		&#xD;
	CO.p_connectionOwnerIndexNr = i;&#xD;
	i++;&#xD;
}&#xD;
&#xD;
//Create the private ui for every connection owner&#xD;
while (v_connectionOwnerIndexNr &lt; c_COCompanies.size()){&#xD;
	&#xD;
	UI_company companyUI = add_ui_companies();&#xD;
	ConnectionOwner COC = findFirst(c_COCompanies, p -&gt; p.p_connectionOwnerIndexNr == v_connectionOwnerIndexNr );	&#xD;
	&#xD;
	////Set unique parameters for every company_ui&#xD;
	companyUI.p_company = COC;&#xD;
	companyUI.p_companyName = COC.p_actorID;&#xD;
	companyUI.p_amountOfGC = COC.f_getOwnedGridConnections().size();&#xD;
&#xD;
	&#xD;
	//Links with engine&#xD;
	companyUI.c_ownedGridConnections = COC.f_getOwnedGridConnections();&#xD;
	&#xD;
	for (GridConnection GC : companyUI.c_ownedGridConnections) {&#xD;
		&#xD;
		//Get all buildings&#xD;
		companyUI.c_ownedBuildings.addAll(GC.c_connectedGISObjects);&#xD;
		&#xD;
		//Add connected trafos for each GC&#xD;
		companyUI.c_connectedTrafos.add(GC.p_parentNodeElectricID);&#xD;
	&#xD;
		//Add scenario settings for each GC&#xD;
		companyUI.c_scenarioSettings_Current.add(c_scenarioMap_Current.get(GC));&#xD;
		companyUI.c_scenarioSettings_Future.add(c_scenarioMap_Future.get(GC));&#xD;
		&#xD;
		//Initialize additional vehicles collection for each GC&#xD;
		companyUI.c_additionalVehicles.put(GC, new ArrayList&lt;J_EAVehicle&gt;());&#xD;
	}&#xD;
	&#xD;
	companyUI.p_amountOfBuildings = companyUI.c_ownedBuildings.size();&#xD;
	&#xD;
	//Initialize adress variable (changes with selected GC)&#xD;
	companyUI.v_adressGC = companyUI.c_ownedGridConnections.get(0).p_address.getAddress();&#xD;
	&#xD;
	//Set annotation as company name, if its a generic company (otherwise potentially the addres_id name)&#xD;
	if(!COC.p_detailedCompany){&#xD;
		if(companyUI.c_ownedBuildings.get(0).p_annotation != null){&#xD;
			companyUI.p_companyName = companyUI.c_ownedBuildings.get(0).p_annotation;&#xD;
		}&#xD;
	}&#xD;
&#xD;
	//Initialize the companyUI&#xD;
	companyUI.f_initializeCompanyUI();&#xD;
&#xD;
	//Add to the collection of companyUIs&#xD;
	c_companyUIs.add( companyUI );&#xD;
	&#xD;
	//set boolean for has privateUI in owner: True&#xD;
	COC.b_hasPrivateUI = true;&#xD;
	&#xD;
	v_connectionOwnerIndexNr++;&#xD;
}&#xD;
&#xD;
v_connectionOwnerIndexNr = 0;&#xD;
&#xD;
//Get the ghost vehicles for the transport slider tab&#xD;
Triple&lt;Integer, Integer, Integer&gt; triple = uI_Tabs.pop_tabMobility.get(0).f_calculateNumberOfGhostVehicles( new ArrayList&lt;GridConnection&gt;(energyModel.UtilityConnections.findAll( x -&gt; true)) );&#xD;
uI_Tabs.pop_tabMobility.get(0).v_totalNumberOfGhostVehicle_Cars = triple.getFirst();&#xD;
uI_Tabs.pop_tabMobility.get(0).v_totalNumberOfGhostVehicle_Vans = triple.getSecond();&#xD;
uI_Tabs.pop_tabMobility.get(0).v_totalNumberOfGhostVehicle_Trucks = triple.getThird();&#xD;
//Get the ghost heating systems&#xD;
Pair&lt;Integer, Integer&gt; pair = uI_Tabs.pop_tabHeating.get(0).f_calculateNumberOfGhostHeatingSystems( energyModel.UtilityConnections.findAll( x -&gt; true) );&#xD;
uI_Tabs.pop_tabHeating.get(0).v_totalNumberOfGhostHeatingSystems_ElectricHeatpumps = pair.getFirst();&#xD;
uI_Tabs.pop_tabHeating.get(0).v_totalNumberOfGhostHeatingSystems_HybridHeatpumps = pair.getSecond();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1709716821854</Id>
						<Name>f_connectResultsUI</Name>
						<X>-670</X>
						<Y>631</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Style resultsUI&#xD;
f_styleResultsUI();&#xD;
&#xD;
//Set ResultsUI radiobutton setup&#xD;
if(settings.resultsUIRadioButtonSetup() != null){&#xD;
	uI_Results.v_selectedRadioButtonSetup = settings.resultsUIRadioButtonSetup();&#xD;
}&#xD;
&#xD;
//Connect resultsUI&#xD;
uI_Results.f_initializeResultsUI();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1709718252272</Id>
						<Name>f_resetSettings</Name>
						<X>1600</X>
						<Y>-280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(!b_runningMainInterfaceScenarios){&#xD;
	b_resultsUpToDate = false;&#xD;
	gr_simulateYearScreenSmall.setVisible(true);&#xD;
	&#xD;
	// Switch to the live plots and do not allow the user to switch away from the live plot when the year is not yet simulated&#xD;
	energyModel.f_updateActiveAssetsMetaData();&#xD;
	f_enableLivePlotsOnly(uI_Results);&#xD;
	&#xD;
	&#xD;
	//Set simulation and live graph for companyUIs as well!&#xD;
	for(UI_company companyUI : c_companyUIs){&#xD;
		if(companyUI.uI_Results.f_getSelectedObjectData() != null){&#xD;
			f_enableLivePlotsOnly(companyUI.uI_Results);&#xD;
		}&#xD;
	}&#xD;
	runSimulation();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714130288661</Id>
						<Name>f_initialPVSystemsOrder</Name>
						<X>85</X>
						<Y>-680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>List&lt;GCHouse&gt; houses = new ArrayList&lt;GCHouse&gt;(energyModel.Houses.findAll( x -&gt; true));&#xD;
List&lt;GCHouse&gt; housesWithoutPV = houses.stream().filter( gc -&gt; !gc.v_liveAssetsMetaData.hasPV ).collect(Collectors.toList());&#xD;
List&lt;GCHouse&gt; housesWithPV = new ArrayList&lt;&gt;(houses);&#xD;
housesWithPV.removeAll(housesWithoutPV);&#xD;
&#xD;
c_orderedPVSystemsHouses = new ArrayList&lt;&gt;(housesWithoutPV);&#xD;
c_orderedPVSystemsHouses.addAll(housesWithPV);&#xD;
&#xD;
&#xD;
List&lt;GCUtility&gt; companies = new ArrayList&lt;GCUtility&gt;(energyModel.UtilityConnections.findAll( x -&gt; true));&#xD;
List&lt;GCUtility&gt; companiesWithoutPV = companies.stream().filter( gc -&gt; !gc.v_liveAssetsMetaData.hasPV ).collect(Collectors.toList());&#xD;
List&lt;GCUtility&gt; companiesWithPV = companies.stream().filter( gc -&gt; gc.v_liveAssetsMetaData.hasPV ).collect(Collectors.toList());&#xD;
List&lt;GCUtility&gt; detailedCompaniesWithPV = companiesWithPV.stream().filter( gc -&gt; gc.p_owner != null &amp;&amp; gc.p_owner.p_detailedCompany ).collect(Collectors.toList());&#xD;
List&lt;GCUtility&gt; genericCompaniesWithPV = new ArrayList&lt;&gt;(companiesWithPV);&#xD;
genericCompaniesWithPV.removeAll(detailedCompaniesWithPV);&#xD;
&#xD;
c_orderedPVSystemsCompanies = new ArrayList&lt;&gt;(companiesWithoutPV);&#xD;
c_orderedPVSystemsCompanies.addAll(genericCompaniesWithPV);&#xD;
c_orderedPVSystemsCompanies.addAll(detailedCompaniesWithPV);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714130342440</Id>
						<Name>f_initialElectricVehiclesOrder</Name>
						<X>85</X>
						<Y>-660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// First we make a copy of all the vehicle energy assets&#xD;
List&lt;J_EA&gt; EAs = new ArrayList&lt;&gt;(findAll(energyModel.f_getEnergyAssets(), ea -&gt; !(ea.getParentAgent() instanceof GCPublicCharger)));&#xD;
EAs = EAs.stream().filter(ea -&gt; ea instanceof J_EAVehicle).collect(Collectors.toList());&#xD;
// Find all the EVs at the start of the simulation&#xD;
ArrayList&lt;J_EA&gt; otherEAs = EAs.stream().filter(ea -&gt; !(ea instanceof J_EAEV)).collect(Collectors.toCollection(ArrayList::new));&#xD;
// We make sure that the EVs at the start of the simulation are the last in the list&#xD;
&#xD;
//traceln("amount of EVs at start: " + EAEVs.size());&#xD;
//traceln("amount of other EAs at start: " + otherEAs.size());&#xD;
&#xD;
if(c_companyUIs.size() == 0){ // Dont add the ev to the pool if there are companyUIs&#xD;
	ArrayList&lt;J_EA&gt; EAEVs = EAs.stream().filter(ea -&gt; (ea instanceof J_EAEV)).collect(Collectors.toCollection(ArrayList::new));&#xD;
	otherEAs.addAll(EAEVs);&#xD;
}&#xD;
&#xD;
c_orderedVehicles = otherEAs;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714131269202</Id>
						<Name>f_initialHeatingSystemsOrder</Name>
						<X>85</X>
						<Y>-640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>List&lt;GCHouse&gt; houses = new ArrayList&lt;GCHouse&gt;(energyModel.Houses.findAll( x -&gt; true));&#xD;
List&lt;GCHouse&gt; housesWithoutHP = houses.stream().filter( gc -&gt; gc.p_heatingType != OL_GridConnectionHeatingType.HEATPUMP_AIR ).collect(Collectors.toList());&#xD;
List&lt;GCHouse&gt; housesWithHP = new ArrayList&lt;&gt;(houses);&#xD;
housesWithHP.removeAll(housesWithoutHP);&#xD;
&#xD;
c_orderedHeatingSystemsHouses = new ArrayList&lt;&gt;(housesWithoutHP);&#xD;
c_orderedHeatingSystemsHouses.addAll(housesWithHP);&#xD;
&#xD;
&#xD;
List&lt;GCUtility&gt; companies = new ArrayList&lt;GCUtility&gt;(energyModel.UtilityConnections.findAll( gc -&gt; gc.p_heatingType != OL_GridConnectionHeatingType.NONE));&#xD;
List&lt;GCUtility&gt; companiesWithoutHP = companies.stream().filter( gc -&gt; gc.p_heatingType != OL_GridConnectionHeatingType.HEATPUMP_AIR).collect(Collectors.toList());&#xD;
List&lt;GCUtility&gt; companiesWithHP = companies.stream().filter( gc -&gt; gc.p_heatingType == OL_GridConnectionHeatingType.HEATPUMP_AIR ).collect(Collectors.toList());&#xD;
List&lt;GCUtility&gt; detailedCompaniesWithHP = companiesWithHP.stream().filter( gc -&gt; gc.p_owner != null &amp;&amp; gc.p_owner.p_detailedCompany ).collect(Collectors.toList());&#xD;
List&lt;GCUtility&gt; genericCompaniesWithHP = new ArrayList&lt;&gt;(companiesWithHP);&#xD;
genericCompaniesWithHP.removeAll(detailedCompaniesWithHP);&#xD;
&#xD;
c_orderedHeatingSystemsCompanies = new ArrayList&lt;&gt;(companiesWithoutHP);&#xD;
c_orderedHeatingSystemsCompanies.addAll(genericCompaniesWithHP);&#xD;
c_orderedHeatingSystemsCompanies.addAll(detailedCompaniesWithHP);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714135623471</Id>
						<Name>f_initalAssetOrdering</Name>
						<X>70</X>
						<Y>-700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>f_initialElectricVehiclesOrder();&#xD;
f_initialPVSystemsOrder();&#xD;
f_initialHeatingSystemsOrder();&#xD;
f_initialParkingSpacesOrder();&#xD;
f_initialHouseholdOrder();&#xD;
f_initialChargerOrder();&#xD;
f_projectSpecificOrderedCollectionAdjustments();&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715116336665</Id>
						<Name>f_setColorsBasedOnElectricityConsumption</Name>
						<X>1960</X>
						<Y>1610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>if(gis_area.c_containedGridConnections.size() &gt; 0){&#xD;
&#xD;
	double yearlyEnergyConsumption = sum( gis_area.c_containedGridConnections, x -&gt; x.v_rapidRunData.getTotalElectricityConsumed_MWh());&#xD;
	&#xD;
	if ( yearlyEnergyConsumption &lt; 10){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption1.getFillColor(), null, null, null);}&#xD;
	else if ( yearlyEnergyConsumption &lt; 50){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption2.getFillColor(), null, null, null);}&#xD;
	else if ( yearlyEnergyConsumption &lt; 150){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption3.getFillColor(), null, null, null);}&#xD;
	else if ( yearlyEnergyConsumption &lt; 500){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption4.getFillColor(), null, null, null);}&#xD;
	else if ( yearlyEnergyConsumption &gt; 500){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption5.getFillColor(), null, null, null);}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715118739710</Id>
						<Name>f_setColorsBasedOnProduction</Name>
						<X>1960</X>
						<Y>1680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>if (gis_area.c_containedGridConnections.size() &gt; 0) {&#xD;
	if (gis_area.c_containedGridConnections.get(0).v_liveAssetsMetaData.hasPV) {&#xD;
		if (gis_area.c_containedGridConnections.get(0).c_productionAssets.get(0).getCapacityElectric_kW() &lt; 100){&#xD;
			gis_area.f_style(rect_mapOverlayLegend_PVProduction2.getFillColor(), null, null, null);&#xD;
		}&#xD;
		else {&#xD;
			gis_area.f_style(rect_mapOverlayLegend_PVProduction3.getFillColor(), null, null, null);&#xD;
		}&#xD;
		return;&#xD;
	}&#xD;
	gis_area.f_style(rect_mapOverlayLegend_PVProduction1.getFillColor(), null, null, null);&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715157302225</Id>
						<Name>f_projectSpecificSettings</Name>
						<X>-670</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Should be overridden in child interface!!!&#xD;
traceln("Forgot to override project specific settings!!");</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715859145993</Id>
						<Name>f_UIStartup</Name>
						<X>-670</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// UI elements&#xD;
&#xD;
// We call this function to set the parameters so there is no nullpointer errors, but its not loading the correct values yet FIX Later to remove this call.&#xD;
f_initalAssetOrdering();&#xD;
&#xD;
//Connect the results UI&#xD;
f_connectResultsUI();&#xD;
&#xD;
//Initialize the UI elements (positioning, etc.)&#xD;
f_setUITabs();&#xD;
&#xD;
//Project specific settings&#xD;
f_projectSpecificSettings();&#xD;
&#xD;
// Create the Private UI for companies&#xD;
f_createAdditionalUIs();&#xD;
button_goToUI.setVisible(false);&#xD;
&#xD;
// Now that the sliders are set we can load the correct starting values&#xD;
f_initalAssetOrdering();&#xD;
&#xD;
//Create and set the grid topology colors (Netvlakken)&#xD;
f_setGridTopologyColors();&#xD;
&#xD;
//Initialize the sliders of the main UI&#xD;
f_setSliderPresets();&#xD;
&#xD;
//Initialize the legend&#xD;
f_initializeLegend();&#xD;
&#xD;
//Disable cable button if no cables have been loaded in&#xD;
if(c_LVCables.size() == 0 &amp;&amp; c_MVCables.size() == 0){&#xD;
	checkbox_cabels.setVisible(false);&#xD;
}&#xD;
&#xD;
//Disable summary button if summary is not selected&#xD;
if(settings.showKPISummary() == null || !settings.showKPISummary()){&#xD;
	uI_Results.getCheckbox_KPISummary().setVisible(false);&#xD;
}&#xD;
&#xD;
if(settings.isPublicModel()){&#xD;
	f_changeDefaultColorOfPrivateGC();&#xD;
}&#xD;
&#xD;
//Turn on update of live congestion colloring&#xD;
b_updateLiveCongestionColors = true;&#xD;
&#xD;
//Initialize map overlay buttons&#xD;
f_initializeMapOverlayRadioButton();&#xD;
&#xD;
&#xD;
//Set order of certain layovers and submenus&#xD;
presentation.remove(gr_sliderClickBlocker);&#xD;
presentation.insert(presentation.size(), gr_sliderClickBlocker);&#xD;
presentation.remove(gr_forceMapSelection);&#xD;
presentation.insert(presentation.size(), gr_forceMapSelection);&#xD;
presentation.remove(gr_filterInterface);&#xD;
presentation.insert(presentation.size(), gr_filterInterface);&#xD;
presentation.remove(gr_infoText);&#xD;
presentation.insert(presentation.size(), gr_infoText);&#xD;
	</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>GISRegion</ReturnType>
						<Id>1715868403475</Id>
						<Name>f_createGISObject</Name>
						<Description>Functino used by the loader to create new GIS objects on the GIS map</Description>
						<X>-280</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gisTokens</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>GISRegion gisregion = new GISRegion(map, gisTokens);&#xD;
return gisregion;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1716419446045</Id>
						<Name>f_enableTraceln</Name>
						<X>-480</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>originalPrintStream</Name>
							<Type>PrintStream</Type>
						</Parameter>
						<Body>System.setOut(originalPrintStream);</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>PrintStream</ReturnType>
						<Id>1716419448047</Id>
						<Name>f_disableTraceln</Name>
						<X>-480</X>
						<Y>-120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>PrintStream originalPrintStream = System.out;&#xD;
&#xD;
System.setOut(new PrintStream(new OutputStream() {&#xD;
        public void write(int b) {&#xD;
        }&#xD;
    }));&#xD;
return originalPrintStream;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1718263685462</Id>
						<Name>f_setColorsBasedOnConsumptionProfileHouseholds</Name>
						<X>1960</X>
						<Y>1630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>double yearlyEnergyConsumption = 0;&#xD;
for( GridConnection gc : gis_area.c_containedGridConnections){&#xD;
	if(gc.v_rapidRunData != null){&#xD;
		yearlyEnergyConsumption += gc.v_rapidRunData.getTotalElectricityConsumed_MWh();&#xD;
	}&#xD;
	else{&#xD;
		for ( J_EAConsumption consumptionAsset : gc.c_consumptionAssets){&#xD;
			if( consumptionAsset.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ){&#xD;
				yearlyEnergyConsumption += consumptionAsset.yearlyDemand_kWh;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
if ( yearlyEnergyConsumption == 0) { gis_area.f_style( v_unknownConsumptionColor, null, null, null );}&#xD;
else if ( yearlyEnergyConsumption &lt; 1500){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption1.getFillColor(), null, null, null);}&#xD;
else if ( yearlyEnergyConsumption &lt; 2500){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption2.getFillColor(), null, null, null);}&#xD;
else if ( yearlyEnergyConsumption &lt; 4000){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption3.getFillColor(), null, null, null);}&#xD;
else if ( yearlyEnergyConsumption &lt; 6000){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption4.getFillColor(), null, null, null);}&#xD;
else if ( yearlyEnergyConsumption &gt; 6000){ gis_area.f_style( rect_mapOverlayLegend_ElectricityConsumption5.getFillColor(), null, null, null);}&#xD;
	&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1718265697364</Id>
						<Name>f_setColorsBasedOnProductionHouseholds</Name>
						<X>1960</X>
						<Y>1700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>if (gis_area.c_containedGridConnections.size() &gt; 0) {&#xD;
	if (gis_area.c_containedGridConnections.get(0).v_liveAssetsMetaData.hasPV) {&#xD;
		if (gis_area.c_containedGridConnections.get(0).c_productionAssets.get(0).getCapacityElectric_kW() &lt; 5){&#xD;
			gis_area.f_style( rect_mapOverlayLegend_PVProduction2.getFillColor(), null, null, null );&#xD;
		}&#xD;
		else {&#xD;
			gis_area.f_style( rect_mapOverlayLegend_PVProduction3.getFillColor(), null, null, null );&#xD;
		}&#xD;
		return;&#xD;
	}&#xD;
}&#xD;
gis_area.f_style( rect_mapOverlayLegend_PVProduction1.getFillColor(), null, null, null );&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1718288402102</Id>
						<Name>f_updateMainInterfaceSliders</Name>
						<X>-670</X>
						<Y>771</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// ATTENTION: If you have custom tabs it may be neccesary to override this function and add updates to your custom sliders!&#xD;
&#xD;
// PV SYSTEMS:&#xD;
//double PVsystems = count(energyModel.UtilityConnections, x-&gt;x.v_liveAssetsMetaData.hasPV == true &amp;&amp; x.v_isActive);		&#xD;
//int PV_pct = roundToInt(100 * PVsystems / count(energyModel.UtilityConnections, x-&gt;x.v_isActive));&#xD;
Pair&lt;Double, Double&gt; pair = uI_Tabs.pop_tabElectricity.get(0).f_getPVSystemPercentage( new ArrayList&lt;GridConnection&gt;(findAll(energyModel.UtilityConnections, x -&gt; x.v_isActive) ) );&#xD;
int PV_pct = roundToInt(100.0 * pair.getFirst() / pair.getSecond());&#xD;
uI_Tabs.pop_tabElectricity.get(0).getSliderRooftopPVCompanies_pct().setValue(PV_pct, false);&#xD;
&#xD;
// GAS_BURNER / HEATING SYSTEMS: // Still a slight error. GasBurners + HeatPumps != total, because some GC have primary heating asset null&#xD;
int GasBurners = count(energyModel.UtilityConnections, gc-&gt;gc.p_primaryHeatingAsset instanceof J_EAConversionGasBurner &amp;&amp; gc.v_isActive);&#xD;
int GasBurners_pct = roundToInt(100.0 * GasBurners / (count(energyModel.UtilityConnections, x -&gt; x.v_isActive &amp;&amp; x.p_primaryHeatingAsset != null) + uI_Tabs.pop_tabHeating.get(0).v_totalNumberOfGhostHeatingSystems_ElectricHeatpumps + uI_Tabs.pop_tabHeating.get(0).v_totalNumberOfGhostHeatingSystems_HybridHeatpumps));&#xD;
&#xD;
uI_Tabs.pop_tabHeating.get(0).getSliderGasBurnerCompanies_pct().setValue(GasBurners_pct, false);&#xD;
uI_Tabs.pop_tabHeating.get(0).f_setHeatingSliders( 0, uI_Tabs.pop_tabHeating.get(0).getSliderGasBurnerCompanies_pct(), uI_Tabs.pop_tabHeating.get(0).getSliderElectricHeatPumpCompanies_pct(), null, null );&#xD;
&#xD;
uI_Tabs.pop_tabHeating.get(0).getSliderHeatDemandSlidersCompaniesGasBurnerCompanies_pct().setValue(GasBurners_pct, false);&#xD;
uI_Tabs.pop_tabHeating.get(0).f_setHeatingSliders( 0, uI_Tabs.pop_tabHeating.get(0).getSliderHeatDemandSlidersCompaniesGasBurnerCompanies_pct(), uI_Tabs.pop_tabHeating.get(0).getSliderHeatDemandSlidersCompaniesElectricHeatPumpCompanies_pct(), null, null );&#xD;
&#xD;
&#xD;
// HEAT_PUMP_AIR:&#xD;
//		int HeatPumps = count(energyModel.UtilityConnections, gc-&gt;gc.p_primaryHeatingAsset instanceof J_EAConversionHeatPump);&#xD;
//		int HeatPumps_pct = roundToInt(100 * HeatPumps / energyModel.UtilityConnections.size());&#xD;
//		sl_electricHeatPumpCompanies.setValue(HeatPumps_pct, false);&#xD;
//		f_setHeatingSlidersCompanies(1);&#xD;
	&#xD;
// TRUCKS:&#xD;
int DieselTrucks = 0;&#xD;
int ElectricTrucks = uI_Tabs.pop_tabMobility.get(0).v_totalNumberOfGhostVehicle_Trucks;&#xD;
int HydrogenTrucks = 0;&#xD;
for (GCUtility gc : energyModel.UtilityConnections) {&#xD;
	if(gc.v_isActive){&#xD;
		for (J_EAVehicle vehicle : gc.c_vehicleAssets) {&#xD;
			if (vehicle instanceof J_EADieselVehicle &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.DIESEL_TRUCK) {&#xD;
				DieselTrucks += 1;&#xD;
			}&#xD;
			else if (vehicle instanceof J_EAEV &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.ELECTRIC_TRUCK) {&#xD;
				ElectricTrucks += 1;&#xD;
			}&#xD;
			else if (vehicle instanceof J_EAHydrogenVehicle &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.HYDROGEN_TRUCK) {&#xD;
				HydrogenTrucks += 1;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
int totalTrucks = DieselTrucks + ElectricTrucks + HydrogenTrucks;&#xD;
int DieselTrucks_pct = 100;&#xD;
int ElectricTrucks_pct = 0;&#xD;
int HydrogenTrucks_pct = 0;&#xD;
if (totalTrucks != 0) {&#xD;
	DieselTrucks_pct = roundToInt(100.0 * DieselTrucks / totalTrucks);&#xD;
	ElectricTrucks_pct = roundToInt(100.0 * ElectricTrucks / totalTrucks);&#xD;
	HydrogenTrucks_pct = roundToInt(100.0 * HydrogenTrucks / totalTrucks);&#xD;
}&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderFossilFuelTrucks_pct().setValue(DieselTrucks_pct, false);&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderElectricTrucks_pct().setValue(ElectricTrucks_pct, false);&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderHydrogenTrucks_pct().setValue(HydrogenTrucks_pct, false);&#xD;
&#xD;
// VANS:&#xD;
int DieselVans = 0;&#xD;
int ElectricVans = uI_Tabs.pop_tabMobility.get(0).v_totalNumberOfGhostVehicle_Vans;&#xD;
int HydrogenVans = 0;&#xD;
for (GCUtility gc : energyModel.UtilityConnections) {&#xD;
	if(gc.v_isActive){&#xD;
		for (J_EAVehicle vehicle : gc.c_vehicleAssets) {&#xD;
			if (vehicle instanceof J_EADieselVehicle &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.DIESEL_VAN) {&#xD;
				DieselVans += 1;&#xD;
			}&#xD;
			else if (vehicle instanceof J_EAEV &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.ELECTRIC_VAN) {&#xD;
				ElectricVans += 1;&#xD;
			}&#xD;
			else if (vehicle instanceof J_EAHydrogenVehicle &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.HYDROGEN_VAN) {&#xD;
				HydrogenVans += 1;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
int totalVans = DieselVans + ElectricVans + HydrogenVans;&#xD;
int DieselVans_pct = 100;&#xD;
int ElectricVans_pct = 0;&#xD;
int HydrogenVans_pct = 0;&#xD;
if (totalVans != 0) {&#xD;
	DieselVans_pct = roundToInt(100.0 * DieselVans / totalVans);&#xD;
	ElectricVans_pct = roundToInt(100.0 * ElectricVans / totalVans);&#xD;
	HydrogenVans_pct = roundToInt(100.0 * HydrogenVans / totalVans);&#xD;
}&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderFossilFuelVans_pct().setValue(DieselVans_pct, false);&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderElectricVans_pct().setValue(ElectricVans_pct, false);&#xD;
//sl_hydrogenVans.setValue(HydrogenVans_pct, false);&#xD;
		&#xD;
// DIESEL_VEHICLE:  // Currently only for Company Cars not household Cars / EVs&#xD;
int DieselCars = 0;&#xD;
int ElectricCars = uI_Tabs.pop_tabMobility.get(0).v_totalNumberOfGhostVehicle_Cars;&#xD;
int HydrogenCars = 0;&#xD;
for (GCUtility gc : energyModel.UtilityConnections) {&#xD;
	if(gc.v_isActive){&#xD;
		for (J_EAVehicle vehicle : gc.c_vehicleAssets) {&#xD;
			if (vehicle instanceof J_EADieselVehicle &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.DIESEL_VEHICLE) {&#xD;
				DieselCars += 1;&#xD;
			}&#xD;
			else if (vehicle instanceof J_EAEV &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.ELECTRIC_VEHICLE) {&#xD;
				ElectricCars += 1;&#xD;
			}&#xD;
			else if (vehicle instanceof J_EAHydrogenVehicle &amp;&amp; vehicle.getEAType() == OL_EnergyAssetType.HYDROGEN_VEHICLE) {&#xD;
				HydrogenCars += 1;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
int totalCars = DieselCars + ElectricCars + HydrogenCars;&#xD;
int DieselCars_pct = 100;&#xD;
int ElectricCars_pct = 0;&#xD;
int HydrogenCars_pct = 0;&#xD;
if (totalCars != 0) {&#xD;
	DieselCars_pct = roundToInt((100.0 * DieselCars) / totalCars);&#xD;
	ElectricCars_pct = roundToInt((100.0 * ElectricCars) / totalCars);&#xD;
	HydrogenCars_pct = roundToInt((100.0 * HydrogenCars) / totalCars);&#xD;
}&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderFossilFuelCars_pct().setValue(DieselCars_pct, false);&#xD;
uI_Tabs.pop_tabMobility.get(0).getSliderElectricCars_pct().setValue(ElectricCars_pct, false);&#xD;
//sl_hydrogenCars.setValue(HydrogenCars_pct, false);&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1718552624959</Id>
						<Name>f_selectCharger</Name>
						<X>70</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>charger</Name>
							<Type>GCPublicCharger</Type>
						</Parameter>
						<Parameter>
							<Name>objectGIS</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>objectGIS.gisRegion.setFillColor( v_selectionColor );&#xD;
objectGIS.gisRegion.setLineColor( orange );&#xD;
&#xD;
//set info text&#xD;
v_clickedObjectText = ""; //charger.p_CPOName + " laadpunt, ";&#xD;
if (charger.p_address == null || charger.p_address.getAddress() == null) {&#xD;
	v_clickedObjectAdress = "Onbekend adres";&#xD;
}&#xD;
else{&#xD;
	v_clickedObjectAdress = charger.p_address.getStreetName();&#xD;
}&#xD;
v_clickedObjectDetails = "No detaild info of charger available";&#xD;
&#xD;
//v_clickedGridConnection = charger;&#xD;
c_selectedGridConnections = new ArrayList&lt;GridConnection&gt;(Arrays.asList(charger));&#xD;
uI_Results.f_updateResultsUI(c_selectedGridConnections.get(0));&#xD;
&#xD;
//Set the UI button&#xD;
f_setUIButton();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1718566260603</Id>
						<Name>f_setColorsBasedOnGridTopology_objects</Name>
						<X>1960</X>
						<Y>1750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>if (gis_area.c_containedGridConnections.size() &gt; 0) {&#xD;
	Color c = gis_area.c_containedGridConnections.get(0).p_parentNodeElectric.p_uniqueColor;&#xD;
	gis_area.f_style(c, black, 1.0, null);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1719830600300</Id>
						<Name>f_getWeatherInfo</Name>
						<X>1240</X>
						<Y>-280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_outsideTemperature = roundToDecimal(energyModel.v_currentAmbientTemperature_degC, 1);&#xD;
v_solarIrradiance = roundToInt(energyModel.v_currentSolarPowerNormalized_r * 1200);&#xD;
&#xD;
double windspeed = roundToDecimal(energyModel.v_currentWindPowerNormalized_r, 1);&#xD;
if (windspeed &lt; 0.2){&#xD;
	v_windspeed = "Laag";&#xD;
}&#xD;
else if (windspeed &lt; 0.6){&#xD;
	v_windspeed = "Midden";&#xD;
}&#xD;
else if (windspeed &lt; 0.8){&#xD;
	v_windspeed = "Hoog";&#xD;
}&#xD;
else {&#xD;
	v_windspeed = "Zeer hoog";&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1720793723819</Id>
						<Name>f_updateUIResultsData</Name>
						<X>80</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GridConnection gc : c_selectedObjects.get(0).c_containedGridConnections) {&#xD;
	if (!c_selectedGridConnections.contains(gc)) {&#xD;
		c_selectedGridConnections.add(gc);&#xD;
	}&#xD;
}&#xD;
&#xD;
if(c_selectedGridConnections.size()&gt;1){&#xD;
	v_customEnergyCoop = energyModel.f_addEnergyCoop(c_selectedGridConnections);&#xD;
	uI_Results.f_updateResultsUI(v_customEnergyCoop);&#xD;
}&#xD;
else{&#xD;
	uI_Results.f_updateResultsUI(c_selectedGridConnections.get(0));&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721991420806</Id>
						<Name>f_setGridTopologyColors</Name>
						<X>-650</X>
						<Y>511</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Find all MV substations&#xD;
List&lt;GridNode&gt; MVsubstations = findAll(energyModel.pop_gridNodes, GN -&gt; GN.p_nodeType == OL_GridNodeType.SUBMV);&#xD;
&#xD;
if(MVsubstations != null || p_selectedProjectType == OL_ProjectType.RESIDENTIAL){&#xD;
	b_gridLoopsAreDefined = true;&#xD;
}&#xD;
&#xD;
v_amountOfDefinedGridLoops = 0;&#xD;
&#xD;
if(MVsubstations != null){&#xD;
	//Set all unique grid topology colors for each substation and its children if the gridloops are defined&#xD;
	for (GridNode MVsub : MVsubstations){&#xD;
		&#xD;
		//Create a unique color from a spectrum and assign it to the subMV&#xD;
		MVsub.p_uniqueColor = spectrumColor(v_amountOfDefinedGridLoops, MVsubstations.size());&#xD;
		&#xD;
		//Assign unique color to all underlying grid nodes&#xD;
		MVsub.f_getLowerLVLConnectedGridNodes().forEach(GN -&gt; GN.p_uniqueColor = MVsub.p_uniqueColor);&#xD;
		&#xD;
		//Update spectrum color index and total defined colours&#xD;
		v_amountOfDefinedGridLoops++;&#xD;
	}&#xD;
}&#xD;
else if(p_selectedProjectType == OL_ProjectType.RESIDENTIAL){&#xD;
	int totalNotToplevelGridNodes = energyModel.f_getGridNodesNotTopLevel().size();&#xD;
	//Set all unique grid topology colors for each substation and its children if the gridloops are defined&#xD;
	for (GridNode node : energyModel.f_getGridNodesNotTopLevel()){&#xD;
		&#xD;
		//Create a unique color from a spectrum and assign it to the subMV&#xD;
		node.p_uniqueColor = spectrumColor(v_amountOfDefinedGridLoops, totalNotToplevelGridNodes);&#xD;
&#xD;
		//Update spectrum color index and total defined colours&#xD;
		v_amountOfDefinedGridLoops++;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721991963719</Id>
						<Name>f_styleSUBMV</Name>
						<X>-650</X>
						<Y>451</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gisregion</Name>
							<Type>GISRegion</Type>
						</Parameter>
						<Body>gisregion.setVisible(false);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721992103665</Id>
						<Name>f_styleMVMV</Name>
						<X>-650</X>
						<Y>431</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gisregion</Name>
							<Type>GISRegion</Type>
						</Parameter>
						<Body>gisregion.setFillColor(v_MVMVNodeColor);&#xD;
gisregion.setLineStyle( LINE_STYLE_SOLID );&#xD;
gisregion.setLineColor( v_MVMVLineColor );&#xD;
gisregion.setLineWidth(2);</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721049341787</Id>
						<Name>f_listFunctions</Name>
						<X>80</X>
						<Y>1180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(c_selectedObjects.get(0).c_containedGridConnections.size() &gt; 1){&#xD;
	HashMap&lt;String, Integer&gt; functionsList = new HashMap&lt;String, Integer&gt;();&#xD;
	&#xD;
	for (int i = 0; i &lt; c_selectedObjects.get(0).c_containedGridConnections.size(); i++) {&#xD;
		//split functies als er meerdere zijn&#xD;
		String[] splitFunctions = c_selectedObjects.get(0).c_containedGridConnections.get(i).p_purposeBAG.split(",");&#xD;
		&#xD;
		for (int j = 0; j &lt; splitFunctions.length; j++) {&#xD;
			// als de key al bestaat, itereer&#xD;
			if (functionsList.get(splitFunctions[j]) != null) {&#xD;
				functionsList.put(splitFunctions[j], functionsList.get(splitFunctions[j]) + 1);&#xD;
			}&#xD;
			// zo niet, voeg toe&#xD;
			else {&#xD;
				functionsList.put(splitFunctions[j],1);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	/*&#xD;
	for (String i : functionsList.keySet()) {&#xD;
		traceln(i + ": " + functionsList.get(i));&#xD;
	}&#xD;
	*/&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724857887019</Id>
						<Name>f_createAdditionalUIs</Name>
						<X>-280</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create the additional dashboards, control panels and private UIs&#xD;
&#xD;
//Create PrivateUIs&#xD;
if (p_selectedProjectType == BUSINESSPARK){&#xD;
	f_createPrivateCompanyUI();&#xD;
}&#xD;
&#xD;
//Create Hydrogen UI&#xD;
//f_createHydrogenUI();&#xD;
&#xD;
&#xD;
//Create Battery UI&#xD;
//f_createBatteryUI();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724857983890</Id>
						<Name>f_createHydrogenUI</Name>
						<X>-260</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create the hydrogen ui&#xD;
UI_Hydrogen hydrogenUI = add_ui_Hydrogen();&#xD;
&#xD;
//Fill list of connection owners companies &#xD;
hydrogenUI.c_connectionOwners_Hydrogen.addAll(findAll(energyModel.pop_connectionOwners, co -&gt; co.p_connectionOwnerType == OL_ConnectionOwnerType.ELECTROLYSER_OP)); &#xD;
&#xD;
//Fill the hydrogen GC collection (For now only searched for Electrolyser_OP, what about (the non existing) Fuelcell_OP &#xD;
for(ConnectionOwner COHydrogen : hydrogenUI.c_connectionOwners_Hydrogen){&#xD;
	hydrogenUI.c_gridConnections_Hydrogen.addAll(findAll(&#xD;
    COHydrogen.f_getOwnedGridConnections(), gc -&gt; gc instanceof GCEnergyConversion &amp;&amp; (&#xD;
    gc.c_energyAssets.stream().anyMatch(asset -&gt; asset instanceof J_EAConversionElectrolyser) ||&#xD;
    gc.c_energyAssets.stream().anyMatch(asset -&gt; asset instanceof J_EAConversionFuelCell) ||&#xD;
    gc.c_energyAssets.stream().anyMatch(asset -&gt; asset instanceof J_EAStorageGas)    )));&#xD;
}&#xD;
&#xD;
&#xD;
for (GridConnection GC : hydrogenUI.c_gridConnections_Hydrogen) {&#xD;
&#xD;
	//Add all GIS objects&#xD;
	hydrogenUI.c_GISObjects_Hydrogen.addAll(GC.c_connectedGISObjects);&#xD;
	&#xD;
	//Add connected gridnodes for each GC&#xD;
	hydrogenUI.c_connectedGridNodes.add(GC.p_parentNodeElectricID);&#xD;
	&#xD;
	//Find all energy assets and add them to the correct collection&#xD;
	List&lt;J_EAConversion&gt; electrolysers = findAll(GC.c_conversionAssets, asset -&gt; asset instanceof J_EAConversionElectrolyser);&#xD;
	List&lt;J_EAStorage&gt; storages = findAll(GC.c_storageAssets, asset -&gt; asset instanceof J_EAStorageGas);&#xD;
	List&lt;J_EAConversion&gt; fuelcells = findAll(GC.c_conversionAssets, asset -&gt; asset instanceof J_EAConversionFuelCell);&#xD;
	&#xD;
	electrolysers.forEach(asset -&gt; hydrogenUI.c_hydrogenElectrolysers.add((J_EAConversionElectrolyser)asset));&#xD;
	storages.forEach(asset -&gt; hydrogenUI.c_hydrogenStorages.add((J_EAStorageGas)asset));&#xD;
	fuelcells.forEach(asset -&gt; hydrogenUI.c_hydrogenFuelCells.add((J_EAConversionFuelCell)asset));&#xD;
}&#xD;
&#xD;
&#xD;
//Totals&#xD;
hydrogenUI.p_amountOfGC = hydrogenUI.c_gridConnections_Hydrogen.size();&#xD;
hydrogenUI.p_amountOfGISObjects = hydrogenUI.c_GISObjects_Hydrogen.size();&#xD;
&#xD;
&#xD;
//Initialize the UI&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
//Add to the collection of UIs ???&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724858039724</Id>
						<Name>f_createBatteryUI</Name>
						<X>-260</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create the hydrogen ui&#xD;
UI_Battery batteryUI = add_ui_Battery();&#xD;
&#xD;
//Fill list of connection owners companies &#xD;
batteryUI.c_connectionOwners_Battery.addAll(findAll(energyModel.pop_connectionOwners, co -&gt; co.p_connectionOwnerType == OL_ConnectionOwnerType.BATTERY_OP)); &#xD;
&#xD;
//Fill the hydrogen GC collection (For now only searched for Electrolyser_OP, what about (the non existing) Fuelcell_OP &#xD;
for(ConnectionOwner COBattery : batteryUI.c_connectionOwners_Battery){&#xD;
	batteryUI.c_gridConnections_Battery.addAll(findAll(&#xD;
    COBattery.f_getOwnedGridConnections(), gc -&gt; gc instanceof GCGridBattery &amp;&amp;&#xD;
    gc.c_storageAssets.stream().anyMatch(asset -&gt; asset instanceof J_EAStorageElectric)    ));&#xD;
}&#xD;
&#xD;
&#xD;
for (GridConnection GC : batteryUI.c_gridConnections_Battery) {&#xD;
&#xD;
	//Add all GIS objects&#xD;
	batteryUI.c_GISObjects_Battery.addAll(GC.c_connectedGISObjects);&#xD;
	&#xD;
	//Add connected gridnodes for each GC&#xD;
	batteryUI.c_connectedGridNodes.add(GC.p_parentNodeElectricID);&#xD;
	&#xD;
	//Find all energy assets and add them to the correct collection&#xD;
	List&lt;J_EAStorage&gt; batteries = findAll(GC.c_storageAssets, asset -&gt; asset instanceof J_EAStorageElectric);&#xD;
&#xD;
	batteries.forEach(asset -&gt; batteryUI.c_gridBatteries.add((J_EAStorageElectric)asset));&#xD;
}&#xD;
&#xD;
&#xD;
//Totals&#xD;
batteryUI.p_amountOfGC = batteryUI.c_gridConnections_Battery.size();&#xD;
batteryUI.p_amountOfGISObjects = batteryUI.c_GISObjects_Battery.size();&#xD;
&#xD;
&#xD;
//Initialize the UI&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
//Add to the collection of UIs ???</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725006890451</Id>
						<Name>f_setUIButton</Name>
						<X>80</X>
						<Y>1200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>switch(v_clickedObjectType){&#xD;
&#xD;
case BUILDING:&#xD;
	if (c_selectedGridConnections.size() &gt; 1 || !c_selectedGridConnections.get(0).p_owner.b_hasPrivateUI || !c_selectedGridConnections.get(0).v_isActive){&#xD;
		button_goToUI.setVisible(false);&#xD;
	}&#xD;
	else{&#xD;
		// Index number of the connection owner used to change the button '&#xD;
		v_connectionOwnerIndexNr = c_selectedGridConnections.get(0).p_owner.p_connectionOwnerIndexNr;&#xD;
		button_goToUI.setText("Ga naar het Bedrijfsportaal");&#xD;
		button_goToUI.setVisible(true);&#xD;
	}&#xD;
	break;&#xD;
	&#xD;
case ELECTROLYSER:&#xD;
	if(ui_Hydrogen.size() &gt; 0){&#xD;
		button_goToUI.setText("Ga naar het Waterstof Dashboard");&#xD;
		button_goToUI.setVisible(true);&#xD;
	}&#xD;
	break;&#xD;
	&#xD;
case BATTERY:&#xD;
	if(ui_Battery.size() &gt; 0){&#xD;
		button_goToUI.setText("Ga naar het Batterijen Dashboard");&#xD;
		button_goToUI.setVisible(true);&#xD;
	}&#xD;
	break;	&#xD;
&#xD;
case CHARGER:&#xD;
	button_goToUI.setVisible(false);&#xD;
	break;&#xD;
	&#xD;
default:&#xD;
	button_goToUI.setVisible(false);&#xD;
	break;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>GISRoute</ReturnType>
						<Id>1725266804325</Id>
						<Name>f_createGISLine</Name>
						<X>-280</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GISCoords</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>objectType</Name>
							<Type>OL_GISObjectType</Type>
						</Parameter>
						<Body>&#xD;
Curve curve = new Curve();&#xD;
for(int i = 0; i+3 &lt; GISCoords.length; i += 2){&#xD;
	GISMarkupSegmentLine segment = new GISMarkupSegmentLine(GISCoords[i], GISCoords[i+1], GISCoords[i+2], GISCoords[i+3]);&#xD;
	curve.addSegment(segment);&#xD;
}&#xD;
&#xD;
//Create route (line)&#xD;
GISRoute gisroute = new GISRoute(map, curve, true);&#xD;
&#xD;
//Object styling&#xD;
switch(objectType){&#xD;
&#xD;
	case LV_CABLE:&#xD;
		c_LVCables.add(gisroute);&#xD;
		//Styling&#xD;
		gisroute.setLineStyle(LINE_STYLE_SOLID);&#xD;
		gisroute.setLineWidth(0.8);&#xD;
		gisroute.setLineColor(v_LVGridColor);&#xD;
		gisroute.setVisible(false);&#xD;
		break;&#xD;
		&#xD;
	case MV_CABLE:&#xD;
		c_MVCables.add(gisroute);&#xD;
		//Styling&#xD;
		gisroute.setLineStyle(LINE_STYLE_SOLID);&#xD;
		gisroute.setLineWidth(1);&#xD;
		gisroute.setLineColor(v_MVGridColor);&#xD;
		gisroute.setVisible(false);&#xD;
		break;&#xD;
}&#xD;
&#xD;
return gisroute;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725968656820</Id>
						<Name>f_setColorsBasedOnGridTopology_gridnodes</Name>
						<X>1960</X>
						<Y>1770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GN</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Body>if(GN.gisRegion != null){&#xD;
	GN.gisRegion.setFillColor(GN.p_uniqueColor);&#xD;
	GN.gisRegion.setLineColor(GN.p_uniqueColor.brighter());&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725977409304</Id>
						<Name>f_setSliderPresets</Name>
						<X>-670</X>
						<Y>751</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Should be overridden in child interface!!!&#xD;
f_updateMainInterfaceSliders();&#xD;
f_initialisationOfResidentialSliders();&#xD;
traceln("Forgot to override project specific slider settings!!");</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726068314849</Id>
						<Name>f_projectSpecificStyling</Name>
						<X>-670</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Function used to set the colors, styling, and other parameters/functions for each specific project&#xD;
//Should be overridden!!&#xD;
traceln("DID NOT OVERRIDE THE PROJECT SPECIFIC STYLING!");</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1729685968993</Id>
						<Name>f_projectSpecificOrderedCollectionAdjustments</Name>
						<X>420</X>
						<Y>-650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Function that can be used to make project specific adjustments to the ordered collection&#xD;
//SHOULD BE OVERRIDEN IF YOU WANT TO USE THIS</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734442458629</Id>
						<Name>f_applyFilter</Name>
						<X>-1455</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>selectedFilter</Name>
							<Type>OL_FilterOptionsGC</Type>
						</Parameter>
						<Parameter>
							<Name>selectedFilterName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>c_selectedFilterOptions.add(selectedFilter);&#xD;
&#xD;
ArrayList&lt;GridConnection&gt; toBeFilteredGC = new ArrayList&lt;GridConnection&gt;();&#xD;
&#xD;
if(c_selectedFilterOptions.size()&gt;1 &amp;&amp; c_selectedGridConnections.size()&gt; 0){ // Already filtering&#xD;
	toBeFilteredGC = new ArrayList&lt;GridConnection&gt;(c_selectedGridConnections);&#xD;
}&#xD;
else{ // First filter&#xD;
	toBeFilteredGC = new ArrayList&lt;GridConnection&gt;(energyModel.f_getActiveGridConnections());&#xD;
}&#xD;
&#xD;
//After a filter selecttion, reset previous clicked building/gridNode colors and text&#xD;
v_previousClickedObjectType = v_clickedObjectType;&#xD;
c_previousSelectedObjects = new ArrayList&lt;GIS_Object&gt;(c_selectedObjects);&#xD;
c_selectedGridConnections.clear();&#xD;
c_selectedObjects.clear();&#xD;
&#xD;
&#xD;
//Deselect previous selection&#xD;
if( v_previousClickedObjectType != null){&#xD;
	f_deselectPreviousSelect();&#xD;
}&#xD;
&#xD;
//Can filter return 0? (Only allowed for filters who are not inmediately active (gridLoops, nbh, etc.)&#xD;
boolean filterCanReturnZero = false;&#xD;
&#xD;
switch(selectedFilter){&#xD;
	case COMPANIES:&#xD;
			f_filterCompanies(toBeFilteredGC);&#xD;
		break;&#xD;
		&#xD;
	case HOUSES:&#xD;
			f_filterHouses(toBeFilteredGC);&#xD;
		break;&#xD;
		&#xD;
	case DETAILED:&#xD;
			f_filterDetailed(toBeFilteredGC);&#xD;
		break;&#xD;
		&#xD;
	case NONDETAILED:&#xD;
			f_filterEstimated(toBeFilteredGC);&#xD;
		break;&#xD;
		&#xD;
	case HASPV:&#xD;
			f_filterHasPV(toBeFilteredGC);&#xD;
		break;&#xD;
		&#xD;
	case HASTRANSPORT:&#xD;
			f_filterHasTransport(toBeFilteredGC);&#xD;
		break;&#xD;
		&#xD;
	case GRIDTOPOLOGY_SELECTEDLOOP:&#xD;
		if(!c_filterSelectedGridLoops.isEmpty()){&#xD;
			f_filterGridLoops(toBeFilteredGC);&#xD;
		}&#xD;
		else{&#xD;
			f_setForcedClickScreen(true, "Selecteer een lus");&#xD;
			if(c_loadedMapOverlayTypes.contains(OL_MapOverlayTypes.GRID_NEIGHBOURS)){&#xD;
				rb_mapOverlay.setValue(c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.GRID_NEIGHBOURS),true);			&#xD;
			}&#xD;
			if(c_selectedFilterOptions.size() &gt; 1){&#xD;
				c_selectedGridConnections = new ArrayList&lt;&gt;(toBeFilteredGC);	&#xD;
			}&#xD;
			else{&#xD;
				filterCanReturnZero = true;&#xD;
			}&#xD;
		}&#xD;
		break;&#xD;
		&#xD;
	case SELECTED_NEIGHBORHOOD:&#xD;
		if(!c_filterSelectedNeighborhoods.isEmpty()){&#xD;
			f_filterNeighborhoods(toBeFilteredGC);&#xD;
		}&#xD;
		else{&#xD;
			f_setForcedClickScreen(true, "Selecteer een buurt");&#xD;
			&#xD;
			if(c_selectedFilterOptions.size() &gt; 1){&#xD;
				c_selectedGridConnections = new ArrayList&lt;&gt;(toBeFilteredGC);&#xD;
			}&#xD;
			else{&#xD;
				filterCanReturnZero = true;&#xD;
			}&#xD;
		}&#xD;
		break;&#xD;
	case MANUAL_SELECTION:&#xD;
		if(c_manualFilterSelectedGC.size() &gt; 0){&#xD;
			f_filterManualSelection(toBeFilteredGC);&#xD;
		}&#xD;
		else if(c_selectedFilterOptions.size() &gt; 1){ &#xD;
			if(c_manualFilterDeselectedGC.size() &gt; 0){&#xD;
				f_filterManualSelection(toBeFilteredGC);&#xD;
			}&#xD;
			else{&#xD;
				c_selectedGridConnections = new ArrayList&lt;&gt;(toBeFilteredGC);&#xD;
			}&#xD;
		}&#xD;
		else{&#xD;
			filterCanReturnZero = true;&#xD;
		}&#xD;
			&#xD;
		break;&#xD;
}&#xD;
&#xD;
if(c_selectedGridConnections.size() == 0 &amp;&amp; !filterCanReturnZero){ // Not allowed to return zero, while returning zero&#xD;
	f_removeFilter(selectedFilter, selectedFilterName);&#xD;
	&#xD;
	//Notify filter has not been applied, cause no results are given&#xD;
	f_setErrorScreen("Geselecteerde filter geeft geen resultaten. De filter is gedeactiveerd.");&#xD;
}&#xD;
else if(c_selectedGridConnections.size() == 0 &amp;&amp; filterCanReturnZero){//Allowed to return zero filtered gc, while returning zero&#xD;
	//Do nothing&#xD;
}&#xD;
else{//Filtered GC returns GC&#xD;
&#xD;
	//Set color of all gis objects of new filter selection&#xD;
	v_clickedObjectType = OL_GISObjectType.BUILDING;&#xD;
		&#xD;
	for (GridConnection GC: c_selectedGridConnections){&#xD;
		for (GIS_Object objectGIS : GC.c_connectedGISObjects) {&#xD;
			objectGIS.gisRegion.setFillColor(v_selectionColorAddBuildings);&#xD;
			c_selectedObjects.add(objectGIS);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//Set graphs	&#xD;
	if(c_selectedGridConnections.size()&gt;1){&#xD;
		v_customEnergyCoop = energyModel.f_addEnergyCoop(c_selectedGridConnections);&#xD;
		uI_Results.f_updateResultsUI(v_customEnergyCoop);&#xD;
	}&#xD;
	else{&#xD;
		uI_Results.f_updateResultsUI(c_selectedGridConnections.get(0));&#xD;
	}			&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734442462084</Id>
						<Name>f_setFilter</Name>
						<X>-1455</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>selectedFilterName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>OL_FilterOptionsGC selectedFilter_OL = null;&#xD;
switch(selectedFilterName){&#xD;
	case "-":&#xD;
		//Do nothing&#xD;
		break;&#xD;
	case "Bedrijfspanden":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.COMPANIES;&#xD;
		break;&#xD;
	case "Woonhuizen":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.HOUSES;&#xD;
		break;&#xD;
	case "Met bekende data":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.DETAILED;&#xD;
		break;&#xD;
	case "Met geschatte data":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.NONDETAILED;&#xD;
		break;&#xD;
	case "Met zonnepanelen":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.HASPV;&#xD;
		break;&#xD;
	case "Met voertuigen":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.HASTRANSPORT;&#xD;
		break;&#xD;
	case "In de aangewezen 'lus'":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP;&#xD;
		break;&#xD;
	case "In de aangwezen 'buurt'":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD;&#xD;
		break;&#xD;
	case "Handmatige selectie":&#xD;
		selectedFilter_OL = OL_FilterOptionsGC.MANUAL_SELECTION;&#xD;
		break;&#xD;
}&#xD;
&#xD;
boolean manualSelectionFilterActive = false;&#xD;
&#xD;
//Remove manual filter first&#xD;
if(!selectedFilterName.equals("Handmatige selectie") &amp;&amp; c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){&#xD;
	/*&#xD;
	PrintStream originalPrintStream = f_disableTraceln();&#xD;
	manualSelectionFilterActive = true;&#xD;
	f_removeFilter(OL_FilterOptionsGC.MANUAL_SELECTION, "Handmatige selectie");&#xD;
	f_enableTraceln(originalPrintStream);&#xD;
	*/&#xD;
	button_removeManualSelection.action();&#xD;
	&#xD;
}&#xD;
&#xD;
&#xD;
if(!selectedFilterName.equals("-") &amp;&amp; !c_selectedFilterOptions.contains(selectedFilter_OL)){ // Set filter&#xD;
	traceln("Geselecteerde filter ( " + selectedFilterName + " ) toegevoegd.");&#xD;
	t_activeFilters.setText( t_activeFilters.getText() + selectedFilterName + "\n");&#xD;
	f_applyFilter(selectedFilter_OL, selectedFilterName);&#xD;
}&#xD;
else if(c_selectedFilterOptions.contains(selectedFilter_OL)){ // Remove filter&#xD;
	f_removeFilter(selectedFilter_OL, selectedFilterName);&#xD;
}&#xD;
&#xD;
/*&#xD;
//Reactivate manual filter at the end always (if it was active before)&#xD;
if(manualSelectionFilterActive){&#xD;
	t_activeFilters.setText( t_activeFilters.getText() + "Handmatige selectie" + "\n");&#xD;
	f_applyFilter(OL_FilterOptionsGC.MANUAL_SELECTION, "Handmatige selectie");&#xD;
}&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734445008646</Id>
						<Name>f_removeAllFilters</Name>
						<X>-1450</X>
						<Y>505</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>c_selectedFilterOptions.clear();&#xD;
t_activeFilters.setText("");&#xD;
&#xD;
//Deselect everything and set region as main&#xD;
f_clearSelectionAndSelectEnergyModel();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734447122780</Id>
						<Name>f_selectGridLoop</Name>
						<X>-1410</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>clickx</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>clicky</Name>
							<Type>double</Type>
						</Parameter>
						<Body>&#xD;
//Check if click was on Building, if yes, select grid building&#xD;
for ( GIS_Building b : energyModel.pop_GIS_Buildings ){&#xD;
	if( b.gisRegion != null &amp;&amp; b.gisRegion.contains(clickx, clicky) ){&#xD;
		if (b.gisRegion.isVisible()) { //only allow us to click on visible objects&#xD;
			if (b.c_containedGridConnections.size() &gt; 0 ) { // only allow buildings with gridconnections&#xD;
				GridConnection clickedGridConnection = b.c_containedGridConnections.get(0); // Find buildings powered by the same GC as the clicked building&#xD;
				GridNode clickedGridConnectionConnectedGridNode = clickedGridConnection.p_parentNodeElectric;&#xD;
				ArrayList&lt;GridNode&gt; allGridNodes = new ArrayList&lt;GridNode&gt;(energyModel.f_getGridNodesTopLevel());&#xD;
				allGridNodes.addAll(energyModel.f_getGridNodesNotTopLevel());&#xD;
				&#xD;
				while(	clickedGridConnectionConnectedGridNode.p_parentNodeID != null &amp;&amp; &#xD;
					  	clickedGridConnectionConnectedGridNode.p_nodeType != OL_GridNodeType.SUBMV &amp;&amp;&#xD;
					  	clickedGridConnectionConnectedGridNode.p_nodeType != OL_GridNodeType.MVMV &amp;&amp;&#xD;
					  	clickedGridConnectionConnectedGridNode.p_nodeType != OL_GridNodeType.HVMV&#xD;
					  	){&#xD;
					String parentNodeName = clickedGridConnectionConnectedGridNode.p_parentNodeID;&#xD;
					if(parentNodeName != null &amp;&amp; !parentNodeName.equals("-") &amp;&amp; !parentNodeName.equals("")){&#xD;
						clickedGridConnectionConnectedGridNode = findFirst(allGridNodes, GN -&gt; GN.p_gridNodeID.equals(parentNodeName));&#xD;
					}&#xD;
					else{ // At top node --&gt; select the directly attached grid node instead, and break out of while loop.&#xD;
						clickedGridConnectionConnectedGridNode = clickedGridConnection.p_parentNodeElectric;&#xD;
						break;&#xD;
					}&#xD;
				}	&#xD;
				&#xD;
				//This deselect the previous selection of gridloops&#xD;
				f_setFilter("In de aangewezen 'lus'");&#xD;
				&#xD;
				if(c_filterSelectedGridLoops.contains(clickedGridConnectionConnectedGridNode)){&#xD;
					c_filterSelectedGridLoops.remove(clickedGridConnectionConnectedGridNode);&#xD;
				}&#xD;
				else{&#xD;
					c_filterSelectedGridLoops.add(clickedGridConnectionConnectedGridNode);&#xD;
				}&#xD;
			&#xD;
				if(gr_forceMapSelection.isVisible()){&#xD;
					f_setForcedClickScreen(false, "");&#xD;
				}&#xD;
				&#xD;
				//This selects the new selection of gridloops&#xD;
				f_setFilter("In de aangewezen 'lus'");&#xD;
				&#xD;
				return;&#xD;
				&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734448628428</Id>
						<Name>f_filterCompanies</Name>
						<X>-1430</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_selectedGridConnections = new ArrayList&lt;&gt;(findAll(toBeFilteredGC, GC -&gt; GC instanceof GCUtility));&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734448687355</Id>
						<Name>f_filterHouses</Name>
						<X>-1430</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_selectedGridConnections = new ArrayList&lt;&gt;(findAll(toBeFilteredGC, GC -&gt; GC instanceof GCHouse));&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734448688472</Id>
						<Name>f_filterDetailed</Name>
						<X>-1430</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_selectedGridConnections = new ArrayList&lt;&gt;(findAll(toBeFilteredGC, GC -&gt; GC.p_owner.p_detailedCompany));&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734448689519</Id>
						<Name>f_filterEstimated</Name>
						<X>-1430</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_selectedGridConnections = new ArrayList&lt;&gt;(findAll(toBeFilteredGC, GC -&gt; !GC.p_owner.p_detailedCompany));&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734448690487</Id>
						<Name>f_filterHasPV</Name>
						<X>-1430</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_selectedGridConnections = new ArrayList&lt;&gt;(findAll(toBeFilteredGC, GC -&gt; GC.v_liveAssetsMetaData.hasPV));&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734448691508</Id>
						<Name>f_filterHasTransport</Name>
						<X>-1430</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_selectedGridConnections = new ArrayList&lt;&gt;(findAll(toBeFilteredGC, GC -&gt; GC.c_vehicleAssets.size() &gt; 0));&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734451505770</Id>
						<Name>f_removeFilter</Name>
						<X>-1455</X>
						<Y>105</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>selectedFilter</Name>
							<Type>OL_FilterOptionsGC</Type>
						</Parameter>
						<Parameter>
							<Name>selectedFilterName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>c_selectedFilterOptions.remove(selectedFilter);&#xD;
&#xD;
ArrayList&lt;OL_FilterOptionsGC&gt; toBeReappliedFilters = new ArrayList&lt;OL_FilterOptionsGC&gt;(c_selectedFilterOptions);&#xD;
c_selectedFilterOptions.clear();&#xD;
&#xD;
if(toBeReappliedFilters.size() &gt; 0){&#xD;
	for(OL_FilterOptionsGC filterOption : toBeReappliedFilters){&#xD;
		f_applyFilter(filterOption, selectedFilterName);&#xD;
	}&#xD;
	String toBeAdjustedFilterText = t_activeFilters.getText();&#xD;
	String newActiveFilterText = toBeAdjustedFilterText.replace(selectedFilterName + "\n", "");&#xD;
	t_activeFilters.setText(newActiveFilterText);&#xD;
	&#xD;
	traceln("Filter ( " + selectedFilterName + " ) is verwijderd.");&#xD;
}&#xD;
else{ // All filters removed&#xD;
	traceln("Filter ( " + selectedFilterName + " ) is verwijderd.");&#xD;
	f_removeAllFilters();&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734517589341</Id>
						<Name>f_filterGridLoops</Name>
						<X>-1430</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>HashSet&lt;GridConnection&gt; gridConnectionsOnLoop = new HashSet&lt;GridConnection&gt;();&#xD;
&#xD;
for(GridNode GridLoop : c_filterSelectedGridLoops)&#xD;
	if(b_gridLoopsAreDefined){&#xD;
		OL_GridNodeType loopTopNodeType= GridLoop.p_nodeType;&#xD;
		switch(loopTopNodeType){&#xD;
			case MVLV:&#xD;
				for(GridConnection GC : GridLoop.f_getConnectedGridConnections()){&#xD;
					if(toBeFilteredGC.contains(GC)){&#xD;
						gridConnectionsOnLoop.add(GC);&#xD;
					}&#xD;
				}&#xD;
				break;&#xD;
			case SUBMV:&#xD;
				for(GridConnection GC : GridLoop.f_getAllLowerLVLConnectedGridConnections()){&#xD;
					if(toBeFilteredGC.contains(GC)){&#xD;
						gridConnectionsOnLoop.add(GC);&#xD;
					}&#xD;
				}&#xD;
				break;&#xD;
			&#xD;
			case MVMV:&#xD;
				for(GridConnection GC : GridLoop.f_getConnectedGridConnections()){&#xD;
					if(toBeFilteredGC.contains(GC)){&#xD;
						gridConnectionsOnLoop.add(GC);&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				break;&#xD;
				&#xD;
			case HVMV:&#xD;
				for(GridConnection GC : GridLoop.f_getConnectedGridConnections()){&#xD;
					if(toBeFilteredGC.contains(GC)){&#xD;
						gridConnectionsOnLoop.add(GC);&#xD;
					}&#xD;
				}&#xD;
				break;&#xD;
		}&#xD;
	}&#xD;
	else{&#xD;
		for(GridConnection GC : GridLoop.f_getAllLowerLVLConnectedGridConnections()){&#xD;
			if(toBeFilteredGC.contains(GC)){&#xD;
				gridConnectionsOnLoop.add(GC);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
&#xD;
c_selectedGridConnections = new ArrayList&lt;&gt;(gridConnectionsOnLoop);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1736344958050</Id>
						<Name>f_setErrorScreen</Name>
						<X>3420</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>errorMessage</Name>
							<Type>String</Type>
						</Parameter>
						<Body>//Reset location and height&#xD;
button_errorOK.setY(50);&#xD;
rect_errorMessage.setY(-120);&#xD;
rect_errorMessage.setHeight(200);&#xD;
t_errorMessage.setY(-70);&#xD;
&#xD;
//Set position above all other things&#xD;
presentation.remove(gr_errorScreen);&#xD;
presentation.insert(presentation.size(), gr_errorScreen);&#xD;
&#xD;
int width_numberOfCharacters = 44;&#xD;
&#xD;
// Set Text&#xD;
Pair&lt;String, Integer&gt; p = v_infoText.restrictWidth(errorMessage, width_numberOfCharacters);&#xD;
errorMessage = p.getFirst();&#xD;
int numberOfLines = p.getSecond();&#xD;
int additionalLines = max(0, numberOfLines - 3);&#xD;
&#xD;
// Set Size&#xD;
rect_errorMessage.setHeight(rect_errorMessage.getHeight() + additionalLines * 40);&#xD;
rect_errorMessage.setY(rect_errorMessage.getY() - 40 * additionalLines);&#xD;
//button_errorOK.setY(button_errorOK.getY() - 10 * additionalLines);&#xD;
t_errorMessage.setY(t_errorMessage.getY() - 40 * additionalLines);&#xD;
&#xD;
t_errorMessage.setText(errorMessage);&#xD;
gr_errorScreen.setVisible(true);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double[]</ReturnType>
						<Id>1736425024531</Id>
						<Name>f_calculateGroupATOConnectionCapacity</Name>
						<Description>This function returns the delivery and feed in capacity (in kW) that a group of gridconnections would get from the grid operator if they formed an energy hub.</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>2160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>// TODO: Add as an argument the grid operator when different calculations are available.&#xD;
// For now only Stedin is implemented, so this calculation is always chosen.&#xD;
&#xD;
double deliveryCapacity_kW = 0;&#xD;
double feedInCapacity_kW = 0;&#xD;
&#xD;
ArrayList&lt;String&gt; warnings = new ArrayList&lt;&gt;();&#xD;
&#xD;
//TODO: First we check if all the gridconnections are on a single ring in the grid topology. If not we add a warning&#xD;
HashSet&lt;GridNode&gt; parentNodes = new HashSet&lt;&gt;();&#xD;
&#xD;
for (GridConnection gc : gcList) {&#xD;
	&#xD;
	// GridTopology Check&#xD;
	GridNode gn = gc.l_parentNodeElectric.getConnectedAgent();&#xD;
	// TODO: Improve this so it uses an OptionList instead of string comparison&#xD;
	if ( gn.p_description.toLowerCase().contains("klantstation") ) {&#xD;
		GridNode parentNode = findFirst(energyModel.pop_gridNodes, p -&gt; p.p_gridNodeID.equals(gn.p_parentNodeID));&#xD;
		if (parentNode == null) {&#xD;
			traceln("Warning! Could not find parentnode of klantstation of GC: " + gc.p_ownerID);			&#xD;
		}&#xD;
		else if (parentNode.p_nodeType != OL_GridNodeType.SUBMV) {&#xD;
			// add warning, gc has klantstation, but this one is not on a ring&#xD;
			traceln("Warning! GC: " + gc.p_ownerID + " is not connected to a ring in the grid topology.");&#xD;
			warnings.add(gc.p_ownerID + " is niet aangesloten op een ring");&#xD;
			parentNodes.add(parentNode);&#xD;
		}&#xD;
		else {&#xD;
			parentNodes.add(parentNode);&#xD;
		}&#xD;
	}&#xD;
	else if ( gn.p_nodeType != OL_GridNodeType.SUBMV ) {&#xD;
		// add warning, this one is not on a ring&#xD;
		traceln("Warning! GC: " + gc.p_ownerID + " is not connected to a ring in the grid topology.");&#xD;
		warnings.add(gc.p_ownerID + " is niet aangesloten op een ring");&#xD;
		parentNodes.add(gn);&#xD;
	}&#xD;
	else {&#xD;
		parentNodes.add(gn);	&#xD;
	}&#xD;
	&#xD;
	// Adding up the GTO Connection Capacity contributions&#xD;
	traceln("gto capacities: " + Arrays.toString( v_GCGTOConnectionCapacities.get(gc)));&#xD;
	deliveryCapacity_kW += v_GCGTOConnectionCapacities.get(gc)[0];&#xD;
	feedInCapacity_kW += v_GCGTOConnectionCapacities.get(gc)[1];&#xD;
}&#xD;
&#xD;
if ( parentNodes.size() &gt; 1 ) {&#xD;
	// add warning&#xD;
	traceln("Warning! Selected GridConnections for E-Hub are not on a single ring.");&#xD;
	warnings.add("Let op! Er zijn bedrijven op verschillende ringen geselecteerd");&#xD;
}&#xD;
&#xD;
v_groupATODeliveryCapacity_kW = deliveryCapacity_kW;&#xD;
v_groupATOFeedInCapacity_kW = feedInCapacity_kW;&#xD;
&#xD;
&#xD;
f_EHubTabCapacityInformation(true, null);&#xD;
&#xD;
if (gcList.size() &gt; 0) {&#xD;
	&#xD;
	// fix for the WKK&#xD;
	List&lt;GridConnection&gt; gcListWithoutWKK = new ArrayList&lt;&gt;(gcList);&#xD;
	GridConnection GCWKK = findFirst(energyModel.EnergyConversionSites, gc -&gt; gc.p_name.toLowerCase().contains("wkk"));&#xD;
	//if (GCWKK != null) {&#xD;
	gcListWithoutWKK.remove(GCWKK);&#xD;
	//}&#xD;
	&#xD;
	f_EHubTabCapacityInformation(false, "De ring van " + gcList.get(0).p_ownerID + " is geselecteerd. \n");&#xD;
	&#xD;
	f_EHubTabCapacityInformation(false, &#xD;
		"De bedrijven hebben samen een leveringscapaciteit van " +&#xD;
		(int) sum(gcListWithoutWKK, gc -&gt; gc.p_contractedDeliveryCapacity_kW)  +&#xD;
		"  kW. \nDe E-Hub zou een groepscontract kunnen krijgen van " +&#xD;
		(int) deliveryCapacity_kW + " kW. \n"&#xD;
		);&#xD;
	if (warnings.size() &gt; 0) {&#xD;
		f_EHubTabCapacityInformation(false, "Waarschuwingen: \n");&#xD;
		for (String str : warnings) {&#xD;
			f_EHubTabCapacityInformation(false, str);&#xD;
			f_EHubTabCapacityInformation(false, "\n");&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	f_EHubTabCapacityInformation(false, "Nog geen E-Hub samengesteld");&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1736425024533</Id>
						<Name>f_resetEHubConfigurationButton</Name>
						<X>50</X>
						<Y>2260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_clickedObjectText = "None";&#xD;
uI_Results.b_showGroupContractValues = false;&#xD;
uI_Tabs.pop_tabEHub.get(0).cb_EHubSelect.setSelected(false);&#xD;
uI_Tabs.pop_tabEHub.get(0).t_baseGroepInfo.setText("Selecteer minimaal twee panden");&#xD;
uI_Tabs.pop_tabEHub.get(0).t_groepsGTV_kW.setText("");&#xD;
uI_Tabs.pop_tabEHub.get(0).t_cumulatiefGTV_kW.setText("");&#xD;
uI_Tabs.pop_tabEHub.get(0).t_warnings.setText("");</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1736425024535</Id>
						<Name>f_EHubTabCapacityInformation</Name>
						<X>50</X>
						<Y>2280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>reset</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>textToAdd</Name>
							<Type>String</Type>
						</Parameter>
						<Body>if (reset) {&#xD;
	uI_Tabs.pop_tabEHub.get(0).t_baseGroepInfo.setText("");&#xD;
	uI_Tabs.pop_tabEHub.get(0).t_groepsGTV_kW.setText("");&#xD;
	uI_Tabs.pop_tabEHub.get(0).t_cumulatiefGTV_kW.setText("");&#xD;
	uI_Tabs.pop_tabEHub.get(0).t_warnings.setText("");&#xD;
}&#xD;
else {&#xD;
	String currentWarningString = uI_Tabs.pop_tabEHub.get(0).t_warnings.getText();&#xD;
	uI_Tabs.pop_tabEHub.get(0).t_warnings.setText(currentWarningString + textToAdd);&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1736425024537</Id>
						<Name>f_calculateGTOConnectionCapacities</Name>
						<Description>Maps every gridconnection to the calculated contribution to a GTO (Groep Transport Overeenkomst). Delivery and FeedIn respectively.</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>2080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Calculation&#xD;
// Stedin: remove the top 0.1% of peak loads of the past years quarterhourly values, then add the remaining maximum to the group capacity&#xD;
// First we find the quarterhourly values, or if they are not available the assigned base load and add a warning that not all data was available&#xD;
&#xD;
List&lt;GridConnection&gt; gcList = new ArrayList&lt;&gt;();&#xD;
gcList.addAll(energyModel.f_getGridConnections());&#xD;
//gcList.addAll(energyModel.f_getPausedGridConnections());&#xD;
&#xD;
for (GridConnection gc : gcList) {&#xD;
	int amountOfDataPoints = gc.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW().length;&#xD;
	double[] quarterHourlyValues = Arrays.copyOf(gc.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW(), amountOfDataPoints);&#xD;
	Arrays.sort(quarterHourlyValues);&#xD;
	double filteredMaximum_kW = min(gc.p_contractedDeliveryCapacity_kW , max(0, quarterHourlyValues[amountOfDataPoints - (int) (amountOfDataPoints*0.001) - 1]));&#xD;
	double filteredMinimum_kW = min(gc.p_contractedFeedinCapacity_kW, -min(0, quarterHourlyValues[(int)(amountOfDataPoints*0.001)]));&#xD;
	v_GCGTOConnectionCapacities.put(gc, new double[]{filteredMaximum_kW, filteredMinimum_kW});&#xD;
}&#xD;
&#xD;
// fix for the WKK&#xD;
GridConnection GCWKK = findFirst(energyModel.EnergyConversionSites, gc -&gt; gc.p_name.toLowerCase().contains("wkk"));&#xD;
if (GCWKK != null) {&#xD;
	v_GCGTOConnectionCapacities.put(GCWKK, new double[]{0.0, 0.0});&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1736442051389</Id>
						<Name>f_styleResultsUI</Name>
						<X>-650</X>
						<Y>651</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>uI_Results.f_styleAllCharts(v_backgroundColor, lavender, 1.0, LINE_STYLE_SOLID);</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1737653178011</Id>
						<Name>f_selectNeighborhood</Name>
						<X>-1410</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>clickx</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>clicky</Name>
							<Type>double</Type>
						</Parameter>
						<Body>&#xD;
//Check if click was on Building, if yes, select grid building&#xD;
for ( GIS_Object region : c_GISNeighborhoods ){&#xD;
	if( region.gisRegion != null &amp;&amp; region.gisRegion.contains(clickx, clicky) ){&#xD;
		if (region.gisRegion.isVisible()) { //only allow us to click on visible objects	&#xD;
				&#xD;
			GIS_Object clickedNeighborhood = region;&#xD;
			&#xD;
&#xD;
			//This deselects the previous selected neighborhood filter&#xD;
			f_setFilter("In de aangwezen 'buurt'");&#xD;
			&#xD;
			if(c_filterSelectedNeighborhoods.contains(clickedNeighborhood)){&#xD;
				c_filterSelectedNeighborhoods.remove(clickedNeighborhood);&#xD;
			}&#xD;
			else{&#xD;
				c_filterSelectedNeighborhoods.add(clickedNeighborhood);&#xD;
			}&#xD;
&#xD;
			if(gr_forceMapSelection.isVisible()){&#xD;
				f_setForcedClickScreen(false, "");&#xD;
			}&#xD;
			//This sets the new selected neighborhoods filter&#xD;
			f_setFilter("In de aangwezen 'buurt'");&#xD;
			&#xD;
			return;	&#xD;
		}&#xD;
	}&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1737653178013</Id>
						<Name>f_filterNeighborhoods</Name>
						<X>-1430</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>ArrayList&lt;GridConnection&gt; gridConnectionsInNeighborhood = new ArrayList&lt;GridConnection&gt;();&#xD;
&#xD;
for(GridConnection GC : toBeFilteredGC){&#xD;
	for(GIS_Object nbh : c_filterSelectedNeighborhoods)&#xD;
		if( nbh.gisRegion.contains(GC.p_latitude, GC.p_longitude) ){&#xD;
			gridConnectionsInNeighborhood.add(GC);&#xD;
		}&#xD;
}&#xD;
&#xD;
c_selectedGridConnections = new ArrayList&lt;&gt;(gridConnectionsInNeighborhood);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740043548084</Id>
						<Name>f_enableLivePlotsOnly</Name>
						<X>1620</X>
						<Y>-260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>resultsUI</Name>
							<Type>UI_Results</Type>
						</Parameter>
						<Body>if(resultsUI.getGr_resultsUIHeader().isVisible()){&#xD;
	resultsUI.getRadioButtons().setValue(0, true);&#xD;
}&#xD;
resultsUI.chartProfielen.getPeriodRadioButton().setValue(0, true);&#xD;
resultsUI.f_enableNonLivePlotRadioButtons(false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1742226689515</Id>
						<Name>f_filterManualSelection</Name>
						<X>-1430</X>
						<Y>395</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>toBeFilteredGC</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>ArrayList&lt;GridConnection&gt; resultingGridConnectionSelection = new ArrayList&lt;GridConnection&gt;();&#xD;
&#xD;
if(c_selectedFilterOptions.size() &gt; 1){&#xD;
	resultingGridConnectionSelection.addAll(toBeFilteredGC);&#xD;
}&#xD;
else{//Manual selection is the only active filter -&gt; Resulting grid connection selection should start empty&#xD;
}&#xD;
&#xD;
for(GridConnection manualSelectedGC : c_manualFilterSelectedGC){&#xD;
	if(!resultingGridConnectionSelection.contains(manualSelectedGC)){&#xD;
		resultingGridConnectionSelection.add(manualSelectedGC);&#xD;
	}&#xD;
}&#xD;
for(GridConnection manualDeselectedGC : c_manualFilterDeselectedGC){&#xD;
	if(resultingGridConnectionSelection.contains(manualDeselectedGC)){&#xD;
		resultingGridConnectionSelection.remove(manualDeselectedGC);&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
c_selectedGridConnections = new ArrayList&lt;&gt;(resultingGridConnectionSelection);</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1742226787560</Id>
						<Name>f_selectManualFilteredGC</Name>
						<X>-1410</X>
						<Y>415</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>clickx</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>clicky</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//Initialize clickedObject&#xD;
GIS_Object clickedObject = null;&#xD;
&#xD;
//Check if click was on Building, if yes, select building&#xD;
for ( GIS_Object object : energyModel.pop_GIS_Buildings ){//pop_GIS_Buildings&#xD;
	if( object.gisRegion != null &amp;&amp; object.gisRegion.contains(clickx, clicky) ){&#xD;
		if (object.gisRegion.isVisible()) { //only allow us to click on visible objects	&#xD;
			if (object.c_containedGridConnections.size() &gt; 0 ){&#xD;
				clickedObject = object;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//If click was not on a building, check if click was on an EA, if yes, select EA&#xD;
if(clickedObject == null){&#xD;
	for ( GIS_Object object : energyModel.pop_GIS_Objects ){//pop_GIS_Buildings&#xD;
		if( object.gisRegion != null &amp;&amp; object.gisRegion.contains(clickx, clicky) ){&#xD;
			if (object.gisRegion.isVisible()) { //only allow us to click on visible objects	&#xD;
				if (object.c_containedGridConnections.size() &gt; 0 ){&#xD;
					clickedObject = object;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//If a building or EA has been selected perform click functionality&#xD;
if(clickedObject != null){&#xD;
	boolean select = true; // Deselect == false;&#xD;
	boolean removedFromSelectedGC = false;&#xD;
	boolean removedFromDeselectedGC = false;&#xD;
&#xD;
	ArrayList&lt;GridConnection&gt; clickedGridConnections = new ArrayList&lt;GridConnection&gt;(clickedObject.c_containedGridConnections);&#xD;
	&#xD;
	for (GridConnection clickedGC : clickedGridConnections){&#xD;
		if(c_selectedGridConnections.contains(clickedGC)){&#xD;
			c_selectedGridConnections.remove(clickedGC);&#xD;
			select = false;&#xD;
		}&#xD;
		&#xD;
		if(c_manualFilterSelectedGC.contains(clickedGC)){&#xD;
			c_manualFilterSelectedGC.remove(clickedGC);&#xD;
		}&#xD;
		else if(c_manualFilterDeselectedGC.contains(clickedGC)){&#xD;
			c_manualFilterDeselectedGC.remove(clickedGC);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	if(select){&#xD;
		c_selectedGridConnections.addAll(clickedGridConnections);&#xD;
		c_manualFilterSelectedGC.addAll(clickedGridConnections);&#xD;
		traceln("Handmatig geselecteerd object toegevoegd aan selectie");&#xD;
	}&#xD;
	else{&#xD;
		c_manualFilterDeselectedGC.addAll(clickedGridConnections);&#xD;
		traceln("Handmatig geselecteerd object verwijderd van selectie");&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//Disable traceln&#xD;
	PrintStream originalPrintStream = f_disableTraceln();&#xD;
	&#xD;
	//This deactivates the previous selection&#xD;
	f_setFilter("Handmatige selectie");&#xD;
				&#xD;
	//This activates the new selection&#xD;
	f_setFilter("Handmatige selectie");&#xD;
	&#xD;
	//Enable traceln&#xD;
	f_enableTraceln(originalPrintStream);&#xD;
	&#xD;
	return;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1742300624199</Id>
						<Name>f_setForcedClickScreen</Name>
						<X>140</X>
						<Y>-880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>showForcedClickScreen</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>forcedClickScreenText</Name>
							<Type>String</Type>
						</Parameter>
						<Body>t_forcedClickMessage.setText(forcedClickScreenText);&#xD;
&#xD;
gr_forceMapSelection.setVisible(showForcedClickScreen);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1743509491686</Id>
						<Name>f_setMapViewBounds</Name>
						<X>-480</X>
						<Y>-60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GISObjects</Name>
							<Type>ArrayList&lt;GIS_Object&gt;</Type>
						</Parameter>
						<Body>// Initialize min and max values&#xD;
double minLat = Double.MAX_VALUE;&#xD;
double maxLat = Double.MIN_VALUE;&#xD;
double minLon = Double.MAX_VALUE;&#xD;
double maxLon = Double.MIN_VALUE;&#xD;
 &#xD;
// Loop through all GISRegions and find the bounding box&#xD;
for(GIS_Object go : GISObjects){&#xD;
	&#xD;
	GISRegion region = go.gisRegion;&#xD;
    double[] points = region.getPoints(); // Get the boundary points of the region&#xD;
 &#xD;
    for (int i = 0; i &lt; points.length; i += 2) { // i+=2 because data is in lat, lon pairs&#xD;
        double lat = points[i];       // Latitude&#xD;
        double lon = points[i + 1];   // Longitude&#xD;
 &#xD;
 &#xD;
 &#xD;
        // Update min/max latitude and longitude&#xD;
        minLat = Math.min(minLat, lat);&#xD;
        maxLat = Math.max(maxLat, lat);&#xD;
        minLon = Math.min(minLon, lon);&#xD;
        maxLon = Math.max(maxLon, lon);&#xD;
    }&#xD;
}&#xD;
&#xD;
//Make it slightly bigger, so it isnt exact on the line of the regions&#xD;
minLat = minLat - 0.0001;&#xD;
maxLat = maxLat + 0.0001;&#xD;
minLon = minLon - 0.0001;&#xD;
maxLon = maxLon + 0.0001;&#xD;
        &#xD;
// Set the map to fit the calculated bounds&#xD;
map.fitBounds(minLat, minLon, maxLat, maxLon);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1743518032245</Id>
						<Name>f_setStartView</Name>
						<X>-640</X>
						<Y>295</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(map_centre_latitude != null &amp;&amp; map_centre_longitude != null &amp;&amp; map_centre_latitude != 0 &amp;&amp; map_centre_longitude != 0){&#xD;
	map.setCenterLatitude(map_centre_latitude);&#xD;
	map.setCenterLongitude(map_centre_longitude);&#xD;
}&#xD;
else{&#xD;
	ArrayList&lt;GIS_Object&gt; gisObjects_for_mapViewBounds = new ArrayList&lt;GIS_Object&gt;();&#xD;
	if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
		gisObjects_for_mapViewBounds.addAll(findAll(energyModel.pop_GIS_Objects, gisObject -&gt; gisObject.p_GISObjectType == OL_GISObjectType.REGION));&#xD;
	}&#xD;
	else{&#xD;
		for (GIS_Object building : energyModel.pop_GIS_Buildings) {&#xD;
			if(building.gisRegion.isVisible()){&#xD;
				gisObjects_for_mapViewBounds.add(building);&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	f_setMapViewBounds(gisObjects_for_mapViewBounds);&#xD;
}&#xD;
&#xD;
if(map_scale != null){&#xD;
	map.setMapScale(map_scale);&#xD;
}&#xD;
&#xD;
va_Interface.navigateTo();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1743665953113</Id>
						<Name>f_setInfoText</Name>
						<X>-1900</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>infoBubble</Name>
							<Type>ShapeImage</Type>
						</Parameter>
						<Parameter>
							<Name>descriptionText</Name>
							<Type>String</Type>
						</Parameter>
						<Parameter>
							<Name>xPosition</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>yPosition</Name>
							<Type>double</Type>
						</Parameter>
						<Body>if ( p_currentActiveInfoBubble.size() &gt; 0 &amp;&amp; p_currentActiveInfoBubble.get(0) == infoBubble ) {&#xD;
	// If we click a second time on the same bubble it should close the window&#xD;
	p_currentActiveInfoBubble.clear();&#xD;
	gr_infoText.setVisible(false);&#xD;
}&#xD;
else {&#xD;
	p_currentActiveInfoBubble.clear();&#xD;
	p_currentActiveInfoBubble.add(infoBubble);&#xD;
	&#xD;
	int width_ch = 50;&#xD;
	// Set Text&#xD;
	Pair&lt;String, Integer&gt; p = v_infoText.restrictWidth(descriptionText, width_ch);&#xD;
	t_infoTextDescription.setText(p.getFirst());&#xD;
	&#xD;
	// Set Size&#xD;
	rect_infoText.setWidth(width_ch * 7.5); // about 7.5 px per char for sans serif 14 pt&#xD;
	rect_infoText.setHeight(50 + p.getSecond() * 20); // about 50 px for title and 20 px per line for sans serif 14 pt&#xD;
&#xD;
	// Set Position&#xD;
	// The group position is on the top left, not the centre.&#xD;
	double margin_px = 15;&#xD;
	//double posX = f_getAbsolutePosition(infoBubble).getX();&#xD;
	//double posY = f_getAbsolutePosition(infoBubble).getY();&#xD;
	if (xPosition &lt; (va_Interface.getX() + va_Interface.getWidth()/2) ) {&#xD;
		// bubble is on the left half, so text should appear to the right&#xD;
		gr_infoText.setX( xPosition + margin_px + infoBubble.getWidth()/2);&#xD;
	}&#xD;
	else {&#xD;
		// bubble is on the right half, so text should appear to the left&#xD;
		gr_infoText.setX( xPosition - margin_px + infoBubble.getWidth()/2 - rect_infoText.getWidth());&#xD;
	}&#xD;
	&#xD;
	// In AnyLogic the Y-Axis is inverted&#xD;
	if (yPosition &gt; (va_Interface.getY() + va_Interface.getHeight()/2) ) {&#xD;
		// bubble is on the bottom half, so text should appear above&#xD;
		gr_infoText.setY( yPosition - margin_px + infoBubble.getHeight()/2 - rect_infoText.getHeight());&#xD;
	}&#xD;
	else {&#xD;
		// bubble is on the top half, so text should appear below&#xD;
		gr_infoText.setY( yPosition + margin_px + infoBubble.getHeight()/2);&#xD;
	}&#xD;
	&#xD;
	// Position of close button&#xD;
	gr_closeInfoText.setX( width_ch * 7.5 - 20 ); // 20 px offset from the right hand side&#xD;
	&#xD;
	gr_infoText.setVisible(true);&#xD;
}</Body>
					</Function>
					<Function AccessType="private" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Pair&lt;ShapeGroup, Point&gt;</ReturnType>
						<Id>1744894817569</Id>
						<Name>f_getGroupPositionIteration</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-1870</X>
						<Y>265</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>pair</Name>
							<Type>Pair&lt;ShapeGroup, Point&gt;</Type>
						</Parameter>
						<Body>return new Pair(pair.getFirst().getGroup(), new Point(pair.getFirst().getX() + pair.getSecond().getX(), pair.getFirst().getY() + pair.getSecond().getY()));</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Point</ReturnType>
						<Id>1744894817571</Id>
						<Name>f_getAbsolutePosition</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-1890</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>shape</Name>
							<Type>Shape</Type>
						</Parameter>
						<Body>// Note: Only works if the Agent is not living in the space of the interface!&#xD;
&#xD;
// Start with the shape position&#xD;
Point point = new Point(shape.getX(), shape.getY());&#xD;
traceln("point0: " + point);&#xD;
&#xD;
// Find presentation the shape is in to get the offset.&#xD;
if (shape.getPresentable() == this) {&#xD;
	// The shape is on this canvas, no additional offset&#xD;
}&#xD;
else {&#xD;
	// The shape is in a (possibly nested) presentation&#xD;
	traceln("shape.getPresentable(): " + shape.getPresentable());&#xD;
	traceln("shapetoplevel: " + shape.getPresentable().getPresentationShape());&#xD;
	for (ShapeEmbeddedObjectPresentation ap : c_presentations) {&#xD;
		traceln("AP: " + ap);&#xD;
		traceln("AG: " + ap.getEmbeddedObject());&#xD;
	}&#xD;
	ShapeEmbeddedObjectPresentation presentation = findFirst(c_presentations, ap -&gt; ap.getEmbeddedObject() == shape.getPresentable());&#xD;
	if (presentation == null) {&#xD;
		throw new RuntimeException("Shape not inside any presentation. Is the collection c_presentations filled with all agent presentations?");&#xD;
	}&#xD;
	traceln("point1: " + point);&#xD;
	&#xD;
	point.add( new Point(presentation.getX(), presentation.getY()) );&#xD;
	// It is possible that the agent presentation is also inside a group. See AnyLogic update 8.9.2. We assume these are not in nested groups.&#xD;
	traceln("point2: " + point);&#xD;
	&#xD;
	point.add( new Point(presentation.getGroup().getX(), presentation.getGroup().getY()) );&#xD;
	&#xD;
	traceln("point3: " + point);&#xD;
	Pair&lt;ShapeEmbeddedObjectPresentation, Point&gt; pair = new Pair(presentation, point);&#xD;
	while ( pair.getFirst().getPresentable() != this ) {&#xD;
		pair = f_getPresentationPositionIteration(pair);&#xD;
		traceln("pair: " + pair);&#xD;
		traceln("point_i: " + pair.getSecond());&#xD;
	}&#xD;
	point = pair.getSecond();&#xD;
}&#xD;
&#xD;
// Recursively add the group offsets.&#xD;
ShapeGroup group = shape.getGroup();&#xD;
traceln("group x: " + group.getX());&#xD;
traceln("group y: " + group.getY());&#xD;
Pair&lt;ShapeGroup, Point&gt; pair = new Pair(group, point);&#xD;
while ( !(pair.getFirst() instanceof ShapeTopLevelPresentationGroup) ) {&#xD;
	pair = f_getGroupPositionIteration(pair);&#xD;
	traceln("point_j: " + pair.getSecond());&#xD;
}&#xD;
return pair.getSecond();&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
/*&#xD;
(main) tabs_presentation (tabs_presentation.getEmbeddedobject() = agent1)&#xD;
	(agent 1) tab_elec_presentation  (tab_elec_presentation.getEmbeddedobject() = agent2)&#xD;
		(agent 2) shape (shape.getpresentable() = agent2)&#xD;
&#xD;
&#xD;
findfirst(c_presentations, ap -&gt; ap.getEmbeddedObject() == shape.getPresentable() ) =&gt; tab_elec_presentation&#xD;
&#xD;
tab_elec_presentation.getPresentable() =&gt; agent 1, so use this in the next iteration&#xD;
&#xD;
findfirst(c_presentations, ap -&gt; ap.getEmbeddedObject() == tab_elec_presentation.getPresentable() ) =&gt; tabs_presentation&#xD;
&#xD;
*/&#xD;
&#xD;
&#xD;
/*&#xD;
&#xD;
double presentationOffsetX;&#xD;
double presentationOffsetY;&#xD;
if (shape.getPresentable() == this) {&#xD;
	// The shape is on this canvas, no additional offset&#xD;
	presentationOffsetX = 0.0;&#xD;
	presentationOffsetY = 0.0;&#xD;
}&#xD;
else {&#xD;
	traceln("getEmbeddedObject: " + c_presentations.get(0).getEmbeddedObject());&#xD;
	traceln("getEmbeddedObject: " + c_presentations.get(1).getEmbeddedObject());&#xD;
	traceln("shape.getPresentable()" + shape.getPresentable());&#xD;
	traceln("agent presentable: " + agent.presentation);&#xD;
	traceln("this presentable: " + this.presentation);&#xD;
	ShapeEmbeddedObjectPresentation presentation = findFirst(c_presentations, ap -&gt; ap.getEmbeddedObject() == shape.getPresentable());&#xD;
	if (presentation == null) {&#xD;
		throw new RuntimeException("Shape not inside any presentation. Is the collection c_presentations filled with all agent presentations?");&#xD;
	}&#xD;
	presentationOffsetX = presentation.getX();&#xD;
	presentationOffsetY = presentation.getY();&#xD;
	// It is possible that the agent presentation is also inside a group. See AnyLogic update 8.9.2. We assume these are not in nested groups.&#xD;
	presentationOffsetX += presentation.getGroup().getX();&#xD;
	presentationOffsetY += presentation.getGroup().getY();&#xD;
	traceln("presentationOffsetX: " + presentationOffsetX);&#xD;
}&#xD;
&#xD;
// Add the presentation offset to the shape position and then recursively add the group offsets.&#xD;
Point point = new Point(shape.getX() + presentationOffsetX, shape.getY() + presentationOffsetY);&#xD;
ShapeGroup group = shape.getGroup();&#xD;
Pair&lt;ShapeGroup, Point&gt; pair = new Pair(group, point);&#xD;
while ( !(pair.getFirst() instanceof ShapeTopLevelPresentationGroup) ) {&#xD;
	pair = f_getGroupPositionIteration(pair);&#xD;
}&#xD;
return pair.getSecond();&#xD;
&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Pair&lt;ShapeEmbeddedObjectPresentation, Point&gt;</ReturnType>
						<Id>1744894817573</Id>
						<Name>f_getPresentationPositionIteration</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-1870</X>
						<Y>285</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>pair</Name>
							<Type>Pair&lt;ShapeEmbeddedObjectPresentation. Point&gt;</Type>
						</Parameter>
						<Body>ShapeEmbeddedObjectPresentation presentation = findFirst(c_presentations, ap -&gt; ap.getEmbeddedObject() == pair.getFirst().getPresentable());&#xD;
if (presentation == null) {&#xD;
	throw new RuntimeException("Shape not inside any presentation. Is the collection c_presentations filled with all agent presentations?");&#xD;
}&#xD;
Point point = pair.getSecond();&#xD;
traceln("presentation agent: " + presentation.getEmbeddedObject());&#xD;
traceln("point in presentation iteration before: " + point);&#xD;
point.add( new Point(presentation.getX(), presentation.getY()) );&#xD;
// It is possible that the agent presentation is also inside a group. See AnyLogic update 8.9.2. We assume these are not in nested groups.&#xD;
traceln("point in presentation iteration middle: " + point);&#xD;
point.add( new Point(presentation.getGroup().getX(), presentation.getGroup().getY()) );&#xD;
traceln("point in presentation iteration after: " + point);&#xD;
&#xD;
return new Pair(presentation, point);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744624088848</Id>
						<Name>f_harvestEnergyModelLoadData</Name>
						<X>-556</X>
						<Y>-710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Start writing Electricity Load Balance data to excel!");&#xD;
&#xD;
//Clear the sheet first&#xD;
f_clearExportSheet();&#xD;
&#xD;
//Set column names&#xD;
excel_exportBalanceLoadData.setCellValue("Tijd [u]", "Electricity Load Balance", 1, 1);&#xD;
excel_exportBalanceLoadData.setCellValue("Totale load van het Hele gebied [kWh]", "Electricity Load Balance", 1, 2);&#xD;
&#xD;
//Get energyModel profile&#xD;
double[] loadArray_kW = energyModel.v_rapidRunData.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW();&#xD;
&#xD;
for (int i = 0; i &lt; loadArray_kW.length ; i++) {&#xD;
	&#xD;
	//Time series&#xD;
	excel_exportBalanceLoadData.setCellValue((i) * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, 1);&#xD;
&#xD;
	//Data&#xD;
	excel_exportBalanceLoadData.setCellValue( loadArray_kW[i] * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, 2);&#xD;
}&#xD;
&#xD;
//Write file&#xD;
excel_exportBalanceLoadData.writeFile();&#xD;
&#xD;
traceln("Finished writing Electricity Load Balance data to excel!");</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744624088850</Id>
						<Name>f_harvestSelectedGCLoadData</Name>
						<X>-556</X>
						<Y>-470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Start writing Electricity Load Balance data to excel!");&#xD;
&#xD;
//Clear the sheet first&#xD;
f_clearExportSheet();&#xD;
&#xD;
//Initialize column index&#xD;
int columnIndex = 2;&#xD;
&#xD;
//Initialize total balance flow for all selected GC&#xD;
double[] cumulativeLoadArray_kW = new double[energyModel.v_rapidRunData.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW().length];&#xD;
&#xD;
//Loop over gc and add the data&#xD;
for(GridConnection GC : c_selectedGridConnections){&#xD;
&#xD;
	//Add gc data&#xD;
	excel_exportBalanceLoadData.setCellValue(GC.p_ownerID, "Electricity Load Balance", 1, columnIndex);&#xD;
	&#xD;
	double[] loadArray_kW = GC.v_rapidRunData.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW();&#xD;
&#xD;
	for (int i = 0; i &lt; loadArray_kW.length; i++ ) {		&#xD;
		excel_exportBalanceLoadData.setCellValue( loadArray_kW[i] * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, columnIndex);&#xD;
		&#xD;
		//Add to cumulative load array&#xD;
		cumulativeLoadArray_kW[i] += loadArray_kW[i];&#xD;
	}&#xD;
	&#xD;
	//Add timestep column (only the first time)&#xD;
	if (columnIndex == 2) {&#xD;
		excel_exportBalanceLoadData.setCellValue("Tijd [u]", "Electricity Load Balance", 1, 1);&#xD;
		traceln("ArraySize: %s", loadArray_kW.length);&#xD;
		for (int i = 0; i &lt; loadArray_kW.length ; i++) {&#xD;
			excel_exportBalanceLoadData.setCellValue((i) * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, 1);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//Increase columnIndex&#xD;
	columnIndex++;&#xD;
}&#xD;
&#xD;
//Cumulative data column&#xD;
if(c_selectedGridConnections.size() &gt; 1){&#xD;
	excel_exportBalanceLoadData.setCellValue("Totale load [kWh]", "Electricity Load Balance", 1, columnIndex);&#xD;
	for (int i = 0; i &lt; cumulativeLoadArray_kW.length ; i++) {&#xD;
		excel_exportBalanceLoadData.setCellValue( cumulativeLoadArray_kW[i] * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, columnIndex);&#xD;
	}&#xD;
}&#xD;
&#xD;
//Write the file&#xD;
excel_exportBalanceLoadData.writeFile();&#xD;
&#xD;
traceln("Finished writing Electricity Load Balance data to excel!");</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744624088852</Id>
						<Name>f_harvestTotalBalanceLoadOfSelectedEnergyCoop</Name>
						<X>-556</X>
						<Y>-590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Start writing Electricity Load Balance data to excel!");&#xD;
&#xD;
//Clear the sheet first&#xD;
f_clearExportSheet();&#xD;
&#xD;
//Set column names&#xD;
excel_exportBalanceLoadData.setCellValue("Tijd [u]", "Electricity Load Balance", 1, 1);&#xD;
excel_exportBalanceLoadData.setCellValue("Totale load van de geselecteerde EnergyCoop [kWh]", "Electricity Load Balance", 1, 2);&#xD;
&#xD;
//Get energyModel profile&#xD;
double[] loadArray_kW = v_customEnergyCoop.v_rapidRunData.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW();&#xD;
&#xD;
for (int i = 0; i &lt; loadArray_kW.length ; i++) {&#xD;
	&#xD;
	//Time series&#xD;
	excel_exportBalanceLoadData.setCellValue((i) * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, 1);&#xD;
&#xD;
	//Data&#xD;
	excel_exportBalanceLoadData.setCellValue( loadArray_kW[i] * energyModel.p_timeStep_h, "Electricity Load Balance", i+2, 2);&#xD;
}&#xD;
&#xD;
//Write file&#xD;
excel_exportBalanceLoadData.writeFile();&#xD;
&#xD;
traceln("Finished writing Electricity Load Balance data to excel!");</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744985599017</Id>
						<Name>f_setAllFileDownloadersDisabled</Name>
						<X>-556</X>
						<Y>-410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>fileChooser_exportBalanceLoadEnergyModel.setEnabled(false);&#xD;
fileChooser_exportBalanceLoadSelectedEnergyCoop.setEnabled(false);&#xD;
fileChooser_exportBalanceLoadSelectedCompanies.setEnabled(false);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744986150240</Id>
						<Name>f_clearExportSheet</Name>
						<X>-556</X>
						<Y>-390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Clear the sheet first&#xD;
for (int row = 1; row &lt;= 35137; row++) {&#xD;
    for (int col = 1; col &lt;= p_maxNrSelectedGCForExport + 2; col++) {&#xD;
        excel_exportBalanceLoadData.setCellValue("", "Electricity Load Balance", row, col);&#xD;
    }&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1745936595905</Id>
						<Name>f_selectGISRegion_publicModel</Name>
						<Description>Function that selects gisregions after click on the map</Description>
						<X>-670</X>
						<Y>870</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>clickx</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>clicky</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//After a click, reset previous clicked building/gridNode colors and text&#xD;
v_previousClickedObjectType = v_clickedObjectType;&#xD;
c_previousSelectedObjects = new ArrayList&lt;GIS_Object&gt;(c_selectedObjects);&#xD;
ArrayList&lt;GIS_Object&gt; buildingsConnectedToSelectedBuildingsList = new ArrayList&lt;&gt;();&#xD;
c_selectedGridConnections.clear();&#xD;
c_selectedObjects.clear();&#xD;
&#xD;
//Deselect previous selection&#xD;
if( v_previousClickedObjectType != null){&#xD;
	f_deselectPreviousSelect();&#xD;
}&#xD;
&#xD;
//Check if click was on Gridnode, if yes, select grid node&#xD;
for ( GridNode GN : energyModel.pop_gridNodes ){&#xD;
	if( GN.gisRegion != null &amp;&amp; GN.gisRegion.contains(clickx, clicky) &amp;&amp; GN.gisRegion.isVisible() ){&#xD;
		if(GN.f_getAllLowerLVLConnectedGridConnections().size() &gt;= p_minSelectedGCForPublicAggregation){&#xD;
			f_selectGridNode(GN);&#xD;
		}&#xD;
		else{&#xD;
			//Data sharing not agreed?&#xD;
			v_clickedObjectType = OL_GISObjectType.REGION;&#xD;
			uI_Results.f_updateResultsUI(energyModel);&#xD;
			&#xD;
			//Enable kpi summary button&#xD;
			uI_Results.getCheckbox_KPISummary().setEnabled(true);&#xD;
		}&#xD;
		return;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Check if click was on Building, if yes, select grid building&#xD;
for ( GIS_Building b : energyModel.pop_GIS_Buildings ){&#xD;
	if( b.gisRegion != null &amp;&amp; b.gisRegion.contains(clickx, clicky) ){&#xD;
		if (b.gisRegion.isVisible()) { //only allow us to click on visible objects&#xD;
			if (b.c_containedGridConnections.size() &gt; 0 ) { // only allow buildings with gridconnections&#xD;
				if(b.c_containedGridConnections.get(0).p_owner.b_dataSharingAgreed){&#xD;
					buildingsConnectedToSelectedBuildingsList = b.c_containedGridConnections.get(0).c_connectedGISObjects; // Find buildings powered by the same GC as the clicked building&#xD;
					f_selectBuilding(b, buildingsConnectedToSelectedBuildingsList);&#xD;
				}&#xD;
				else{&#xD;
					//Data sharing not agreed?&#xD;
					v_clickedObjectType = OL_GISObjectType.REGION;&#xD;
					uI_Results.f_updateResultsUI(energyModel);&#xD;
					&#xD;
					//Enable kpi summary button&#xD;
					uI_Results.getCheckbox_KPISummary().setEnabled(true);&#xD;
				}&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Check if click was on remaining objects such as chargers, solarfields, parcels: if yes, select object&#xD;
for ( GIS_Object GISobject : energyModel.pop_GIS_Objects ){&#xD;
	if( GISobject.gisRegion != null &amp;&amp; GISobject.gisRegion.contains(clickx, clicky) ) {&#xD;
		if (GISobject.gisRegion.isVisible()) { //only allow us to click on visible objects&#xD;
			if (GISobject.c_containedGridConnections.size() &gt; 0 ) { // only allow objects with gridconnections&#xD;
				if(GISobject.c_containedGridConnections.get(0).p_owner.b_dataSharingAgreed){&#xD;
					// Find buildings powered by the same GC as the clicked object&#xD;
					buildingsConnectedToSelectedBuildingsList = GISobject.c_containedGridConnections.get(0).c_connectedGISObjects; &#xD;
					&#xD;
					//Find the (first) connected GC in the object&#xD;
					GridConnection selectedGC = GISobject.c_containedGridConnections.get(0);&#xD;
	&#xD;
					//Set the selected GIS object type&#xD;
					v_clickedObjectType = GISobject.p_GISObjectType;&#xD;
					c_selectedObjects.add(GISobject);&#xD;
					&#xD;
					//Set the correct interface view for each object type&#xD;
					switch(v_clickedObjectType){&#xD;
					&#xD;
					case CHARGER:&#xD;
						f_selectCharger((GCPublicCharger)selectedGC, GISobject );&#xD;
						break;&#xD;
					&#xD;
						&#xD;
					default:&#xD;
						buildingsConnectedToSelectedBuildingsList = GISobject.c_containedGridConnections.get(0).c_connectedGISObjects; // Find buildings powered by the same GC as the clicked building&#xD;
						f_selectBuilding(GISobject, buildingsConnectedToSelectedBuildingsList);		&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
				else{&#xD;
					//Data sharing not agreed?&#xD;
					v_clickedObjectType = OL_GISObjectType.REGION;&#xD;
					uI_Results.f_updateResultsUI(energyModel);&#xD;
					&#xD;
					//Enable kpi summary button&#xD;
					uI_Results.getCheckbox_KPISummary().setEnabled(true);&#xD;
				}&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
//Still no clicked object? :select basic region&#xD;
v_clickedObjectType = OL_GISObjectType.REGION;&#xD;
uI_Results.f_updateResultsUI(energyModel);&#xD;
&#xD;
//Enable kpi summary button&#xD;
uI_Results.getCheckbox_KPISummary().setEnabled(true);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1746085650084</Id>
						<Name>f_changeDefaultColorOfPrivateGC</Name>
						<X>-670</X>
						<Y>910</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for(GIS_Object object : energyModel.pop_GIS_Objects){&#xD;
	for(GridConnection GC : object.c_containedGridConnections){&#xD;
		if(!GC.p_owner.b_dataSharingAgreed){&#xD;
			object.p_defaultFillColor = transparent(object.p_defaultFillColor, 0.6);//v_dataSharingDisagreedColor;&#xD;
			object.p_defaultLineStyle = LINE_STYLE_DOTTED;&#xD;
			object.f_style(null, null, null, null);&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
for(GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
	for(GridConnection GC : building.c_containedGridConnections){&#xD;
		if(!GC.p_owner.b_dataSharingAgreed){&#xD;
			building.p_defaultFillColor = transparent(building.p_defaultFillColor, 0.6);//v_dataSharingDisagreedColor;&#xD;
			building.p_defaultLineStyle = LINE_STYLE_DOTTED;&#xD;
			building.f_style(null, null, null, null);&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749741185117</Id>
						<Name>f_initialParkingSpacesOrder</Name>
						<X>420</X>
						<Y>-690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>Collections.shuffle(c_orderedParkingSpaces);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750247111856</Id>
						<Name>f_initialChargerOrder</Name>
						<X>420</X>
						<Y>-670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>c_orderedV1GChargers = new ArrayList&lt;J_EACharger&gt;();&#xD;
c_orderedV2GChargers = new ArrayList&lt;J_EACharger&gt;();&#xD;
c_orderedPublicChargers = new ArrayList&lt;GCPublicCharger&gt;();&#xD;
&#xD;
List&lt;J_EACharger&gt; c_inactiveV1GChargers = new ArrayList&lt;J_EACharger&gt;();&#xD;
List&lt;J_EACharger&gt; c_inactiveV2GChargers = new ArrayList&lt;J_EACharger&gt;();&#xD;
&#xD;
for (GridConnection gc : energyModel.f_getActiveGridConnections()) {&#xD;
	for (J_EACharger charger : gc.c_chargers) {&#xD;
		if (charger.V1GCapable) {&#xD;
			c_orderedV1GChargers.add(0, charger);&#xD;
		}&#xD;
		else {&#xD;
			c_orderedV1GChargers.add(charger);&#xD;
		}&#xD;
		if (charger.V2GCapable) {&#xD;
			c_orderedV2GChargers.add(0, charger);&#xD;
		}&#xD;
		else {&#xD;
			c_orderedV2GChargers.add(charger);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
for (GridConnection gc : energyModel.f_getPausedGridConnections()) {&#xD;
	for (J_EACharger charger : gc.c_chargers) {&#xD;
		if (charger.V1GCapable) {&#xD;
			c_inactiveV1GChargers.add(0, charger);&#xD;
		}&#xD;
		else {&#xD;
			c_inactiveV1GChargers.add(charger);&#xD;
		}&#xD;
		if (charger.V2GCapable) {&#xD;
			c_inactiveV2GChargers.add(0, charger);&#xD;
		}&#xD;
		else {&#xD;
			c_inactiveV2GChargers.add(charger);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
c_orderedV1GChargers.addAll( c_inactiveV1GChargers );&#xD;
c_orderedV2GChargers.addAll( c_inactiveV2GChargers );&#xD;
&#xD;
for (GCPublicCharger gc : energyModel.PublicChargers) {&#xD;
	if ( !gc.p_isChargingCentre ) {&#xD;
		c_orderedPublicChargers.add(gc);&#xD;
	}&#xD;
}&#xD;
&#xD;
Collections.shuffle(c_orderedPublicChargers);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750078798174</Id>
						<Name>f_initializeSpecialGISObjectsLegend</Name>
						<X>1410</X>
						<Y>1630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>int numberOfSpecialActiveGISObjectTypes = 0;&#xD;
&#xD;
for(OL_GISObjectType activeSpecialGISObjectType : c_modelActiveSpecialGISObjects){&#xD;
	if(activeSpecialGISObjectType == OL_GISObjectType.PARKING){&#xD;
		for(OL_ParkingSpaceType activeParkingSpaceType : c_modelActiveParkingSpaceTypes){&#xD;
			numberOfSpecialActiveGISObjectTypes ++;&#xD;
			Pair&lt;ShapeText, ShapeRectangle&gt; legendShapes = f_getNextSpecialLegendShapes(numberOfSpecialActiveGISObjectTypes);&#xD;
			f_setParkingSpaceLegendItem(activeParkingSpaceType, legendShapes.getFirst(), legendShapes.getSecond());&#xD;
		}&#xD;
	}&#xD;
	else{&#xD;
		numberOfSpecialActiveGISObjectTypes ++;&#xD;
		Pair&lt;ShapeText, ShapeRectangle&gt; legendShapes = f_getNextSpecialLegendShapes(numberOfSpecialActiveGISObjectTypes);&#xD;
		f_setSpecialGISObjectLegendItem(activeSpecialGISObjectType, legendShapes.getFirst(), legendShapes.getSecond());&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750261221085</Id>
						<Name>f_setTrafoText</Name>
						<X>50</X>
						<Y>1660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( v_clickedGridNode.p_realCapacityAvailable ) {&#xD;
	v_clickedObjectText = v_clickedGridNode.p_nodeType + "-station, " + Integer.toString( ((int)v_clickedGridNode.p_capacity_kW) ) + " kW, ID: " + v_clickedGridNode.p_gridNodeID + ", aansluitingen: " + v_clickedGridNode.f_getConnectedGridConnections().size() + ", Type station: " + v_clickedGridNode.p_description;&#xD;
}&#xD;
else {&#xD;
	v_clickedObjectText =  v_clickedGridNode.p_nodeType + "-station, " + Integer.toString( ((int)v_clickedGridNode.p_capacity_kW) ) + " kW (ingeschat), ID: " + v_clickedGridNode.p_gridNodeID + ", aansluitingen: " + v_clickedGridNode.f_getConnectedGridConnections().size() + ", Type station: " + v_clickedGridNode.p_description;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750079113839</Id>
						<Name>f_setSpecialGISObjectLegendItem</Name>
						<X>1430</X>
						<Y>1670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>activeSpecialGISObjectType</Name>
							<Type>OL_GISObjectType</Type>
						</Parameter>
						<Parameter>
							<Name>legendText</Name>
							<Type>ShapeText</Type>
						</Parameter>
						<Parameter>
							<Name>legendRect</Name>
							<Type>ShapeRectangle</Type>
						</Parameter>
						<Body>legendText.setVisible(true);&#xD;
legendRect.setVisible(true);&#xD;
&#xD;
switch(activeSpecialGISObjectType){&#xD;
	case SOLARFARM:&#xD;
		legendText.setText("Zonneveld");&#xD;
		legendRect.setFillColor(v_solarParkColor);&#xD;
		legendRect.setLineColor(v_solarParkLineColor);&#xD;
		break;&#xD;
	case WINDFARM:&#xD;
		legendText.setText("Windmolen");&#xD;
		legendRect.setFillColor(v_windFarmColor);&#xD;
		legendRect.setLineColor(v_windFarmLineColor);&#xD;
		break;&#xD;
	case CHARGER:&#xD;
		legendText.setText("Laadpaal/plein");&#xD;
		legendRect.setFillColor(v_chargingStationColor);&#xD;
		legendRect.setLineColor(v_chargingStationLineColor);&#xD;
		break;&#xD;
	case BATTERY:	&#xD;
		legendText.setText("Batterij");&#xD;
		legendRect.setFillColor(v_batteryColor);&#xD;
		legendRect.setLineColor(v_batteryLineColor);&#xD;
		break;&#xD;
	case PARCEL:&#xD;
		legendText.setText("Nieuw Perceel");&#xD;
		legendRect.setFillColor(v_parcelColor);&#xD;
		legendRect.setLineColor(v_parcelLineColor);&#xD;
		break;&#xD;
	case ELECTROLYSER:&#xD;
		legendText.setText("Electrolyser");&#xD;
		legendRect.setFillColor(v_electrolyserColor);&#xD;
		legendRect.setLineColor(v_electrolyserLineColor);&#xD;
		break;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750080865693</Id>
						<Name>f_initializeLegend</Name>
						<X>1390</X>
						<Y>1550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Default GIS buildings&#xD;
f_initializeDefaultGISBuildingsLegend();&#xD;
&#xD;
//Special gis objects&#xD;
f_initializeSpecialGISObjectsLegend();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750089851073</Id>
						<Name>f_setParkingSpaceLegendItem</Name>
						<X>1430</X>
						<Y>1690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>activeParkingSpaceType</Name>
							<Type>OL_ParkingSpaceType</Type>
						</Parameter>
						<Parameter>
							<Name>legendText</Name>
							<Type>ShapeText</Type>
						</Parameter>
						<Parameter>
							<Name>legendRect</Name>
							<Type>ShapeRectangle</Type>
						</Parameter>
						<Body>legendText.setVisible(true);&#xD;
legendRect.setVisible(true);&#xD;
&#xD;
switch(activeParkingSpaceType){&#xD;
	case PUBLIC:&#xD;
		legendText.setText("Parkeerplek: publiek");&#xD;
		legendRect.setFillColor(v_parkingSpaceColor_public);&#xD;
		legendRect.setLineColor(v_parkingSpaceLineColor_public);&#xD;
		break;&#xD;
	case PRIVATE:&#xD;
		legendText.setText("Parkeerplek: privé");&#xD;
		legendRect.setFillColor(v_parkingSpaceColor_private);&#xD;
		legendRect.setLineColor(v_parkingSpaceLineColor_private);&#xD;
		break;&#xD;
	case ELECTRIC:&#xD;
		legendText.setText("Parkeerplek: electrisch");&#xD;
		legendRect.setFillColor(v_parkingSpaceColor_electric);&#xD;
		legendRect.setLineColor(v_parkingSpaceLineColor_electric);&#xD;
		break;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Pair&lt;ShapeText, ShapeRectangle&gt;</ReturnType>
						<Id>1750092444018</Id>
						<Name>f_getNextSpecialLegendShapes</Name>
						<X>1430</X>
						<Y>1650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>legendShapesNumber</Name>
							<Type>int</Type>
						</Parameter>
						<Body>ShapeText legendText;&#xD;
ShapeRectangle legendRect;&#xD;
&#xD;
switch(legendShapesNumber){&#xD;
	case 1:&#xD;
		legendText = t_specialGISObjectLegend1;&#xD;
		legendRect = rect_specialGISObjectLegend1;&#xD;
		break;&#xD;
	case 2:&#xD;
		legendText = t_specialGISObjectLegend2;&#xD;
		legendRect = rect_specialGISObjectLegend2;&#xD;
		break;&#xD;
	case 3:&#xD;
		legendText = t_specialGISObjectLegend3;&#xD;
		legendRect = rect_specialGISObjectLegend3;&#xD;
		break;&#xD;
	case 4:&#xD;
		legendText = t_specialGISObjectLegend4;&#xD;
		legendRect = rect_specialGISObjectLegend4;&#xD;
		break;&#xD;
	case 5:&#xD;
		legendText = t_specialGISObjectLegend5;&#xD;
		legendRect = rect_specialGISObjectLegend5;&#xD;
		break;&#xD;
	case 6:&#xD;
		legendText = t_specialGISObjectLegend6;&#xD;
		legendRect = rect_specialGISObjectLegend6;&#xD;
		break;&#xD;
	case 7:&#xD;
		legendText = t_specialGISObjectLegend7;&#xD;
		legendRect = rect_specialGISObjectLegend7;&#xD;
		break;&#xD;
	case 8:&#xD;
		legendText = t_specialGISObjectLegend8;&#xD;
		legendRect = rect_specialGISObjectLegend8;&#xD;
		break;&#xD;
	case 9:&#xD;
		legendText = t_specialGISObjectLegend9;&#xD;
		legendRect = rect_specialGISObjectLegend9;&#xD;
		break;&#xD;
	case 10:&#xD;
		legendText = t_specialGISObjectLegend10;&#xD;
		legendRect = rect_specialGISObjectLegend10;&#xD;
		break;&#xD;
	case 11:&#xD;
		legendText = t_specialGISObjectLegend11;&#xD;
		legendRect = rect_specialGISObjectLegend11;&#xD;
		break;&#xD;
	case 12:&#xD;
		legendText = t_specialGISObjectLegend12;&#xD;
		legendRect = rect_specialGISObjectLegend12;&#xD;
		break;&#xD;
	default:&#xD;
		legendText = t_specialGISObjectLegend1;&#xD;
		legendRect = rect_specialGISObjectLegend1;&#xD;
		break;&#xD;
}&#xD;
&#xD;
return new Pair(legendText, legendRect);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750162397332</Id>
						<Name>f_initializeDefaultGISBuildingsLegend</Name>
						<X>1410</X>
						<Y>1570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>int numberOfDefaultActiveGISObjectTypes = 1;//Always start at 2 (1 ++) for the building types, cause 'selection' is always present (for now).&#xD;
&#xD;
for(OL_GISBuildingTypes activeDefaultGISBuildingType : c_modelActiveDefaultGISBuildings){&#xD;
	numberOfDefaultActiveGISObjectTypes ++;&#xD;
	Pair&lt;ShapeText, ShapeOval&gt; legendShapes = f_getNextDefaultLegendShapes(numberOfDefaultActiveGISObjectTypes);&#xD;
	f_setDefaultGISBuildingLegendItem(activeDefaultGISBuildingType, legendShapes.getFirst(), legendShapes.getSecond());&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Pair&lt;ShapeText, ShapeOval&gt;</ReturnType>
						<Id>1750162514744</Id>
						<Name>f_getNextDefaultLegendShapes</Name>
						<X>1430</X>
						<Y>1610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>legendShapesNumber</Name>
							<Type>int</Type>
						</Parameter>
						<Body>ShapeText legendText;&#xD;
ShapeOval legendOval;&#xD;
&#xD;
switch(legendShapesNumber){&#xD;
	case 1:&#xD;
		legendText = t_defaultLegend1;&#xD;
		legendOval = oval_defaultLegend1;&#xD;
		break;&#xD;
	case 2:&#xD;
		legendText = t_defaultLegend2;&#xD;
		legendOval = oval_defaultLegend2;&#xD;
		break;&#xD;
	case 3:&#xD;
		legendText = t_defaultLegend3;&#xD;
		legendOval = oval_defaultLegend3;&#xD;
		break;&#xD;
	case 4:&#xD;
		legendText = t_defaultLegend4;&#xD;
		legendOval = oval_defaultLegend4;&#xD;
		break;&#xD;
	case 5:&#xD;
		legendText = t_defaultLegend5;&#xD;
		legendOval = oval_defaultLegend5;&#xD;
		break;&#xD;
	default:&#xD;
		legendText = t_defaultLegend1;&#xD;
		legendOval = oval_defaultLegend1;&#xD;
}&#xD;
&#xD;
return new Pair(legendText, legendOval);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750165143690</Id>
						<Name>f_setDefaultGISBuildingLegendItem</Name>
						<X>1430</X>
						<Y>1590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>activeDefaultGISBuildingType</Name>
							<Type>OL_GISBuildingTypes</Type>
						</Parameter>
						<Parameter>
							<Name>legendText</Name>
							<Type>ShapeText</Type>
						</Parameter>
						<Parameter>
							<Name>legendOval</Name>
							<Type>ShapeOval</Type>
						</Parameter>
						<Body>legendText.setVisible(true);&#xD;
legendOval.setVisible(true);&#xD;
&#xD;
switch(activeDefaultGISBuildingType){&#xD;
	case DETAILED_COMPANY:&#xD;
		legendText.setText("Gedetaileerd bedrijf: " + v_numberOfSurveyCompanies);&#xD;
		legendOval.setFillColor(v_detailedCompanyBuildingColor);&#xD;
		legendOval.setLineColor(v_detailedCompanyBuildingLineColor);&#xD;
		break;&#xD;
	case DEFAULT_COMPANY:&#xD;
		legendText.setText("Standaard bedrijf");&#xD;
		legendOval.setFillColor(v_companyBuildingColor);&#xD;
		legendOval.setLineColor(v_companyBuildingLineColor);&#xD;
		break;&#xD;
	case HOUSE:&#xD;
		legendText.setText("Huizen");&#xD;
		legendOval.setFillColor(v_houseBuildingColor);&#xD;
		legendOval.setLineColor(v_houseBuildingLineColor);&#xD;
		break;&#xD;
	case REMAINING:&#xD;
		legendText.setText("Overige gebouwen");&#xD;
		legendOval.setFillColor(v_restBuildingColor);&#xD;
		legendOval.setLineColor(v_restBuildingLineColor);&#xD;
		break;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750333147816</Id>
						<Name>f_initialHouseholdOrder</Name>
						<X>85</X>
						<Y>-620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>c_orderedActiveVehiclesPublicParking = new ArrayList&lt;J_EADieselVehicle&gt;();&#xD;
c_orderedVehiclesPrivateParking = new ArrayList&lt;J_EAVehicle&gt;();&#xD;
&#xD;
for (GCHouse house : energyModel.Houses) {&#xD;
	if (!house.p_eigenOprit) {&#xD;
		c_orderedActiveVehiclesPublicParking.addAll(house.c_dieselVehicles);&#xD;
	}&#xD;
	else {&#xD;
		c_orderedVehiclesPrivateParking.addAll(house.c_vehicleAssets);&#xD;
	}&#xD;
}&#xD;
&#xD;
Collections.shuffle(c_orderedActiveVehiclesPublicParking);&#xD;
Collections.shuffle(c_orderedVehiclesPrivateParking);&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750340574107</Id>
						<Name>f_initialisationOfResidentialSliders</Name>
						<X>400</X>
						<Y>-340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>int nbHouses = energyModel.Houses.size();&#xD;
int nbHousesWithPV = count(energyModel.Houses, x -&gt; x.v_liveAssetsMetaData.hasPV);&#xD;
double pv_pct = 100.0 * nbHousesWithPV / nbHouses;&#xD;
uI_Tabs.pop_tabElectricity.get(0).sl_householdPVResidentialArea_pct.setValue(pv_pct, false);&#xD;
&#xD;
if ( nbHousesWithPV != 0 ) {&#xD;
	int nbHousesWithHomeBattery = count(energyModel.Houses, x -&gt; x.v_liveAssetsMetaData.hasPV &amp;&amp; x.p_batteryAsset != null);&#xD;
	double battery_pct = 100.0 * nbHousesWithHomeBattery / nbHousesWithPV;&#xD;
	uI_Tabs.pop_tabElectricity.get(0).sl_householdBatteriesResidentialArea_pct.setValue(battery_pct, false);&#xD;
}&#xD;
&#xD;
int nbHousesWithElectricCooking = count(energyModel.Houses, x -&gt; x.p_cookingMethod == OL_HouseholdCookingMethod.ELECTRIC);&#xD;
double cooking_pct = 100.0 * nbHousesWithElectricCooking / nbHouses;&#xD;
uI_Tabs.pop_tabElectricity.get(0).sl_householdElectricCookingResidentialArea_pct.setValue(cooking_pct, false);&#xD;
&#xD;
if (c_orderedVehiclesPrivateParking.size() &gt; 0) {&#xD;
	int nbPrivateEVs = count(c_orderedVehiclesPrivateParking, x -&gt; x instanceof J_EAEV);&#xD;
	double privateEVs_pct = 100.0 * nbPrivateEVs / c_orderedVehiclesPrivateParking.size();&#xD;
	uI_Tabs.pop_tabElectricity.get(0).sl_privateEVsResidentialArea_pct.setValue(privateEVs_pct, false);&#xD;
}&#xD;
&#xD;
if (c_orderedPublicChargers.size() &gt; 0) {&#xD;
	int nbPublicChargers = c_orderedPublicChargers.size();&#xD;
	int nbActivePublicChargers = count(c_orderedPublicChargers, x -&gt; x.v_isActive);&#xD;
	double activePublicChargers_pct = 100.0 * nbActivePublicChargers / c_orderedPublicChargers.size();&#xD;
	uI_Tabs.pop_tabElectricity.get(0).sl_publicChargersResidentialArea_pct.setValue(activePublicChargers_pct, false);&#xD;
	if (c_orderedActiveVehiclesPublicParking.size() &gt; 0) {&#xD;
		// Put some of the diesel cars into the non active vehicles&#xD;
		int nbCarsPerCharger = energyModel.avgc_data.p_avgEVsPerPublicCharger;&#xD;
		List&lt;J_EADieselVehicle&gt; cars = new ArrayList&lt;&gt;(c_orderedActiveVehiclesPublicParking.subList(0, nbActivePublicChargers * nbCarsPerCharger));&#xD;
		for (J_EADieselVehicle car : cars) {&#xD;
			c_orderedActiveVehiclesPublicParking.remove(car);&#xD;
			c_orderedNonActiveVehiclesPublicParking.add(0, car);&#xD;
			car.removeEnergyAsset();&#xD;
		}&#xD;
	}&#xD;
	int nbV1GChargers = count(c_orderedV1GChargers, x -&gt; x.V1GCapable);&#xD;
	int nbV2GChargers =count(c_orderedV2GChargers, x -&gt; x.V2GCapable);&#xD;
	double V1G_pct = 100.0 * nbV1GChargers / nbPublicChargers;&#xD;
	double V2G_pct = 100.0 * nbV2GChargers / nbPublicChargers;&#xD;
	uI_Tabs.pop_tabElectricity.get(0).sl_chargersThatSupportV1G_pct.setValue(V1G_pct, false);&#xD;
	uI_Tabs.pop_tabElectricity.get(0).sl_chargersThatSupportV2G_pct.setValue(V2G_pct, false);&#xD;
}&#xD;
&#xD;
&#xD;
double averageNeighbourhoodBatterySize_kWh = 0;&#xD;
for (GCGridBattery gc : energyModel.GridBatteries) {&#xD;
	averageNeighbourhoodBatterySize_kWh += gc.p_batteryAsset.getStorageCapacity_kWh();&#xD;
}&#xD;
averageNeighbourhoodBatterySize_kWh /= energyModel.GridBatteries.size();&#xD;
uI_Tabs.pop_tabElectricity.get(0).sl_gridBatteriesResidentialArea_kWh.setValue(averageNeighbourhoodBatterySize_kWh, false);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752756002220</Id>
						<Name>f_setColorsBasedOnCongestion_objects</Name>
						<X>1960</X>
						<Y>1820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gis_area</Name>
							<Type>GIS_Object</Type>
						</Parameter>
						<Body>if (gis_area.c_containedGridConnections.size() &gt; 0) {&#xD;
	double maxLoad_fr_gis_object = 0;&#xD;
	boolean capacityKnown = false;&#xD;
	&#xD;
	for(GridConnection gc : gis_area.c_containedGridConnections){&#xD;
		if(gc.v_rapidRunData != null){&#xD;
			double maxLoad_fr_gc = 0;&#xD;
			double maxLoad_fr_gc_delivery = gc.v_rapidRunData.connectionMetaData.contractedDeliveryCapacity_kW &gt; 0 &amp;&amp; gc.v_rapidRunData.connectionMetaData.contractedDeliveryCapacityKnown ? gc.v_rapidRunData.getPeakDelivery_kW()/gc.v_rapidRunData.connectionMetaData.contractedDeliveryCapacity_kW : 0;&#xD;
			double maxLoad_fr_gc_feedin = gc.v_rapidRunData.connectionMetaData.contractedFeedinCapacity_kW &gt; 0 &amp;&amp; gc.v_rapidRunData.connectionMetaData.contractedFeedinCapacityKnown  ? gc.v_rapidRunData.getPeakFeedin_kW()/gc.v_rapidRunData.connectionMetaData.contractedFeedinCapacity_kW : 0;&#xD;
&#xD;
			switch(rb_mapOverlayLegend_congestion.getValue()){&#xD;
				case 0:&#xD;
					maxLoad_fr_gc = maxLoad_fr_gc_delivery;&#xD;
					&#xD;
					if(gc.v_rapidRunData.connectionMetaData.contractedDeliveryCapacityKnown){&#xD;
						capacityKnown = true;&#xD;
					}&#xD;
					break;&#xD;
				case 1:&#xD;
					maxLoad_fr_gc = maxLoad_fr_gc_feedin;&#xD;
					if(gc.v_rapidRunData.connectionMetaData.contractedFeedinCapacityKnown){&#xD;
						capacityKnown = true;&#xD;
					}&#xD;
					break;&#xD;
				case 2:&#xD;
					maxLoad_fr_gc = max(maxLoad_fr_gc_delivery, maxLoad_fr_gc_feedin);&#xD;
					if(maxLoad_fr_gc_delivery &gt; maxLoad_fr_gc_feedin &amp;&amp; gc.v_rapidRunData.connectionMetaData.contractedDeliveryCapacityKnown){&#xD;
						capacityKnown = true;&#xD;
					}&#xD;
					else if(maxLoad_fr_gc_feedin &gt; maxLoad_fr_gc_delivery &amp;&amp; gc.v_rapidRunData.connectionMetaData.contractedFeedinCapacityKnown){&#xD;
						capacityKnown = true;&#xD;
					}&#xD;
					break;&#xD;
			}&#xD;
			if(maxLoad_fr_gc &gt; maxLoad_fr_gis_object){&#xD;
				maxLoad_fr_gis_object = maxLoad_fr_gc;&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//Set colour based on found parameters&#xD;
	if(!capacityKnown &amp;&amp; p_selectedProjectType != RESIDENTIAL){&#xD;
		gis_area.gisRegion.setFillColor(v_gridNodeColorCapacityUnknown);&#xD;
		gis_area.gisRegion.setLineColor(v_gridNodeLineColorCapacityUnknown);&#xD;
	} else if (maxLoad_fr_gis_object &gt; 1) {&#xD;
		gis_area.gisRegion.setFillColor(v_gridNodeColorCongested);&#xD;
		gis_area.gisRegion.setLineColor(v_gridLineColorCongested);&#xD;
	} else if (maxLoad_fr_gis_object &gt; 0.7) {&#xD;
		gis_area.gisRegion.setFillColor(v_gridNodeColorStrained);&#xD;
		gis_area.gisRegion.setLineColor(v_gridNodeLineColorStrained);&#xD;
	} else {&#xD;
		gis_area.gisRegion.setFillColor(v_gridNodeColorUncongested);&#xD;
		gis_area.gisRegion.setLineColor(v_gridNodeLineColorUncongested);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752756016324</Id>
						<Name>f_setColorsBasedOnCongestion_gridnodes</Name>
						<X>1960</X>
						<Y>1840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gn</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Parameter>
							<Name>isLiveSim</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>if (gn!=null &amp;&amp; gn.gisRegion != null){&#xD;
	double maxLoad_fr = 0;&#xD;
	if(isLiveSim){&#xD;
		maxLoad_fr = abs(gn.v_currentLoad_kW)/gn.p_capacity_kW;	&#xD;
	}&#xD;
	else{&#xD;
		J_LoadDurationCurves loadCurves = gn.f_getDuurkrommes();&#xD;
		double maxLoad_fr_delivery = gn.p_capacity_kW &gt; 0 ? abs(loadCurves.ds_loadDurationCurveTotal_kW.getY(0))/gn.p_capacity_kW : 0;&#xD;
		double maxLoad_fr_feedin = gn.p_capacity_kW &gt; 0 ? abs(loadCurves.ds_loadDurationCurveTotal_kW.getY(loadCurves.ds_loadDurationCurveTotal_kW.size()-1))/gn.p_capacity_kW : 0;&#xD;
&#xD;
		switch(rb_mapOverlayLegend_congestion.getValue()){&#xD;
			case 0:&#xD;
				maxLoad_fr = maxLoad_fr_delivery;&#xD;
				break;&#xD;
			case 1:&#xD;
				maxLoad_fr = maxLoad_fr_feedin;&#xD;
				break;&#xD;
			case 2:&#xD;
				maxLoad_fr = max(maxLoad_fr_delivery, maxLoad_fr_feedin);&#xD;
				break;&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	if(!isLiveSim &amp;&amp; !gn.p_realCapacityAvailable &amp;&amp; p_selectedProjectType != RESIDENTIAL){&#xD;
		gn.gisRegion.setFillColor(v_gridNodeColorCapacityUnknown);&#xD;
		gn.gisRegion.setLineColor(v_gridNodeLineColorCapacityUnknown);&#xD;
	} else if (maxLoad_fr &gt; 1) {&#xD;
		gn.gisRegion.setFillColor(v_gridNodeColorCongested);&#xD;
		gn.gisRegion.setLineColor(v_gridLineColorCongested);&#xD;
	} else if (maxLoad_fr &gt; 0.7) {&#xD;
		gn.gisRegion.setFillColor(v_gridNodeColorStrained);&#xD;
		gn.gisRegion.setLineColor(v_gridNodeLineColorStrained);&#xD;
	} else {&#xD;
		gn.gisRegion.setFillColor(v_gridNodeColorUncongested);&#xD;
		gn.gisRegion.setLineColor(v_gridNodeLineColorUncongested);&#xD;
	}&#xD;
	&#xD;
	if( gn == v_clickedGridNode &amp;&amp; gn != v_previousClickedGridNode){ // dit zorgt ervoor dat de kleuringfunctie correct werkt in zowel live stand als pauze stand&#xD;
		gn.gisRegion.setFillColor( v_selectionColor );&#xD;
		gn.gisRegion.setLineColor( orange );&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752836715726</Id>
						<Name>f_clearSelectionAndSelectEnergyModel</Name>
						<X>50</X>
						<Y>1220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_previousClickedObjectType = v_clickedObjectType;&#xD;
c_previousSelectedObjects = new ArrayList&lt;GIS_Object&gt;(c_selectedObjects);&#xD;
c_selectedGridConnections.clear();&#xD;
c_selectedObjects.clear();&#xD;
&#xD;
//Deselect previous selection&#xD;
if( v_previousClickedObjectType != null){&#xD;
	f_deselectPreviousSelect();&#xD;
}&#xD;
&#xD;
v_clickedObjectType = OL_GISObjectType.REGION;&#xD;
uI_Results.f_updateResultsUI(energyModel);&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752837115143</Id>
						<Name>f_styleLVLV</Name>
						<X>-650</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gisregion</Name>
							<Type>GISRegion</Type>
						</Parameter>
						<Body>gisregion.setLineStyle( LINE_STYLE_SOLID );&#xD;
gisregion.setLineColor( v_LVLVLineColor );&#xD;
gisregion.setLineWidth(2);		&#xD;
gisregion.setFillColor(v_LVLVNodeColor);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753085860778</Id>
						<Name>f_initializeMapOverlayRadioButton</Name>
						<X>1920</X>
						<Y>1450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set active map overlay types if they are set in the project settings&#xD;
if(settings.activeMapOverlayTypes() != null &amp;&amp; settings.activeMapOverlayTypes().size() &gt; 0){&#xD;
	c_loadedMapOverlayTypes = new ArrayList&lt;OL_MapOverlayTypes&gt;(settings.activeMapOverlayTypes());&#xD;
	if(!c_loadedMapOverlayTypes.contains(OL_MapOverlayTypes.DEFAULT)){&#xD;
		c_loadedMapOverlayTypes.add(0, OL_MapOverlayTypes.DEFAULT); // Force default to be available&#xD;
	}&#xD;
}&#xD;
else{//Take the default&#xD;
	c_loadedMapOverlayTypes.add(OL_MapOverlayTypes.DEFAULT);&#xD;
	c_loadedMapOverlayTypes.add(OL_MapOverlayTypes.ELECTRICITY_CONSUMPTION);&#xD;
	c_loadedMapOverlayTypes.add(OL_MapOverlayTypes.PV_PRODUCTION);&#xD;
	c_loadedMapOverlayTypes.add(OL_MapOverlayTypes.GRID_NEIGHBOURS);&#xD;
	c_loadedMapOverlayTypes.add(OL_MapOverlayTypes.CONGESTION);&#xD;
}&#xD;
&#xD;
&#xD;
//Adjust the visualisation of the radiobuttons&#xD;
Presentable presentable = gr_mapOverlayLegenda.getPresentable();&#xD;
boolean ispublic = true;&#xD;
double x = 756;&#xD;
double y = 837;&#xD;
double width = 130;&#xD;
double height = 0;//Not needed, automatically adjust by adding options&#xD;
Color textColor = Color.BLACK;&#xD;
boolean enabled = true;&#xD;
Font font = new Font("Dialog", Font.PLAIN, 11);&#xD;
boolean vertical = true;&#xD;
&#xD;
&#xD;
//Set words for the radiobutton options&#xD;
List&lt;String&gt; RadioButtonOptions_list = new ArrayList&lt;String&gt;();&#xD;
for(OL_MapOverlayTypes mapOverlayType : c_loadedMapOverlayTypes){&#xD;
	switch(mapOverlayType){&#xD;
		case DEFAULT:&#xD;
			RadioButtonOptions_list.add("Standaard");&#xD;
			break;&#xD;
		case ELECTRICITY_CONSUMPTION:&#xD;
			RadioButtonOptions_list.add("Elektriciteitsverbruik");&#xD;
			break;&#xD;
		case PV_PRODUCTION:&#xD;
			RadioButtonOptions_list.add("PV Opwek");&#xD;
			break;&#xD;
		case GRID_NEIGHBOURS:&#xD;
			RadioButtonOptions_list.add("Energie Buren");&#xD;
			break;&#xD;
		case CONGESTION:&#xD;
			RadioButtonOptions_list.add("Netbelasting");&#xD;
			break;&#xD;
	}&#xD;
} &#xD;
&#xD;
String[] RadioButtonOptions = RadioButtonOptions_list.toArray(String[]::new);&#xD;
&#xD;
//Create the radiobutton and set the correct action.&#xD;
rb_mapOverlay = new ShapeRadioButtonGroup(presentable, ispublic, x ,y, width, height, textColor, enabled, font, vertical, RadioButtonOptions){&#xD;
	@Override&#xD;
	public void action() {&#xD;
		f_setMapOverlay();&#xD;
	}&#xD;
};&#xD;
&#xD;
presentation.add(rb_mapOverlay);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753096794863</Id>
						<Name>f_setMapOverlay</Name>
						<X>1920</X>
						<Y>1540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//reset legend&#xD;
gr_defaultLegenda.setVisible(false);&#xD;
gr_mapOverlayLegend_ElectricityConsumption.setVisible(false);&#xD;
gr_mapOverlayLegend_PVProduction.setVisible(false);&#xD;
gr_mapOverlayLegend_gridNeighbours.setVisible(false);&#xD;
gr_mapOverlayLegend_congestion.setVisible(false);&#xD;
b_updateLiveCongestionColors = false;&#xD;
f_clearSelectionAndSelectEnergyModel();&#xD;
&#xD;
//Get selected map overlay type, based on loaded order of the radio buttons&#xD;
OL_MapOverlayTypes selectedMapOverlayType = c_loadedMapOverlayTypes.get(rb_mapOverlay.getValue());&#xD;
&#xD;
//Set the correct map overlay&#xD;
switch(selectedMapOverlayType){&#xD;
	case DEFAULT:&#xD;
		f_setMapOverlay_Default();&#xD;
		break;&#xD;
	case ELECTRICITY_CONSUMPTION:&#xD;
		f_setMapOverlay_ElectricityConsumption();&#xD;
		break;&#xD;
	case PV_PRODUCTION:&#xD;
		f_setMapOverlay_PVProduction();&#xD;
		break;&#xD;
	case GRID_NEIGHBOURS:&#xD;
		f_setMapOverlay_GridTopology();&#xD;
		break;&#xD;
	case CONGESTION:&#xD;
		f_setMapOverlay_Congestion();&#xD;
		break;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753097345978</Id>
						<Name>f_setMapOverlay_ElectricityConsumption</Name>
						<X>1940</X>
						<Y>1590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set legend&#xD;
b_updateLiveCongestionColors = true;&#xD;
gr_mapOverlayLegend_ElectricityConsumption.setVisible(true);&#xD;
&#xD;
//Colour gis objects&#xD;
if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL){&#xD;
	for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
		f_setColorsBasedOnConsumptionProfileHouseholds(building);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	if(energyModel.v_rapidRunData == null){&#xD;
		f_setErrorScreen("Dit overzicht wordt pas beschikbaar na het uitvoeren van een jaarsimulatie. In plaats daarvan is de standaard kaart geselecteerd.");&#xD;
		rb_mapOverlay.setValue(c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.DEFAULT),true);&#xD;
		return;			&#xD;
	}&#xD;
	gr_mapOverlayLegend_ElectricityConsumption.setVisible(true);&#xD;
	for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
		if(building.gisRegion.isVisible()){&#xD;
			f_setColorsBasedOnElectricityConsumption(building);&#xD;
		}&#xD;
	}&#xD;
	/*for (GIS_Object object : energyModel.pop_GIS_Objects){&#xD;
		f_setColorsBasedOnConsumpion(object);&#xD;
	}*/&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753097409446</Id>
						<Name>f_setMapOverlay_PVProduction</Name>
						<X>1940</X>
						<Y>1660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set legend&#xD;
b_updateLiveCongestionColors = true;&#xD;
gr_mapOverlayLegend_PVProduction.setVisible(true);&#xD;
&#xD;
//Colour gis objects&#xD;
if (p_selectedProjectType == OL_ProjectType.RESIDENTIAL){&#xD;
	for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
		f_setColorsBasedOnProductionHouseholds(building);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
		f_setColorsBasedOnProduction(building);&#xD;
	}&#xD;
	/*for (GIS_Object object : energyModel.pop_GIS_Objects){&#xD;
		f_setColorsBasedOnProduction(object);&#xD;
	}*/&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753097484078</Id>
						<Name>f_setMapOverlay_GridTopology</Name>
						<X>1940</X>
						<Y>1730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set legend&#xD;
gr_mapOverlayLegend_gridNeighbours.setVisible(true);&#xD;
b_updateLiveCongestionColors = false;&#xD;
&#xD;
//Colour gis objects&#xD;
for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
	f_setColorsBasedOnGridTopology_objects(building);&#xD;
}&#xD;
/*for (GIS_Object object : energyModel.pop_GIS_Objects){&#xD;
	f_setColorsBasedOnGridTopology_objects(object);&#xD;
}*/&#xD;
for (GridNode GN : energyModel.pop_gridNodes){&#xD;
	f_setColorsBasedOnGridTopology_gridnodes(GN);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753097518541</Id>
						<Name>f_setMapOverlay_Congestion</Name>
						<X>1940</X>
						<Y>1800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(energyModel.v_rapidRunData == null){&#xD;
	f_setErrorScreen("Dit overzicht wordt pas beschikbaar na het uitvoeren van een jaarsimulatie. In plaats daarvan is de standaard kaart geselecteerd.");&#xD;
	rb_mapOverlay.setValue(c_loadedMapOverlayTypes.indexOf(OL_MapOverlayTypes.DEFAULT),true);&#xD;
	return;			&#xD;
}&#xD;
&#xD;
//Set legend&#xD;
gr_mapOverlayLegend_congestion.setVisible(true);&#xD;
b_updateLiveCongestionColors = false;&#xD;
&#xD;
//Colour gis objects&#xD;
for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
	f_setColorsBasedOnCongestion_objects(building);&#xD;
}&#xD;
/*&#xD;
for (GIS_Object object : energyModel.pop_GIS_Objects){&#xD;
	f_setColorsBasedOnCongestion_objects(object);&#xD;
}&#xD;
*/&#xD;
for (GridNode GN : energyModel.pop_gridNodes){&#xD;
	f_setColorsBasedOnCongestion_gridnodes(GN, false);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753097561639</Id>
						<Name>f_setMapOverlay_Default</Name>
						<X>1940</X>
						<Y>1565</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>b_updateLiveCongestionColors = true;&#xD;
gr_defaultLegenda.setVisible(true);	&#xD;
for (GIS_Building b: energyModel.pop_GIS_Buildings) {&#xD;
	f_styleAreas(b);&#xD;
}&#xD;
/*for (GIS_Object object : energyModel.pop_GIS_Objects){&#xD;
	f_styleAreas(object);&#xD;
}*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753108764992</Id>
						<Name>f_setMapOverlay_EnergyLabel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1940</X>
						<Y>1870</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>b_updateLiveCongestionColors = true;&#xD;
for (GIS_Building building : energyModel.pop_GIS_Buildings){&#xD;
	f_setColorsBasedOnEnergyLabels(building);&#xD;
}</Body>
					</Function>
				</Functions>
				<Connectivity>
					<ExcelFile>
						<Id>1744624088854</Id>
						<Name>excel_exportBalanceLoadData</Name>
						<X>-555</X>
						<Y>-365</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ResourceReference>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>Export_ModelData.xlsx</ClassName>
						</ResourceReference>
						<SaveInSnapshot>false</SaveInSnapshot>
						<LoadOnStartup>true</LoadOnStartup>
						<SaveOnDispose>true</SaveOnDispose>
					</ExcelFile>
				</Connectivity>
				<AgentLinks>
					<AgentLink>
						<Id>1658477103135</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<EmbeddedObjects>
					<EmbeddedObject>
						<Id>1708522361909</Id>
						<Name>ui_companies</Name>
						<X>-240</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_company</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>UI_company</ClassName>
								<ItemName>1708522361868</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_companyName</Name>
							</Parameter>
							<Parameter>
								<Name>p_amountOfGC</Name>
							</Parameter>
							<Parameter>
								<Name>p_amountOfBuildings</Name>
							</Parameter>
							<Parameter>
								<Name>p_company</Name>
							</Parameter>
							<Parameter>
								<Name>p_maxAddedVehicles</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089963</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1709049456144</Id>
						<Name>ui_Battery</Name>
						<X>-240</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Battery</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>UI_Battery</ClassName>
								<ItemName>1709049456141</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_amountOfGISObjects</Name>
							</Parameter>
							<Parameter>
								<Name>p_amountOfGC</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089962</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1716193013122</Id>
						<Name>uI_Results</Name>
						<X>-670</X>
						<Y>611</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1716193014596</PresentationId>
						<ActiveObjectClass>
							<PackageName>digital_twin_results</PackageName>
							<ClassName>UI_Results</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>digital_twin_results</PackageName>
								<ClassName>UI_Results</ClassName>
								<ItemName>1704197366556</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>energyModel</Name>
								<Value Class="CodeValue">
									<Code>energyModel</Code>
								</Value>
							</Parameter>
							<Parameter>
								<Name>p_cutOff_MWh</Name>
							</Parameter>
							<Parameter>
								<Name>gr_infoText</Name>
							</Parameter>
							<Parameter>
								<Name>gr_closeInfoText</Name>
							</Parameter>
							<Parameter>
								<Name>t_infoTextDescription</Name>
							</Parameter>
							<Parameter>
								<Name>rect_infoText</Name>
							</Parameter>
							<Parameter>
								<Name>p_currentActiveInfoBubble</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089961</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1717506326727</Id>
						<Name>ui_Hydrogen</Name>
						<X>-240</X>
						<Y>530</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Hydrogen</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>UI_Hydrogen</ClassName>
								<ItemName>1717506309785</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_amountOfGISObjects</Name>
							</Parameter>
							<Parameter>
								<Name>p_amountOfGC</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089960</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1722252541830</Id>
						<Name>uI_Tabs</Name>
						<X>-670</X>
						<Y>711</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<PresentationId>1722252542596</PresentationId>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>UI_Tabs</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>UI_Tabs</ClassName>
								<ItemName>1722245292191</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters/>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089959</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
				</EmbeddedObjects>
				<Presentation>
					<Level>
						<Id>1658477103139</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1701947860073</Id>
								<Name>rect_canvas</Name>
								<X>-600</X>
								<Y>-200</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor/>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>6000</Width>
								<Height>2400</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1701952231399</Id>
								<Name>rect_gismap</Name>
								<X>400</X>
								<Y>85</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor/>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>1020</Width>
								<Height>675</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-3092235</FillColor>
								<FillColorCode>v_themeColor</FillColorCode>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Group>
								<Id>1724074923402</Id>
								<Name>gr_menu</Name>
								<X>940</X>
								<Y>-10</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1724074975224</Id>
										<Name>menuViewOpen2</Name>
										<X>500</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>260</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>new Color (226,0,37,255)</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074975226</Id>
										<Name>menuViewOpen3</Name>
										<X>760</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>240</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>new Color (226,0,37,20)</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Image>
										<Id>1724074975228</Id>
										<Name>image_zenmoLogo</Name>
										<X>625</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>getExperimentHost().openWebSite("https://www.zenmo.com");</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>130.345</Width>
										<Height>60</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>logo_zenmo.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Rectangle>
										<Id>1724074975230</Id>
										<Name>menuViewOpen1</Name>
										<X>1000</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>200</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>v_menuFrameColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074980256</Id>
										<Name>rect_menuViewOpen</Name>
										<X>-1120</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<Lock>true</Lock>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1620</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>v_menuFrameColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074980258</Id>
										<Name>rect_menuViewOpen2</Name>
										<X>400</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>360</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>new Color (226,0,37,255)</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074980260</Id>
										<Name>rect_menuViewOpen3</Name>
										<X>760</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>240</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>new Color (226,0,37,20)</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074980262</Id>
										<Name>rect_menuViewOpen4</Name>
										<ExcludeFromBuild>true</ExcludeFromBuild>
										<X>1020</X>
										<Y>-630</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<VisibleCode>v_isViewAreaMenuVisible</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>200</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>682673374</FillColor>
										<FillColorCode>v_menuFrameColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Image>
										<Id>1724074987235</Id>
										<Name>image_tueLogo</Name>
										<X>410</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>getExperimentHost().openWebSite("https://www.tue.nl/en/research/research-groups/innovation-sciences/technology-innovation-society/projects/new-energy-outlook-for-the-netherlands/");</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>205.802</Width>
										<Height>60</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>logo_TUe_red.png</ClassName>
											</ImageResourceReference>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>logo_TUe_white.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1665052211228</Id>
								<Name>rect_mainFunctions</Name>
								<X>-700</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>680</Width>
								<Height>970</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1705481955546</Id>
								<Name>rect_simulationEngine</Name>
								<X>-270</X>
								<Y>820</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>250</Width>
								<Height>150</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1665052603927</Id>
								<Name>rect_input</Name>
								<X>-700</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>169</Width>
								<Height>40</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1665052191319</Id>
								<Name>t_input</Name>
								<X>-640</X>
								<Y>5</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16744448</Color>
								<Text>Input</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1690205003572</Id>
								<Name>line_simulationEngine</Name>
								<X>-230</X>
								<Y>850</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>170</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1690205003577</Id>
								<Name>t_simulationEngine</Name>
								<X>-151</X>
								<Y>830</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Simulation engine</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1690975123923</Id>
								<Name>t_date</Name>
								<X>420</X>
								<Y>54</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Datum</Text>
								<TextCode>date()</TextCode>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1696520897545</Id>
								<Name>gr_compareResultsButton</Name>
								<X>1840</X>
								<Y>1080</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<OnClickCode>/*
if(gr_compareResults.isVisible() == false){
	gr_compareResults.setVisible(true);
	gr_compareResultsButton.setVisible(false);
	runSimulation();
	//gr_neighborhoodResultsTabs.setVisible(false);
	//gr_scenariosVeghel.setVisible(false);
}
*/
traceln("gr_compareResultsButton is not functional!");</OnClickCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<RoundedRectangle>
										<Id>1696520897547</Id>
										<Name>roundRectangle_compareResultsButton</Name>
										<X>-100</X>
										<Y>-30</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>360</Width>
										<Height>50</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>new Color (255, 255, 255, 100)</FillColorCode>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1696520897549</Id>
										<Name>t_compareResultsButton</Name>
										<X>-89</X>
										<Y>-14</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Vergelijk resultaten van meerdere scenario's</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Image>
										<Id>1696520897551</Id>
										<Name>image_compareResultsButton</Name>
										<X>220</X>
										<Y>5</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>270.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_arrow.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Group>
								<Id>1696520897606</Id>
								<Name>gr_zoomButton</Name>
								<X>1330</X>
								<Y>680</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Arc>
										<Id>1696520897608</Id>
										<Name>arc_zoomIn</Name>
										<X>-2.5319999999999965</X>
										<Y>-20.114000000000004</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-13882324</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Dz>0</Dz>
										<Rotation>0.0</Rotation>
										<RadiusX>17.53</RadiusX>
										<RadiusY>40</RadiusY>
										<StartAngle>-179.1999969482422</StartAngle>
										<Angle>178.1999969482422</Angle>
										<FillColor>-13882324</FillColor>
										<FillMaterial>null</FillMaterial>
									</Arc>
									<Arc>
										<Id>1696520897610</Id>
										<Name>arc_zoomOut</Name>
										<X>-2.483000000000004</X>
										<Y>8.137</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-13882324</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Dz>0</Dz>
										<Rotation>0.0</Rotation>
										<RadiusX>17.483</RadiusX>
										<RadiusY>40</RadiusY>
										<StartAngle>1.2000000476837158</StartAngle>
										<Angle>178.1999969482422</Angle>
										<FillColor>-13882324</FillColor>
										<FillMaterial>null</FillMaterial>
									</Arc>
									<Rectangle>
										<Id>1696520897612</Id>
										<Name>rect_zoomButton</Name>
										<X>-20</X>
										<Y>-20</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-13882324</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>35</Width>
										<Height>28</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-13882324</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Line>
										<Id>1696520897614</Id>
										<Name>line_zoomButtonSeperator</Name>
										<X>-16</X>
										<Y>-5</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-8355712</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>27</Dx>
										<Dy>0</Dy>
										<Dz>0</Dz>
									</Line>
									<Line>
										<Id>1696520897616</Id>
										<Name>line_zoomIn1</Name>
										<X>-9</X>
										<Y>-21</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-1</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>12</Dx>
										<Dy>0</Dy>
										<Dz>0</Dz>
									</Line>
									<Line>
										<Id>1696520897618</Id>
										<Name>line_zoomIn2</Name>
										<X>-3</X>
										<Y>-27</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-1</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>0</Dx>
										<Dy>12</Dy>
										<Dz>0</Dz>
									</Line>
									<Line>
										<Id>1696520897620</Id>
										<Name>line_zoomOut</Name>
										<X>-10</X>
										<Y>8</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-1</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>15</Dx>
										<Dy>0</Dy>
										<Dz>0</Dz>
									</Line>
									<Rectangle>
										<Id>1696520897622</Id>
										<Name>rect_zoomIn</Name>
										<X>-20</X>
										<Y>-35</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>map.zoomIn();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>35</Width>
										<Height>30</Height>
										<Rotation>0.0</Rotation>
										<FillColor/>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1696520897624</Id>
										<Name>rect_zoomOut</Name>
										<X>-20</X>
										<Y>-5</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>map.zoomOut();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>35</Width>
										<Height>30</Height>
										<Rotation>0.0</Rotation>
										<FillColor/>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
								</Presentation>
							</Group>
							<Text>
								<Id>1696837759915</Id>
								<Name>t_legendaColors</Name>
								<X>380</X>
								<Y>1020</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Legenda Colors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1701951640330</Id>
								<Name>group_legenda</Name>
								<X>910</X>
								<Y>880</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1701951640332</Id>
										<Name>rect_legendaBackground</Name>
										<X>-510</X>
										<Y>-100</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1020</Width>
										<Height>200</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-3092235</FillColor>
										<FillColorCode>v_themeColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1701951640336</Id>
										<Name>rect_legenda</Name>
										<X>-500</X>
										<Y>-84</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-1644806</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>DOTTED</LineStyle>
										<Width>1000</Width>
										<Height>172</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1701951640338</Id>
										<Name>t_legenda</Name>
										<X>-470</X>
										<Y>-100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-1</Color>
										<Text>Legenda</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Line>
										<Id>1701951640396</Id>
										<Name>line_legendaSeperator1</Name>
										<X>-165</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-1644806</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>0</Dx>
										<Dy>140</Dy>
										<Dz>0</Dz>
									</Line>
									<Line>
										<Id>1724074247375</Id>
										<Name>line_legendaSeperator2</Name>
										<X>-10</X>
										<Y>-70</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-1644806</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<BeginArrowSize>1</BeginArrowSize>
										<BeginArrowStyle>0</BeginArrowStyle>
										<EndArrowSize>1</EndArrowSize>
										<EndArrowStyle>0</EndArrowStyle>
										<Dx>0</Dx>
										<Dy>140</Dy>
										<Dz>0</Dz>
									</Line>
									<Group>
										<Id>1724074154126</Id>
										<Name>gr_infrastructure</Name>
										<X>-340</X>
										<Y>5</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Text>
												<Id>1724074154148</Id>
												<Name>t_infrastructure</Name>
												<X>-60</X>
												<Y>-79</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Infrastructuur</Text>
												<Font>
													<Name>Calibri</Name>
													<Size>16</Size>
													<Style>1</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Line>
												<Id>1724074154158</Id>
												<Name>line_infrastructure</Name>
												<X>-120</X>
												<Y>-59</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-1644806</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>271</Dx>
												<Dy>0</Dy>
												<Dz>0</Dz>
											</Line>
											<Group>
												<Id>1724074839746</Id>
												<Name>gr_gridnodes</Name>
												<X>-75</X>
												<Y>-19</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Polyline>
														<Id>1724074853961</Id>
														<Name>polyline_congestedGridnode</Name>
														<X>-55</X>
														<Y>40</Y>
														<Label>
															<X>10</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineColorCode>v_gridLineColorCongested</LineColorCode>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<BeginArrowSize>1</BeginArrowSize>
														<BeginArrowStyle>0</BeginArrowStyle>
														<EndArrowSize>1</EndArrowSize>
														<EndArrowStyle>0</EndArrowStyle>
														<FillColor/>
														<FillColorCode>v_gridNodeColorCongested</FillColorCode>
														<FillMaterial>null</FillMaterial>
														<Points>
															<Point>
															 <X>0</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>10</X>
															 <Y>-14</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>20</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>0</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
														</Points>
														<Closed>false</Closed>
													</Polyline>
													<Text>
														<Id>1724074853963</Id>
														<Name>txt_congestedGridnode</Name>
														<X>-25</X>
														<Y>25</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>Trafo overbelast</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
													<Polyline>
														<Id>1724074853967</Id>
														<Name>polyline_gridnode</Name>
														<X>-55</X>
														<Y>-7</Y>
														<Label>
															<X>10</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineColorCode>v_MVLVLineColor</LineColorCode>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<BeginArrowSize>1</BeginArrowSize>
														<BeginArrowStyle>0</BeginArrowStyle>
														<EndArrowSize>1</EndArrowSize>
														<EndArrowStyle>0</EndArrowStyle>
														<FillColor/>
														<FillColorCode>v_MVLVNodeColor</FillColorCode>
														<FillMaterial>null</FillMaterial>
														<Points>
															<Point>
															 <X>0</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>10</X>
															 <Y>-14</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>20</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>0</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
														</Points>
														<Closed>false</Closed>
													</Polyline>
													<Text>
														<Id>1724074853969</Id>
														<Name>txt_gridnode</Name>
														<X>-25</X>
														<Y>-21</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>Trafo stabiel</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
													<Polyline>
														<Id>1724074853971</Id>
														<Name>polyline_strainedGridnode</Name>
														<X>-55</X>
														<Y>15</Y>
														<Label>
															<X>10</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineColorCode>v_gridNodeLineColorStrained</LineColorCode>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<BeginArrowSize>1</BeginArrowSize>
														<BeginArrowStyle>0</BeginArrowStyle>
														<EndArrowSize>1</EndArrowSize>
														<EndArrowStyle>0</EndArrowStyle>
														<FillColor/>
														<FillColorCode>v_gridNodeColorStrained</FillColorCode>
														<FillMaterial>null</FillMaterial>
														<Points>
															<Point>
															 <X>0</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>10</X>
															 <Y>-14</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>20</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
															<Point>
															 <X>0</X>
															 <Y>0</Y>
															 <Z>0</Z>
															</Point>
														</Points>
														<Closed>false</Closed>
													</Polyline>
													<Text>
														<Id>1724074853973</Id>
														<Name>txt_strainedGridnode</Name>
														<X>-25</X>
														<Y>2</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>Trafo belast</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
												</Presentation>
											</Group>
											<Group>
												<Id>1724074839748</Id>
												<Name>gr_cables</Name>
												<X>75</X>
												<Y>5</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<VisibleCode>b_showCables</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Text>
														<Id>1724074864095</Id>
														<Name>t_HV</Name>
														<ExcludeFromBuild>true</ExcludeFromBuild>
														<X>-15</X>
														<Y>15</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>HS-net (150kV)</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
													<Line>
														<Id>1724074864097</Id>
														<Name>line_HV</Name>
														<ExcludeFromBuild>true</ExcludeFromBuild>
														<X>-40</X>
														<Y>25</Y>
														<Label>
															<X>10</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>2.5</LineWidth>
														<LineColor>-16776961</LineColor>
														<LineColorCode>v_HVGridColor</LineColorCode>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<BeginArrowSize>1</BeginArrowSize>
														<BeginArrowStyle>0</BeginArrowStyle>
														<EndArrowSize>1</EndArrowSize>
														<EndArrowStyle>0</EndArrowStyle>
														<Dx>10</Dx>
														<Dy>0</Dy>
														<Dz>0</Dz>
													</Line>
													<Text>
														<Id>1724074870571</Id>
														<Name>t_MV</Name>
														<X>-15</X>
														<Y>-50</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>MS-net</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
													<Text>
														<Id>1724074870573</Id>
														<Name>t_LV</Name>
														<X>-15</X>
														<Y>-25</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>LS-net</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
													<Line>
														<Id>1724074870575</Id>
														<Name>line_LV</Name>
														<X>-40</X>
														<Y>-15</Y>
														<Label>
															<X>10</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>2.5</LineWidth>
														<LineColor>-6737204</LineColor>
														<LineColorCode>v_LVGridColor</LineColorCode>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<BeginArrowSize>1</BeginArrowSize>
														<BeginArrowStyle>0</BeginArrowStyle>
														<EndArrowSize>1</EndArrowSize>
														<EndArrowStyle>0</EndArrowStyle>
														<Dx>10</Dx>
														<Dy>0</Dy>
														<Dz>0</Dz>
													</Line>
													<Line>
														<Id>1724074870577</Id>
														<Name>line_MV</Name>
														<X>-40</X>
														<Y>-40</Y>
														<Label>
															<X>10</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>2.5</LineWidth>
														<LineColor>-12156236</LineColor>
														<LineColorCode>v_MVGridColor</LineColorCode>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<BeginArrowSize>1</BeginArrowSize>
														<BeginArrowStyle>0</BeginArrowStyle>
														<EndArrowSize>1</EndArrowSize>
														<EndArrowStyle>0</EndArrowStyle>
														<Dx>10</Dx>
														<Dy>0</Dy>
														<Dz>0</Dz>
													</Line>
													<Text>
														<Id>1724074875518</Id>
														<Name>t_gasNetwork</Name>
														<ExcludeFromBuild>true</ExcludeFromBuild>
														<X>-15</X>
														<Y>-2.5</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>Gasnet</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>12</Size>
															<Style>0</Style>
														</Font>
														<Alignment>LEFT</Alignment>
													</Text>
													<Oval>
														<Id>1724074875520</Id>
														<Name>oval_gasNetwork</Name>
														<ExcludeFromBuild>true</ExcludeFromBuild>
														<X>-35</X>
														<Y>5</Y>
														<Label>
															<X>0</X>
															<Y>0</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<RadiusX>5.75</RadiusX>
														<RadiusY>40</RadiusY>
														<Rotation>0.0</Rotation>
														<FillColor>-1</FillColor>
														<FillColorCode>v_gasGridColor</FillColorCode>
														<FillMaterial>null</FillMaterial>
													</Oval>
												</Presentation>
											</Group>
										</Presentation>
									</Group>
									<Group>
										<Id>1724074493431</Id>
										<Name>gr_buildings</Name>
										<X>80</X>
										<Y>10</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Text>
												<Id>1724074500599</Id>
												<Name>t_buildings</Name>
												<X>50</X>
												<Y>-84</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Gebouwen</Text>
												<Font>
													<Name>Calibri</Name>
													<Size>16</Size>
													<Style>1</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Line>
												<Id>1724074502826</Id>
												<Name>line_buildings</Name>
												<X>380</X>
												<Y>-64</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-1644806</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>-458</Dx>
												<Dy>0</Dy>
												<Dz>0</Dz>
											</Line>
											<Group>
												<Id>1724074508882</Id>
												<Name>gr_colorings</Name>
												<X>-180</X>
												<Y>0</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Text>
														<Id>1724074508886</Id>
														<Name>txt_colorings</Name>
														<X>4</X>
														<Y>-71</Y>
														<Label>
															<X>0</X>
															<Y>-10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<Rotation>0.0</Rotation>
														<Color>-16777216</Color>
														<Text>Kleur gebouwen o.b.v.:</Text>
														<Font>
															<Name>SansSerif</Name>
															<Size>11</Size>
															<Style>0</Style>
														</Font>
														<Alignment>CENTER</Alignment>
													</Text>
												</Presentation>
											</Group>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Text>
								<Id>1696863329245</Id>
								<Name>t_mapClickingFunctions</Name>
								<X>40</X>
								<Y>1020</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Map connections and clicking</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1702552223737</Id>
								<Name>t_stylingFunctions</Name>
								<X>-680</X>
								<Y>321</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Interface styling:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1704210756310</Id>
								<Name>gr_clickedObjectInfo</Name>
								<X>370</X>
								<Y>220</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1713259123999</Id>
										<Name>rect_clickedObjectInfo</Name>
										<X>40</X>
										<Y>-131</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>555</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1250053</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1701879145306</Id>
										<Name>t_clickedObjectInfo</Name>
										<X>321</X>
										<Y>-130</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer een gebouw</Text>
										<TextCode>v_clickedObjectText.equals("None") ? 
"Selecteer een gebouw of trafostation" :
v_clickedObjectText</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1705663500141</Id>
								<Name>t_buildingColors</Name>
								<X>680</X>
								<Y>1030</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Building colors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1705663820235</Id>
								<Name>t_gridnodeColors</Name>
								<X>1022</X>
								<Y>1030</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>GridNode colors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1705664522164</Id>
								<Name>t_specificBuildingColors</Name>
								<X>680</X>
								<Y>1250</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Specific building colors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1705667994053</Id>
								<Name>t_areaColors</Name>
								<X>1300</X>
								<Y>1180</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Area colors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1706004011983</Id>
								<Name>t_menuColors</Name>
								<X>1300</X>
								<Y>1030</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Menu styling</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1706892985870</Id>
								<Name>button_changeMask</Name>
								<X>1530</X>
								<Y>1040</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="140" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>GISregion_antiLaag.setFillColor( new Color( uniform_discr(255),  uniform_discr(255),  uniform_discr(255), 135));</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>change anti-layer</LabelText>
								</ExtendedProperties>
							</Control>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1706991281439</Id>
								<Name>button_changeTheme</Name>
								<X>1530</X>
								<Y>1080</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="140" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>v_themeColor = new Color( uniform_discr(255),  uniform_discr(255),  uniform_discr(255) );
uI_Results.f_styleAllCharts(white, v_themeColor, 1.0, LINE_STYLE_SOLID);
uI_Results.f_styleResultsUIHeader(v_themeColor, v_themeColor, 1, LINE_STYLE_SOLID);
traceln( v_themeColor.getRGB() );</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Change theme style</LabelText>
								</ExtendedProperties>
							</Control>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1708522580070</Id>
								<Name>button_goToUI</Name>
								<X>1140</X>
								<Y>87</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="270" Height="43">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>switch(v_clickedObjectType){

	case BUILDING:
		//c_companyUIs.get(v_connectionOwnerIndexNr).f_setResultsUIPresets();
		UI_company companyUI = c_companyUIs.get(v_connectionOwnerIndexNr);
		
		//Connect resultsUI of the main with resultsUI of CompanyUI
		companyUI.f_updateUIResultsCompanyUI();	

		
		//Set sliders to the correct GC if there are more than 1 GC
		if(companyUI.c_ownedGridConnections.size()&gt;1){
			GridConnection selectedGC = findFirst(companyUI.c_ownedGridConnections, GC -&gt; GC == c_selectedGridConnections.get(0));  
			companyUI.GCnr_selection.setValue(companyUI.c_ownedGridConnections.indexOf(selectedGC), true);
		}
		else{
			companyUI.uI_Results.f_setAllCharts();
			companyUI.f_getNFATOValues();
		}
		
		//This check should be done AFTER the uiResults has been copied.
		if(!b_resultsUpToDate){
			companyUI.f_setSimulateYearScreen();
		}
		else{
			companyUI.gr_simulateYearScreen.setVisible(false);	
		}
		
		//Go to the companyUI view
		c_companyUIs.get(v_connectionOwnerIndexNr).va_companyUI.navigateTo();
		break;
	
	case ELECTROLYSER:
		ui_Hydrogen.get(0).va_hydrogenUI.navigateTo();
		break;
	
	case BATTERY:
		ui_Battery.get(0).va_batteryUI.navigateTo();
		break;
	
	case SOLARFARM:
	case WINDFARM:
	case CHARGER:
	default:
	break;
}
</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="9" Style="1"/>
									<LabelText>Ga naar bedrijfs interface</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1708595212229</Id>
								<Name>t_privateUI</Name>
								<X>-290</X>
								<Y>390</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Private UI creation:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1709718299887</Id>
								<Name>rect_scenarios</Name>
								<X>-0.667</X>
								<Y>98.667</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-1644806</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<Width>400</Width>
								<Height>186</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-385875969</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Control Type="RadioButtons">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1709718299889</Id>
								<Name>rb_scenarios</Name>
								<X>19.333</X>
								<Y>144.667</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="380" Height="135">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>//Set selected scenario string
String selected_scenario = "";

//Disable traceln
PrintStream originalPrintStream = f_disableTraceln();

//YOUR CODE FOR SCENARIO SWITCHING HERE!!!!
switch(rb_scenarios.getValue()){
	
	case 0:
		selected_scenario = "1";
		//f_setScenario_1();
	break;
	
	case 1:
		selected_scenario = "2";
		//f_setScenario_2();
	break;
	
	case 2:
		selected_scenario = "3";
		//f_setScenario_3();
	break;
	
	case 3:
		selected_scenario = "4";
		//f_setScenario_4();
	break;
	
	case 4:
		selected_scenario = "Custom";
		t_scenarioDescription.setText("");
	break;
	
	default:
		traceln("Unsupported scenario selected");
}

//Enable traceln
f_enableTraceln(originalPrintStream);

//Set scenario name text to the correct scenario
t_scenarioName.setText("Scenario: " + selected_scenario);
traceln("Selected scenario: \"" + selected_scenario + "\"");</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="14" Style="0"/>
									<DefaultValueCode>0</DefaultValueCode>
									<Orientation>VERTICAL</Orientation>
									<Button>S1</Button>
									<Button>S2</Button>
									<Button>S3</Button>
									<Button>S4</Button>
									<Button>Custom</Button>
									<LinkTo>false</LinkTo>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1709718299891</Id>
								<Name>t_scenarios</Name>
								<X>19.333</X>
								<Y>118.667</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Selecteer een scenario</Text>
								<Font>
									<Name>Calibri</Name>
									<Size>20</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1709718299897</Id>
								<Name>gr_scenarioDescription</Name>
								<X>199.333</X>
								<Y>374.667</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1709718299899</Id>
										<Name>rect_scenarioDescription</Name>
										<X>-200</X>
										<Y>-80</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-1644806</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>DOTTED</LineStyle>
										<Width>400</Width>
										<Height>160</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-385875969</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1709718299901</Id>
										<Name>t_scenarioDescription</Name>
										<X>0.667</X>
										<Y>-24.667</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Het huidige scenario bevat de energie dynamieken van dit moment.
Dit omvat o.a. de huidige zonnepanelen op de daken van huizen en 
bedrijven, het aantal voertuigen per type, de electriciteitsconsumptie
van het gebied, en de huidige gasconsumptie voor verwarming.</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>11</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1709718299903</Id>
										<Name>t_scenarioName</Name>
										<X>0</X>
										<Y>-50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Huidig scenario</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>16</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1710174312959</Id>
								<Name>t_resultsUIFunctions</Name>
								<X>-680</X>
								<Y>581</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Results UI initialization</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1713429772427</Id>
								<Name>t_scenarioDictionaries</Name>
								<X>-290</X>
								<Y>290</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Scenario dictionaries</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1713431901010</Id>
								<Name>t_initializationFunctions</Name>
								<X>-680</X>
								<Y>180</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Interface initialization functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1715951689412</Id>
								<Name>t_inputParameters</Name>
								<X>-680</X>
								<Y>50</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Input Parameters</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1716419413991</Id>
								<Name>rect_supportFunctions</Name>
								<X>-520</X>
								<Y>-160</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>260</Width>
								<Height>120</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1716419425042</Id>
								<Name>t_supportFunctions</Name>
								<X>-500</X>
								<Y>-150</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Support functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1716988295617</Id>
								<Name>button_gotoEngine</Name>
								<X>-240</X>
								<Y>760</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="170" Height="40">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>energyModel.va_engine.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Go to Engine</LabelText>
								</ExtendedProperties>
							</Control>
							<Line>
								<Id>1719217632486</Id>
								<Name>line_ordereringDescription</Name>
								<X>50</X>
								<Y>-720</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>220</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1719217632488</Id>
								<Name>t_ordereringDescription</Name>
								<X>60</X>
								<Y>-750</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Initial conditions &amp; ordering</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1719829894799</Id>
								<Name>t_outsideTemperature</Name>
								<X>1236</X>
								<Y>17</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-7631989</Color>
								<Text>Buitentemperatuur: 23 graden</Text>
								<TextCode>"Buiten temperatuur " + v_outsideTemperature + " graden"</TextCode>
								<Font>
									<Name>Cambria</Name>
									<Size>10</Size>
									<Style>1</Style>
								</Font>
								<Alignment>RIGHT</Alignment>
							</Text>
							<Text>
								<Id>1719829988146</Id>
								<Name>t_solarIrradiance</Name>
								<X>1236</X>
								<Y>42</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-7631989</Color>
								<Text>Zonne instraling: 12 w/m2</Text>
								<TextCode>"Zonneinstraling " + v_solarIrradiance + " W/m2"</TextCode>
								<Font>
									<Name>Cambria</Name>
									<Size>10</Size>
									<Style>1</Style>
								</Font>
								<Alignment>RIGHT</Alignment>
							</Text>
							<Text>
								<Id>1719829993001</Id>
								<Name>t_windSpeed</Name>
								<X>1236</X>
								<Y>67</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-7631989</Color>
								<Text>Windsnelheid: hoog</Text>
								<TextCode>"Windsnelheid: " + v_windspeed </TextCode>
								<Font>
									<Name>Cambria</Name>
									<Size>10</Size>
									<Style>1</Style>
								</Font>
								<Alignment>RIGHT</Alignment>
							</Text>
							<TimePlot>
								<Id>1719847144211</Id>
								<Name>plot_outsideTemperature</Name>
								<X>1245</X>
								<Y>12</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751013532916</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1719907200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>84</Width>
								<Height>23</Height>
								<BackgroundColor/>
								<BorderColor>-16777216</BorderColor>
								<ChartArea>
									<XOffset>0</XOffset>
									<YOffset>0</YOffset>
									<Width>84</Width>
									<Height>23</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-6632142</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>NONE</HorLabelsPosition>
									<VerLabelsPosition>NONE</VerLabelsPosition>
									<TextColor>-10496</TextColor>
								</Labels>
								<ShowLegend>false</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>-5</VerScaleFromExpression>
								<VerScaleToExpression>28</VerScaleToExpression>
								<VerScaleType>FIXED</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Title</Title>
									<Id>1719847144208</Id>
									<Expression>my_dataset</Expression>
									<Color>-16776961</Color>
									<Expression2>v_outsideTemperature</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>96</SamplesToKeep>
								<TimeWindowExpression>96</TimeWindowExpression>
								<FillAreaUnderLine>true</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
							<TimePlot>
								<Id>1719848137592</Id>
								<Name>plot_solarIrradiance</Name>
								<X>1245</X>
								<Y>38</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751013532918</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1719907200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>84</Width>
								<Height>23</Height>
								<BackgroundColor/>
								<BorderColor>-16777216</BorderColor>
								<ChartArea>
									<XOffset>0</XOffset>
									<YOffset>0</YOffset>
									<Width>84</Width>
									<Height>23</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-6632142</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>NONE</HorLabelsPosition>
									<VerLabelsPosition>NONE</VerLabelsPosition>
									<TextColor>-10496</TextColor>
								</Labels>
								<ShowLegend>false</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1000</VerScaleToExpression>
								<VerScaleType>FIXED</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Title</Title>
									<Id>1719848137589</Id>
									<Expression>my_dataset</Expression>
									<Color>-10496</Color>
									<Expression2>v_solarIrradiance</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>96</SamplesToKeep>
								<TimeWindowExpression>96</TimeWindowExpression>
								<FillAreaUnderLine>true</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
							<Group>
								<Id>1720909739871</Id>
								<Name>gr_multipleBuildingInfo</Name>
								<X>1040</X>
								<Y>55</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1720904897811</Id>
										<Name>button_nextBuilding</Name>
										<X>-65</X>
										<Y>32</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="155" Height="20">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>v_selectedGridConnectionIndex &lt; v_nbGridConnectionsInSelectedBuilding</EnableExpression>
											<ActionCode>if (v_selectedGridConnectionIndex &lt; v_nbGridConnectionsInSelectedBuilding ){
	v_selectedGridConnectionIndex += 1;

	c_selectedGridConnections = new ArrayList&lt;&gt;();
	
	if(v_customEnergyCoop != null){
		energyModel.f_removeEnergyCoop(v_customEnergyCoop);
		v_customEnergyCoop = null;
	}

	if( v_selectedGridConnectionIndex &gt; 0){
		c_selectedGridConnections.add(c_selectedObjects.get(0).c_containedGridConnections.get(v_selectedGridConnectionIndex -1));
		uI_Results.f_updateResultsUI(c_selectedGridConnections.get(0));
	}
	/*
	else {
		c_selectedGridConnections.addAll(c_selectedObjects.get(0).c_containedGridConnections);
		v_customEnergyCoop = energyModel.f_addEnergyCoop(c_selectedGridConnections);
		uI_Results.f_updateResultsUI(v_customEnergyCoop);
	}
	*/
	/*
	//Update the resultsUI
	f_updateUIResultsData();	
	*/
	
	//Set dashboard UI button
	f_setUIButton();
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="9" Style="0"/>
											<LabelText>Toon volgend adres</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1720904921271</Id>
										<Name>button_previousBuilding</Name>
										<X>-65</X>
										<Y>53</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="155" Height="20">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>v_selectedGridConnectionIndex &gt; 0</EnableExpression>
											<ActionCode>if (v_selectedGridConnectionIndex &gt; 0){
	c_selectedGridConnections = new ArrayList&lt;&gt;();
	v_selectedGridConnectionIndex -= 1;
	
	if( v_selectedGridConnectionIndex &gt; 0){
		c_selectedGridConnections.add(c_selectedObjects.get(0).c_containedGridConnections.get(v_selectedGridConnectionIndex -1));
		uI_Results.f_updateResultsUI(c_selectedGridConnections.get(0));
	}
	else {
		c_selectedGridConnections.addAll(c_selectedObjects.get(0).c_containedGridConnections);
		
		v_customEnergyCoop = energyModel.f_addEnergyCoop(c_selectedGridConnections);
		uI_Results.f_updateResultsUI(v_customEnergyCoop);
	}
	
	/*
	//Update the resultsUI
	f_updateUIResultsData();
	*/
	
	//Set dashboard UI button
	f_setUIButton();
}


</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="9" Style="0"/>
											<LabelText>Toon vorig adres</LabelText>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1720908988631</Id>
										<Name>t_multipleBuildingInfo</Name>
										<X>-360</X>
										<Y>57</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Je kijkt naar de som van alle 5  addressen samen in het geselecteerde pand</Text>
										<TextCode>v_selectedGridConnectionIndex &gt; 0 &amp;&amp; c_selectedGridConnections.size() &gt; 0 &amp;&amp; c_selectedGridConnections.get(0).p_owner.p_detailedCompany ?
"Je kijkt naar: " + c_selectedGridConnections.get(0).p_ownerID + ", " + c_selectedGridConnections.get(0).p_address.getAddress()
:
v_selectedGridConnectionIndex &gt; 0 ?
"Je kijkt naar het " + (v_selectedGridConnectionIndex ) + "e adres in het geselecteerde pand"
: 
"Je kijkt naar de som van alle " + v_nbGridConnectionsInSelectedBuilding + " addressen in dit pand"</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>11</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1721819768547</Id>
								<Name>rect_CustomColors</Name>
								<X>1880</X>
								<Y>1400</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-10496</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>630</Width>
								<Height>540</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1721819794985</Id>
								<Name>txt_mapOverlayFunctionalities</Name>
								<X>1900</X>
								<Y>1410</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Map Overlay Functionalities
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<EmbeddedObjectPresentation>
								<Id>1722252542596</Id>
								<Name>uI_Tabs_presentation</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
								<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
								<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
								<Latitude>52.51902183517265</Latitude>
								<Longitude>6.169494834925871</Longitude>
							</EmbeddedObjectPresentation>
							<Group>
								<Id>1696520906125</Id>
								<Name>gr_documentation</Name>
								<X>1290</X>
								<Y>-130</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<OnClickCode>getExperimentHost().openWebSite("https://www.zenmo.com");</OnClickCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<RoundedRectangle>
										<Id>1696520906127</Id>
										<Name>roundRectangle_documentation</Name>
										<X>-70</X>
										<Y>-20</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>200</Width>
										<Height>30</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>new Color (255, 255, 255, 100)</FillColorCode>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1696520906129</Id>
										<Name>t_documentation</Name>
										<X>-59</X>
										<Y>-14</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Info en documentatie</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Image>
										<Id>1696520906131</Id>
										<Name>image_documentation</Name>
										<X>95</X>
										<Y>-15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1724419174775</Id>
								<Name>rect_scenarioText</Name>
								<X>-1060</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>299.107</Width>
								<Height>330</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1724419379552</Id>
								<Name>txt_scenarioFunctions</Name>
								<X>-1040</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Scenario functions, text and settings</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="CheckBox">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1725017697644</Id>
								<Name>checkbox_cabels</Name>
								<X>20</X>
								<Y>460</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="190" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>for(GISRoute GISCable : c_LVCables){
	GISCable.setVisible(b_showCables);
}

for(GISRoute GISCable : c_MVCables){
	GISCable.setVisible(b_showCables);
}
</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Toon stroom kabels</LabelText>
									<DefaultValueCode>false</DefaultValueCode>
									<LinkTo>true</LinkTo>
									<Link>b_showCables</Link>
								</ExtendedProperties>
							</Control>
							<GISMap>
								<Id>1725020138710</Id>
								<Name>map</Name>
								<X>410</X>
								<Y>130</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<OnClickCode>
if(b_inManualFilterSelectionMode){
	f_selectManualFilteredGC(clickx, clicky);
}
else{
	if (uI_Tabs.pop_tabEHub.get(0).b_NFATOListener) {
		uI_Tabs.pop_tabEHub.get(0).f_checkGISRegion(clickx, clicky);
	}
	else if (c_selectedFilterOptions.contains(OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP) || 
			c_selectedFilterOptions.contains(OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD)){
		
		if(c_selectedFilterOptions.contains(OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP)){
			f_selectGridLoop(clickx, clicky);
		}
		if(c_selectedFilterOptions.contains(OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD)){
			f_selectNeighborhood(clickx, clicky);
		}
	}
	
	else {
		if(c_selectedFilterOptions.size() &gt; 0){
			f_removeAllFilters();
		}
		f_selectGISRegion(clickx, clicky);
	}
}</OnClickCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>1000</Width>
								<Height>620</Height>
								<OnClickCode>
if(b_inManualFilterSelectionMode){
	f_selectManualFilteredGC(clickx, clicky);
}
else{
	if (uI_Tabs.pop_tabEHub.get(0).b_NFATOListener) {
		uI_Tabs.pop_tabEHub.get(0).f_checkGISRegion(clickx, clicky);
	}
	else if (c_selectedFilterOptions.contains(OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP) || 
			c_selectedFilterOptions.contains(OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD)){
		
		if(c_selectedFilterOptions.contains(OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP)){
			f_selectGridLoop(clickx, clicky);
		}
		if(c_selectedFilterOptions.contains(OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD)){
			f_selectNeighborhood(clickx, clicky);
		}
	}
	
	else {
		if(c_selectedFilterOptions.size() &gt; 0){
			f_removeAllFilters();
		}
		f_selectGISRegion(clickx, clicky);
	}
}</OnClickCode>
								<GISShapes/>
								<Latitude>52.539123187983904</Latitude>
								<Longitude>6.173604854475837</Longitude>
								<Scale>25000</Scale>
								<BorderColor>-4144960</BorderColor>
								<FillColor>-1</FillColor>
								<ShowTiles>true</ShowTiles>
								<TileURLProvider>ANYLOGIC</TileURLProvider>
								<CustomTileURL>false</CustomTileURL>
								<TileURL>https://a.tile.openstreetmap.org/[zoom]/[x]/[y].png</TileURL>
								<RouteProviderType>WEB_SERVICE</RouteProviderType>
								<RouteNotFound>CREATE_STRAIGHT_LINE</RouteNotFound>
								<OnlineRouteProvider>ANYLOGIC</OnlineRouteProvider>
								<TransportType>CAR</TransportType>
								<RoutingMethod>FASTEST</RoutingMethod>
								<PathfindingAlgorithm>DIJKSTRABI</PathfindingAlgorithm>
								<CustomRouteProvider>false</CustomRouteProvider>
								<RouteSourceResourceReference/>
								<RouteGraphResourceReference/>
								<MapScaleBasedGeneralization>true</MapScaleBasedGeneralization>
								<AbsolutePrecisionGeneralization>1000</AbsolutePrecisionGeneralization>
							</GISMap>
							<Text>
								<Id>1725456122345</Id>
								<Name>txt_sliderInitialization</Name>
								<X>-680</X>
								<Y>681</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Slider Initialization</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1725525689286</Id>
								<Name>txt_GISObjectCreationFunctions</Name>
								<X>-290</X>
								<Y>60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>GIS Object creation functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1730113808401</Id>
								<Name>gr_uI_Results_presentation</Name>
								<X>1440</X>
								<Y>230</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<EmbeddedObjectPresentation>
										<Id>1716193014596</Id>
										<Name>uI_Results_presentation</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
										<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
										<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
										<Latitude>52.52173648990926</Latitude>
										<Longitude>6.109451573117503</Longitude>
									</EmbeddedObjectPresentation>
								</Presentation>
							</Group>
							<Group>
								<Id>1709717180367</Id>
								<Name>gr_simulateYearScreenSmall</Name>
								<X>2185</X>
								<Y>175</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>1670</XCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1709717180369</Id>
										<Name>rect_simulateYearScreenSmall</Name>
										<X>-230</X>
										<Y>-90</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>DASHED</LineStyle>
										<Width>460</Width>
										<Height>180</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>v_themeColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Group>
										<Id>1709717180371</Id>
										<Name>gr_simulateYearToCalculateKPIsSmall</Name>
										<X>10</X>
										<Y>50</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>
gr_simulateYearScreenSmall.setVisible(false);		
gr_loadIconSmall.setVisible(true);
		

new Thread( () -&gt; {
	//Run rapid run
	energyModel.f_runRapidSimulation();
	
	//After rapid run: remove loading screen
	gr_loadIconSmall.setVisible(false);
		
	if (c_selectedGridConnections.size() == 0){//Update main area collection
		uI_Results.f_updateResultsUI(energyModel);
	}
	else if (c_selectedGridConnections.size() == 1){//Update selected GC area collection
		uI_Results.f_updateResultsUI(c_selectedGridConnections.get(0));
	}
	else if(c_selectedGridConnections.size() &gt; 1){//Update COOP area collection
		uI_Results.f_updateResultsUI(v_customEnergyCoop);
	}
	
	//Update and show kpi summary chart after run
	if(settings.showKPISummary() != null &amp;&amp; settings.showKPISummary() &amp;&amp; v_clickedObjectType != OL_GISObjectType.GRIDNODE){
		uI_Results.getCheckbox_KPISummary().setSelected(true, true);
	}
	
	//Enable radio buttons again
	uI_Results.f_enableNonLivePlotRadioButtons(true);
	c_companyUIs.forEach(companyUI -&gt; companyUI.uI_Results.f_enableNonLivePlotRadioButtons(true));
	
	b_resultsUpToDate = true;
}).start();


</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Text>
												<Id>1709717180373</Id>
												<Name>t_simulateYearToCalculateCostsSmall</Name>
												<X>10</X>
												<Y>-60</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Simuleer jaar voor KPI's</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>22</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
											<Image>
												<Id>1709717180375</Id>
												<Name>image_simulateYearToCalculateCostsSmall</Name>
												<X>-200</X>
												<Y>-75</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>60</Width>
												<Height>60</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_greater_than.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Group>
								<Id>1709717180404</Id>
								<Name>gr_loadIconSmall</Name>
								<X>1659</X>
								<Y>135</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1709717180406</Id>
										<Name>rect_loadIconSmall</Name>
										<X>-219</X>
										<Y>-50</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-1644806</LineColor>
										<LineColorCode>v_themeColor</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>DASHED</LineStyle>
										<Width>460</Width>
										<Height>250</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-369756683</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Image>
										<Id>1709717180408</Id>
										<Name>image_loadIconSmall</Name>
										<X>-30</X>
										<Y>60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>60</Width>
										<Height>60</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_loading.gif</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
									<Text>
										<Id>1709717180410</Id>
										<Name>t_loadIconSmall</Name>
										<X>0</X>
										<Y>15</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Jaar wordt gesimuleerd </Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>22</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Image>
								<Id>1731938214224</Id>
								<Name>image</Name>
								<X>1720</X>
								<Y>5</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<OnClickCode>//Go to website on click
getExperimentHost().openWebSite("https://holons.energy/");
</OnClickCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Width>190</Width>
								<Height>70</Height>
								<Rotation>0.0</Rotation>
								<ImageFiles>
									<ImageResourceReference>
										<PackageName>zerointerfaceloader</PackageName>
										<ClassName>logo holon.png</ClassName>
									</ImageResourceReference>
								</ImageFiles>
								<OriginalSize>false</OriginalSize>
							</Image>
							<Rectangle>
								<Id>1734442437753</Id>
								<Name>rect_filterFunctions</Name>
								<X>-1500</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>360</Width>
								<Height>540</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1734443343976</Id>
								<Name>t_selectionColors</Name>
								<X>390</X>
								<Y>1330</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Selection colors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1734443865835</Id>
								<Name>txt_filterFunctions</Name>
								<X>-1460</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Filter Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="CheckBox">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1734444497900</Id>
								<Name>cb_showFilterInterface</Name>
								<X>20</X>
								<Y>480</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="120" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<VisibleCode>cb_showFilterInterface.isEnabled()</VisibleCode>
									<Enabled>true</Enabled>
									<EnableExpression>!settings.isPublicModel()</EnableExpression>
									<ActionCode>gr_filterInterface.setVisible(cb_showFilterInterface.isSelected());

if(!cb_showFilterInterface.isSelected()){
	f_removeAllFilters();
	gr_sliderClickBlocker.setVisible(false);
}
else{
	gr_sliderClickBlocker.setVisible(true);
}</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Filter opties</LabelText>
									<LinkTo>false</LinkTo>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1736425024523</Id>
								<Name>txt_EHubCalc</Name>
								<X>40</X>
								<Y>2120</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Calculation</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1736425024525</Id>
								<Name>txt_EHubTab</Name>
								<X>40</X>
								<Y>2220</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>E-Hub Tab</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1736425024527</Id>
								<Name>txt_EHubIni</Name>
								<X>40</X>
								<Y>2040</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Initialization</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1736425024529</Id>
								<Name>rect_EHub</Name>
								<X>20</X>
								<Y>2020</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>470</Width>
								<Height>290</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1736425024521</Id>
								<Name>rect_EHubSmall</Name>
								<X>175</X>
								<Y>2020</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>100</Width>
								<Height>30</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1736425024519</Id>
								<Name>txt_EHub</Name>
								<X>190</X>
								<Y>2020</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>E-HUB</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>22</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="CheckBox">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1740670519131</Id>
								<Name>cb_EhubConfig</Name>
								<X>-680</X>
								<Y>920</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="210" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<VisibleCode>v_customEnergyCoop != null</VisibleCode>
									<Enabled>false</Enabled>
									<ActionCode>if(cb_EhubConfig.isSelected()){
	uI_Results.v_selectedChartType = OL_ChartTypes.GESPREKSLEIDRAAD_BEDRIJVEN;
	uI_Results.f_showCorrectChart();
	uI_Results.getRadioButtons().setValue(100, false);
	uI_Results.chartGespreksleidraadBedrijven.getRb_gespreksleidraadBedrijvenChartType().setValue(2, true);
}
else{
	if(uI_Results.getRadioButtons().getValue() == 100){
		uI_Results.getRadioButtons().setValue(0, true);
	}
	uI_Results.f_showCorrectChart();
}</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>EHUB VISUALIZATION TEST</LabelText>
									<LinkTo>true</LinkTo>
									<Link>uI_Results.b_showGroupContractValues</Link>
								</ExtendedProperties>
							</Control>
							<Group>
								<Id>1742296970246</Id>
								<Name>gr_forceMapSelection</Name>
								<X>1080</X>
								<Y>-1480</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>960</XCode>
								<YCode>500</YCode>
								<VisibleCode>//(c_selectedFilterOptions.contains(OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD) &amp;&amp; v_selectedNeighborhood == null) || (c_selectedFilterOptions.contains(OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP) &amp;&amp; v_selectedGridLoop == null) || cb_manualFilterSelection.isSelected() </VisibleCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1742297070582</Id>
										<Name>rect_forceMapSelectionClickBlocker1</Name>
										<X>-960</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>int clickblocker;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>410</Width>
										<Height>980</Height>
										<Rotation>0.0</Rotation>
										<FillColor>16777215</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742297242137</Id>
										<Name>rect_forceMapSelectionClickBlocker2</Name>
										<X>-550</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>int clickblocker;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1000</Width>
										<Height>130</Height>
										<Rotation>0.0</Rotation>
										<FillColor>16777215</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742297244098</Id>
										<Name>rect_forceMapSelectionClickBlocker3</Name>
										<X>-550</X>
										<Y>250</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>int clickblocker;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1000</Width>
										<Height>230</Height>
										<Rotation>0.0</Rotation>
										<FillColor>16777215</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742297246008</Id>
										<Name>rect_forceMapSelectionClickBlocker4</Name>
										<X>450</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>int clickblocker;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>510</Width>
										<Height>980</Height>
										<Rotation>0.0</Rotation>
										<FillColor>16777215</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742296784951</Id>
										<Name>rect_forceMapSelection1</Name>
										<X>-960</X>
										<Y>-620</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>410</Width>
										<Height>1200</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1765752640</FillColor>
										<FillColorCode>v_forcedClickScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742296859875</Id>
										<Name>rect_forceMapSelection2</Name>
										<X>-550</X>
										<Y>-620</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1000</Width>
										<Height>250</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1765752640</FillColor>
										<FillColorCode>v_forcedClickScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742296941081</Id>
										<Name>rect_forceMapSelection3</Name>
										<X>-550</X>
										<Y>250</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1000</Width>
										<Height>330</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1765752640</FillColor>
										<FillColorCode>v_forcedClickScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742296952388</Id>
										<Name>rect_forceMapSelection4</Name>
										<X>450</X>
										<Y>-620</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>510</Width>
										<Height>1200</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1765752640</FillColor>
										<FillColorCode>v_forcedClickScreenColor</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<RoundedRectangle>
										<Id>1742300401759</Id>
										<Name>roundRectangle</Name>
										<X>-550</X>
										<Y>-480</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1000</Width>
										<Height>90</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1742300418297</Id>
										<Name>t_forcedClickMessage</Name>
										<X>-50</X>
										<Y>-465</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer een buurt</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>48</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1743093754142</Id>
										<Name>button_manualFilterSelectionCompletion</Name>
										<X>230</X>
										<Y>-470</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="210" Height="70">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<VisibleCode>gr_forceMapSelection.isVisible() &amp;&amp; b_inManualFilterSelectionMode</VisibleCode>
											<Enabled>true</Enabled>
											<EnableExpression>gr_forceMapSelection.isVisible() &amp;&amp; b_inManualFilterSelectionMode</EnableExpression>
											<ActionCode>b_inManualFilterSelectionMode = false;

f_setForcedClickScreen(false, "");
if (c_manualFilterSelectedGC.isEmpty() &amp;&amp; c_manualFilterDeselectedGC.isEmpty() &amp;&amp; c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){
	f_setFilter("Handmatige selectie");
}
</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Selectie voltooien</LabelText>
										</ExtendedProperties>
									</Control>
								</Presentation>
							</Group>
							<Group>
								<Id>1734444441402</Id>
								<Name>gr_filterInterface</Name>
								<X>-1350</X>
								<Y>740</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>170</XCode>
								<YCode>710</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1734443987142</Id>
										<Name>rect_filterInterface</Name>
										<X>-150</X>
										<Y>-180</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>350</Width>
										<Height>350</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1734443492902</Id>
										<Name>txt_filterDescription</Name>
										<X>-130</X>
										<Y>-140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Selecteer gebouwen:</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="ComboBox">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1734442617547</Id>
										<Name>cb_filterOptions</Name>
										<X>-10</X>
										<Y>-140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="200" Height="20">
											<EmbeddedIcon>false</EmbeddedIcon>
											<FillColor>-1</FillColor>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>!gr_forceMapSelection.isVisible()</EnableExpression>
											<ActionCode>f_setFilter(cb_filterOptions.getValue());

cb_filterOptions.setValueIndex(0);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<Editable>false</Editable>
											<Button>-</Button>
											<Button>Bedrijfspanden</Button>
											<Button>Woonhuizen</Button>
											<Button>Met bekende data</Button>
											<Button>Met geschatte data</Button>
											<Button>Met zonnepanelen</Button>
											<Button>Met voertuigen</Button>
											<Button>In de aangewezen 'lus'</Button>
											<Button>In de aangwezen 'buurt'</Button>
											<LinkTo>false</LinkTo>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1734443541801</Id>
										<Name>txt_activeFilters</Name>
										<X>-130</X>
										<Y>-110</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Geen Actieve Filters.</Text>
										<TextCode>!t_activeFilters.getText().equals("") ? "Actieve filters:" : "Geen Actieve Filters."</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1734444104065</Id>
										<Name>t_activeFilters</Name>
										<X>-130</X>
										<Y>-90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1734444671650</Id>
										<Name>txt_filterInterface</Name>
										<X>25</X>
										<Y>-170</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Filter opties</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1734446701124</Id>
										<Name>button_clearFilters</Name>
										<X>40</X>
										<Y>130</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="150" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>c_filterSelectedGridLoops.clear();
c_filterSelectedNeighborhoods.clear();
c_manualFilterSelectedGC.clear();
c_manualFilterDeselectedGC.clear();
b_inManualFilterSelectionMode = false;
if (c_manualFilterSelectedGC.isEmpty() &amp;&amp; c_manualFilterDeselectedGC.isEmpty() &amp;&amp; c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){
	f_setFilter("Handmatige selectie");
}
f_setForcedClickScreen(false, "");
f_removeAllFilters();
traceln("Alle filters zijn verwijderd.");</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Verwijder alle filters</LabelText>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1734524446136</Id>
										<Name>t_selectedGridLoop</Name>
										<X>-130</X>
										<Y>140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>c_selectedFilterOptions.contains(OL_FilterOptionsGC.GRIDTOPOLOGY_SELECTEDLOOP)</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<TextCode>c_filterSelectedGridLoops.size() == 1 ? "Geselecteerde lus: " + c_filterSelectedGridLoops.get(0).p_gridNodeID : c_filterSelectedGridLoops.size() &gt; 1 ? "Meerdere lussen geselecteerd." : "Geen lus geselecteerd."</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1737640715642</Id>
										<Name>t_selectedNBh</Name>
										<X>-130</X>
										<Y>117</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>c_selectedFilterOptions.contains(OL_FilterOptionsGC.SELECTED_NEIGHBORHOOD)</VisibleCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text/>
										<TextCode>c_filterSelectedNeighborhoods.size() == 1 ? "Geselecteerde buurt: " + c_filterSelectedNeighborhoods.get(0).p_id : c_filterSelectedNeighborhoods.size() &gt; 1 ? "Meerdere buurten geselecteerd." : "Geen buurt geselecteerd."</TextCode>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1742227694564</Id>
										<Name>button_removeManualSelection</Name>
										<X>40</X>
										<Y>85</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="150" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>!(c_manualFilterSelectedGC.isEmpty() &amp;&amp; c_manualFilterDeselectedGC.isEmpty())</EnableExpression>
											<ActionCode>if(c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){
	c_manualFilterSelectedGC.clear();
	c_manualFilterDeselectedGC.clear();
	f_setForcedClickScreen(false, "");
	b_inManualFilterSelectionMode = false;
	if (c_manualFilterSelectedGC.isEmpty() &amp;&amp; c_manualFilterDeselectedGC.isEmpty() &amp;&amp; c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){
		f_setFilter("Handmatige selectie");
	}
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Wis handmatige selectie</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1743092954558</Id>
										<Name>button_manualFilterSelection</Name>
										<X>40</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="150" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>!gr_forceMapSelection.isVisible() || b_inManualFilterSelectionMode</EnableExpression>
											<ActionCode>if(!b_inManualFilterSelectionMode){
	b_inManualFilterSelectionMode = true;
	
	f_setForcedClickScreen(true, "(De)Selecteer gebouwen");
	
	if(!c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){
		f_setFilter("Handmatige selectie");
	}
}
else{ 
	b_inManualFilterSelectionMode = false;
	
	f_setForcedClickScreen(false, "");
	if (c_manualFilterSelectedGC.isEmpty() &amp;&amp; c_manualFilterDeselectedGC.isEmpty() &amp;&amp; c_selectedFilterOptions.contains(OL_FilterOptionsGC.MANUAL_SELECTION)){
		f_setFilter("Handmatige selectie");
	}
}</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Handmatige selectie</LabelText>
											<LabelCode>b_inManualFilterSelectionMode ? "Selectie voltooien" : "Handmatige selectie"</LabelCode>
										</ExtendedProperties>
									</Control>
								</Presentation>
							</Group>
							<Group>
								<Id>1736337963311</Id>
								<Name>gr_errorScreen</Name>
								<X>4360</X>
								<Y>520</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>960</XCode>
								<YCode>500</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1736344526647</Id>
										<Name>rect_errorScreenGrayOut</Name>
										<X>-960</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>//traceln();</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-2049715245</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1920</Width>
										<Height>980</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-2049715245</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1736443451929</Id>
										<Name>rect_errorScreenClickBlocking</Name>
										<X>-960</X>
										<Y>-500</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>double click_block = 0;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-2049715245</LineColor>
										<LineColorCode>null</LineColorCode>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>1920</Width>
										<Height>980</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-2049715245</FillColor>
										<FillColorCode>null</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<RoundedRectangle>
										<Id>1747320252784</Id>
										<Name>rect_errorMessage</Name>
										<X>-270</X>
										<Y>-120</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>4</LineWidth>
										<LineColor>-65536</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>540</Width>
										<Height>200</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Text>
										<Id>1736337707551</Id>
										<Name>t_errorMessage</Name>
										<X>0</X>
										<Y>-70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>TYPE YOUR ERROR MESSAGE HERE</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>24</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Group>
										<Id>1736338014404</Id>
										<Name>button_errorOK</Name>
										<X>0</X>
										<Y>50</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>gr_errorScreen.setVisible(false);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1736338014406</Id>
												<Name>rect_errorOK</Name>
												<X>-60</X>
												<Y>-20</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>120</Width>
												<Height>40</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1736338014408</Id>
												<Name>txt_errorOK</Name>
												<X>0</X>
												<Y>-10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Ok</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>18</Size>
													<Style>1</Style>
												</Font>
												<Alignment>CENTER</Alignment>
											</Text>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Group>
								<Id>1742482935391</Id>
								<Name>gr_sliderClickBlocker</Name>
								<X>-440</X>
								<Y>-1860</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>200</XCode>
								<YCode>750</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1742482847835</Id>
										<Name>rect_sliderClickBlocker</Name>
										<X>-200</X>
										<Y>-240</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>int clickBlocker;</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>400</Width>
										<Height>470</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillColorCode>new Color(255, 255, 255, 0)</FillColorCode>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1742482890780</Id>
										<Name>rect_sliderClickBlocker2</Name>
										<X>-200</X>
										<Y>-240</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor/>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>400</Width>
										<Height>470</Height>
										<Rotation>0.0</Rotation>
										<FillColor>16777215</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
								</Presentation>
							</Group>
							<Group>
								<Id>1744624088806</Id>
								<Name>gr_writeDataToExcel</Name>
								<X>-410</X>
								<Y>-730</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1744624088808</Id>
										<Name>rect_exportToExcelFunctions</Name>
										<X>-190</X>
										<Y>-120</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<Lock>true</Lock>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>450</Width>
										<Height>530</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Control Type="FileChooser">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1744624088810</Id>
										<Name>fileChooser_exportBalanceLoadEnergyModel</Name>
										<X>-156</X>
										<Y>-30</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="380" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<FillColor>-1</FillColor>
											<TextColor>-16777216</TextColor>
											<Enabled>false</Enabled>
											<ActionCode>fileChooser_exportBalanceLoadEnergyModel.setEnabled(false);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<Title>Klik om kwartierwaarden excel te downloaden (Totaal gebied)</Title>
											<Type>DOWNLOAD</Type>
											<Filters>.xlsx, .xls</Filters>
											<FileName>Export_ModelData.xlsx</FileName>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1744624088812</Id>
										<Name>button_exportBalanceLoadEnergyModel</Name>
										<X>-156</X>
										<Y>-70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="380" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<ActionCode>f_setAllFileDownloadersDisabled();

f_harvestEnergyModelLoadData();

fileChooser_exportBalanceLoadEnergyModel.setEnabled(true);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Schrijf kwartierwaarden naar excel (hele gebied)</LabelText>
										</ExtendedProperties>
									</Control>
									<Text>
										<Id>1744624088814</Id>
										<Name>txt_writeToExcelFunctions</Name>
										<X>-150</X>
										<Y>-100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<Lock>true</Lock>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Write data to excel</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1744624088816</Id>
										<Name>button_exportBalanceLoadSelectedCompanies</Name>
										<X>-156</X>
										<Y>170</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="380" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>c_selectedGridConnections.size() &gt; 0 &amp;&amp; c_selectedGridConnections.size()&lt; p_maxNrSelectedGCForExport + 1</EnableExpression>
											<ActionCode>f_setAllFileDownloadersDisabled();

f_harvestSelectedGCLoadData();

fileChooser_exportBalanceLoadSelectedCompanies.setEnabled(true);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Schrijf kwartierwaarden naar excel (Geselecteerde bedrijven)</LabelText>
										</ExtendedProperties>
									</Control>
									<Control Type="FileChooser">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1744624088818</Id>
										<Name>fileChooser_exportBalanceLoadSelectedCompanies</Name>
										<X>-156</X>
										<Y>210</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="380" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<FillColor>-1</FillColor>
											<TextColor>-16777216</TextColor>
											<Enabled>false</Enabled>
											<ActionCode>fileChooser_exportBalanceLoadSelectedCompanies.setEnabled(false);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<Title>Klik om kwartierwaarden excel te downloaden (Geselecteerde bedrijven)</Title>
											<Type>DOWNLOAD</Type>
											<Filters>.xlsx, .xls</Filters>
											<FileName>Export_ModelData.xlsx</FileName>
										</ExtendedProperties>
									</Control>
									<Control Type="FileChooser">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1744624088820</Id>
										<Name>fileChooser_exportBalanceLoadSelectedEnergyCoop</Name>
										<X>-156</X>
										<Y>90</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="380" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<FillColor>-1</FillColor>
											<TextColor>-16777216</TextColor>
											<Enabled>false</Enabled>
											<ActionCode>fileChooser_exportBalanceLoadSelectedEnergyCoop.setEnabled(false);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<Title>Klik om kwartierwaarden excel te downloaden (Totaal geselecteerde COOP)</Title>
											<Type>DOWNLOAD</Type>
											<Filters>.xlsx, .xls</Filters>
											<FileName>Export_ModelData.xlsx</FileName>
										</ExtendedProperties>
									</Control>
									<Control Type="Button">
										<EmbeddedIcon>false</EmbeddedIcon>
										<Id>1744624088822</Id>
										<Name>button_exportBalanceLoadSelectedEnergyCoop</Name>
										<X>-156</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<BasicProperties Width="380" Height="30">
											<EmbeddedIcon>false</EmbeddedIcon>
											<TextColor>-16777216</TextColor>
											<Enabled>true</Enabled>
											<EnableExpression>c_selectedGridConnections.size() &gt; 1 &amp;&amp; v_customEnergyCoop != null</EnableExpression>
											<ActionCode>f_setAllFileDownloadersDisabled();

f_harvestTotalBalanceLoadOfSelectedEnergyCoop();

fileChooser_exportBalanceLoadSelectedEnergyCoop.setEnabled(true);</ActionCode>
										</BasicProperties>
										<ExtendedProperties>
											<Font Name="Dialog" Size="11" Style="0"/>
											<LabelText>Schrijf kwartierwaarden naar excel (Totaal van Geselecteerde Coop)</LabelText>
										</ExtendedProperties>
									</Control>
								</Presentation>
							</Group>
							<Text>
								<Id>1745935981029</Id>
								<Name>txt_publicModelFunctionalities</Name>
								<X>-680</X>
								<Y>840</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Public model functionalities</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1746110300955</Id>
								<Name>rect_ìnfoBubbleFunctions</Name>
								<X>-1960</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>360</Width>
								<Height>350</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1746110305368</Id>
								<Name>txt_infoBubbleFunctions</Name>
								<X>-1930</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Info Bubble Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1746187848442</Id>
								<Name>gr_publicVersionWarningMessage</Name>
								<X>460</X>
								<Y>-2160</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>740</XCode>
								<YCode>40</YCode>
								<VisibleCode>settings.isPublicModel()</VisibleCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Text>
										<Id>1746027175818</Id>
										<Name>txt_publicVersion</Name>
										<X>-20</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-65536</Color>
										<Text>Dit is een publieke versie met beperkte functionaliteiten</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>24</Size>
											<Style>1</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Image>
										<Id>1746187821228</Id>
										<Name>i_publicVersionWarningMessage</Name>
										<X>304</X>
										<Y>-14</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>f_setInfoText(i_publicVersionWarningMessage, v_infoText.publicVersionWarning, i_publicVersionWarningMessage.getX() + gr_publicVersionWarningMessage.getX(), i_publicVersionWarningMessage.getY() + gr_publicVersionWarningMessage.getY());</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Width>20</Width>
										<Height>20</Height>
										<Rotation>0.0</Rotation>
										<ImageFiles>
											<ImageResourceReference>
												<PackageName>zerointerfaceloader</PackageName>
												<ClassName>icon_i.png</ClassName>
											</ImageResourceReference>
										</ImageFiles>
										<OriginalSize>false</OriginalSize>
									</Image>
								</Presentation>
							</Group>
							<Rectangle>
								<Id>1750078687228</Id>
								<Name>rect_dynamicLegend</Name>
								<X>1360</X>
								<Y>1400</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-65536</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>470</Width>
								<Height>310</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1750078716831</Id>
								<Name>txt_dynamicLegend</Name>
								<X>1380</X>
								<Y>1420</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Dynamic legend functionality</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1750161603547</Id>
								<Name>gr_specificGISObjectLegend</Name>
								<X>1350</X>
								<Y>880</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1724074583633</Id>
										<Name>rect_specialGISObjectLegend1</Name>
										<X>-180</X>
										<Y>-40</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>15</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1724074583635</Id>
										<Name>t_specialGISObjectLegend1</Name>
										<X>-150</X>
										<Y>-40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zonneweide</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Rectangle>
										<Id>1750079302589</Id>
										<Name>rect_specialGISObjectLegend2</Name>
										<X>-180</X>
										<Y>-20</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>15</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750079302591</Id>
										<Name>t_specialGISObjectLegend2</Name>
										<X>-150</X>
										<Y>-20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zonneweide</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Rectangle>
										<Id>1750079303790</Id>
										<Name>rect_specialGISObjectLegend3</Name>
										<X>-180</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>15</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750079303792</Id>
										<Name>t_specialGISObjectLegend3</Name>
										<X>-150</X>
										<Y>0</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zonneweide</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Rectangle>
										<Id>1750079304863</Id>
										<Name>rect_specialGISObjectLegend4</Name>
										<X>-180</X>
										<Y>20</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>15</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750079304865</Id>
										<Name>t_specialGISObjectLegend4</Name>
										<X>-150</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zonneweide</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Rectangle>
										<Id>1750079305949</Id>
										<Name>rect_specialGISObjectLegend5</Name>
										<X>-180</X>
										<Y>40</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>15</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750079305951</Id>
										<Name>t_specialGISObjectLegend5</Name>
										<X>-150</X>
										<Y>40</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zonneweide</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Rectangle>
										<Id>1750079521906</Id>
										<Name>rect_specialGISObjectLegend6</Name>
										<X>-180</X>
										<Y>60</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>3</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>15</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1750079521908</Id>
										<Name>t_specialGISObjectLegend6</Name>
										<X>-150</X>
										<Y>60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Zonneweide</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>12</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1750092915668</Id>
										<Name>t_seeMoreLegend</Name>
										<X>0</X>
										<Y>-70</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<VisibleCode>t_specialGISObjectLegend7.isVisible();</VisibleCode>
										<OnClickCode>if(gr_extendedLegend.isVisible()){
	gr_extendedLegend.setVisible(true);
	t_seeMoreLegend.setText("Zie minder...");
}
else{
	gr_extendedLegend.setVisible(false);
	t_seeMoreLegend.setText("Zie meer...");
}</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-14774017</Color>
										<Text>Zie meer...</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>2</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Group>
										<Id>1750093126455</Id>
										<Name>gr_extendedLegend</Name>
										<X>140</X>
										<Y>980</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<XCode>880</XCode>
										<YCode>0</YCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1750093048056</Id>
												<Name>rect_extendedLegend_line</Name>
												<X>-100</X>
												<Y>-100</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>0</LineWidth>
												<LineColor/>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>200</Width>
												<Height>200</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1644806</FillColor>
												<FillColorCode>v_themeColor</FillColorCode>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1750092986493</Id>
												<Name>rect_extendedLegend</Name>
												<X>-115</X>
												<Y>-84</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>0</LineWidth>
												<LineColor/>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>205</Width>
												<Height>172</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1750093291589</Id>
												<Name>rect_specialGISObjectLegend7</Name>
												<X>-110</X>
												<Y>-40</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>15</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1750093291591</Id>
												<Name>t_specialGISObjectLegend7</Name>
												<X>-80</X>
												<Y>-40</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Zonneweide</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1750093292693</Id>
												<Name>rect_specialGISObjectLegend8</Name>
												<X>-110</X>
												<Y>-20</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>15</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1750093292695</Id>
												<Name>t_specialGISObjectLegend8</Name>
												<X>-80</X>
												<Y>-20</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Zonneweide</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1750093293851</Id>
												<Name>rect_specialGISObjectLegend9</Name>
												<X>-110</X>
												<Y>0</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>15</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1750093293853</Id>
												<Name>t_specialGISObjectLegend9</Name>
												<X>-80</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Zonneweide</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1750093295400</Id>
												<Name>rect_specialGISObjectLegend10</Name>
												<X>-110</X>
												<Y>20</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>15</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1750093295402</Id>
												<Name>t_specialGISObjectLegend10</Name>
												<X>-80</X>
												<Y>20</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Zonneweide</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1750093296550</Id>
												<Name>rect_specialGISObjectLegend11</Name>
												<X>-110</X>
												<Y>40</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>15</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1750093296552</Id>
												<Name>t_specialGISObjectLegend11</Name>
												<X>-80</X>
												<Y>40</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Zonneweide</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1750093324907</Id>
												<Name>rect_specialGISObjectLegend12</Name>
												<X>-110</X>
												<Y>60</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>15</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1750093324909</Id>
												<Name>t_specialGISObjectLegend12</Name>
												<X>-80</X>
												<Y>60</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Zonneweide</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Line>
												<Id>1750093436378</Id>
												<Name>line</Name>
												<X>-115</X>
												<Y>-54</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-1644806</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>192</Dx>
												<Dy>0</Dy>
												<Dz>0</Dz>
											</Line>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Group>
								<Id>1753108914887</Id>
								<Name>gr_mapOverlayLegenda</Name>
								<X>2620</X>
								<Y>1720</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>1000</XCode>
								<YCode>900</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Group>
										<Id>1724074678970</Id>
										<Name>gr_mapOverlayLegend_ElectricityConsumption</Name>
										<X>180</X>
										<Y>-10</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<XCode>0</XCode>
										<YCode>-10</YCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1724074678972</Id>
												<Name>rect_mapOverlayLegend_ElectricityConsumption1</Name>
												<X>-60</X>
												<Y>-52</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1724074678974</Id>
												<Name>rect_mapOverlayLegend_ElectricityConsumption2</Name>
												<X>-60</X>
												<Y>-28</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-32</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1724074678976</Id>
												<Name>rect_mapOverlayLegend_ElectricityConsumption3</Name>
												<X>-60</X>
												<Y>-4</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-263774</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1724074678978</Id>
												<Name>rect_mapOverlayLegend_ElectricityConsumption4</Name>
												<X>-60</X>
												<Y>20</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1063822</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1724074678980</Id>
												<Name>rect_mapOverlayLegend_ElectricityConsumption5</Name>
												<X>-60</X>
												<Y>44</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-3318692</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1724074678982</Id>
												<Name>txt_mapOverlayLegend_ElectricityConsumption1</Name>
												<X>-20</X>
												<Y>-51</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&lt; 10 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&lt; 1500 kWh / jaar" : "&lt; 10 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1724074678984</Id>
												<Name>txt_mapOverlayLegend_ElectricityConsumption2</Name>
												<X>-20</X>
												<Y>-28</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&lt; 50 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&lt; 2500 kWh / jaar" : "&lt; 50 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1724074678986</Id>
												<Name>txt_mapOverlayLegend_ElectricityConsumption3</Name>
												<X>-20</X>
												<Y>-3</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&lt; 150 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&lt; 4000 kWh / jaar" : "&lt; 150 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1724074678988</Id>
												<Name>txt_mapOverlayLegend_ElectricityConsumption4</Name>
												<X>-20</X>
												<Y>21</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&lt; 500 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&lt; 6000 kWh / jaar" : "&lt; 500 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1724074678990</Id>
												<Name>txt_mapOverlayLegend_ElectricityConsumption5</Name>
												<X>-20</X>
												<Y>45</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&gt; 500 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&gt; 6000 kWh / jaar" : "&gt; 500 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
										</Presentation>
									</Group>
									<Group>
										<Id>1715117660077</Id>
										<Name>gr_defaultLegenda</Name>
										<X>10</X>
										<Y>10</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<XCode>10</XCode>
										<YCode>10</YCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Oval>
												<Id>1702041947455</Id>
												<Name>oval_defaultLegend4</Name>
												<X>-60</X>
												<Y>10</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>6.5</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Text>
												<Id>1702041947457</Id>
												<Name>t_defaultLegend2</Name>
												<X>-39.5</X>
												<Y>-47.5</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Gedetaileerd bedrijf</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1702041947459</Id>
												<Name>t_defaultLegend5</Name>
												<X>-39.5</X>
												<Y>27.5</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Overig</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Oval>
												<Id>1702041947461</Id>
												<Name>oval_defaultLegend5</Name>
												<X>-60</X>
												<Y>35</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>6.5</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Text>
												<Id>1702041947463</Id>
												<Name>t_defaultLegend3</Name>
												<X>-39.5</X>
												<Y>-22.5</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Bedrijf</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Oval>
												<Id>1702041947465</Id>
												<Name>oval_defaultLegend2</Name>
												<X>-60</X>
												<Y>-40</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>6.5</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Text>
												<Id>1702041947467</Id>
												<Name>t_defaultLegend4</Name>
												<X>-39.5</X>
												<Y>2.5</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Huis</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Oval>
												<Id>1702041947469</Id>
												<Name>oval_defaultLegend3</Name>
												<X>-60</X>
												<Y>-15</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>6.5</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Text>
												<Id>1750161778157</Id>
												<Name>t_defaultLegend1</Name>
												<X>-39.5</X>
												<Y>-72.5</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Selectie</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>12</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Oval>
												<Id>1750161778159</Id>
												<Name>oval_defaultLegend1</Name>
												<X>-60</X>
												<Y>-65</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>6.5</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillColorCode>v_selectionColor</FillColorCode>
												<FillMaterial>null</FillMaterial>
											</Oval>
										</Presentation>
									</Group>
									<Group>
										<Id>1724074510737</Id>
										<Name>gr_mapOverlayLegend_PVProduction</Name>
										<X>380</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<XCode>0</XCode>
										<YCode>-10</YCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1724074510739</Id>
												<Name>rect_mapOverlayLegend_PVProduction1</Name>
												<X>-60</X>
												<Y>-52</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-1</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1724074510741</Id>
												<Name>rect_mapOverlayLegend_PVProduction2</Name>
												<X>-60</X>
												<Y>-28</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-256</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1724074510743</Id>
												<Name>rect_mapOverlayLegend_PVProduction3</Name>
												<X>-60</X>
												<Y>-4</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-8355712</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-10496</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1724074510745</Id>
												<Name>txt_mapOverlayLegend_PVProduction1</Name>
												<X>-20</X>
												<Y>-51</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Geen opwek</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1724074510747</Id>
												<Name>txt_mapOverlayLegend_PVProduction2</Name>
												<X>-20</X>
												<Y>-28</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&lt; 100 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&lt; 5000 kWh / jaar" : "&lt; 100 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1724074510749</Id>
												<Name>txt_mapOverlayLegend_PVProduction3</Name>
												<X>-20</X>
												<Y>-3</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>&gt; 100 MWh / jaar</Text>
												<TextCode>p_selectedProjectType == OL_ProjectType.RESIDENTIAL ? "&gt; 5000 kWh / jaar" : "&gt; 100 MWh / jaar"</TextCode>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
										</Presentation>
									</Group>
									<Group>
										<Id>1753109295395</Id>
										<Name>gr_mapOverlayLegend_gridNeighbours</Name>
										<X>600</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<XCode>0</XCode>
										<YCode>-10</YCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Rectangle>
												<Id>1753109295397</Id>
												<Name>rect_mapOverlayLegend_gridNeighbours1</Name>
												<X>-60</X>
												<Y>-52</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-8355712</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1753109295399</Id>
												<Name>rect_mapOverlayLegend_gridNeighbours2</Name>
												<X>-60</X>
												<Y>-28</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<VisibleCode>txt_mapOverlayLegend_gridNeighbours2.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-16776961</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Rectangle>
												<Id>1753109295401</Id>
												<Name>rect_mapOverlayLegend_gridNeighbours3</Name>
												<X>-60</X>
												<Y>-4</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<VisibleCode>txt_mapOverlayLegend_gridNeighbours3.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-65536</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1753109295403</Id>
												<Name>txt_mapOverlayLegend_gridNeighbours1</Name>
												<X>-20</X>
												<Y>-51</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Onbekend</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1753109295405</Id>
												<Name>txt_mapOverlayLegend_gridNeighbours2</Name>
												<X>-20</X>
												<Y>-28</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>v_amountOfDefinedGridLoops &gt; 0</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Lus 1</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1753109295407</Id>
												<Name>txt_mapOverlayLegend_gridNeighbours3</Name>
												<X>-20</X>
												<Y>-3</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>v_amountOfDefinedGridLoops &gt; 1</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Lus 2</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1753109542896</Id>
												<Name>rect_mapOverlayLegend_gridNeighbours4</Name>
												<X>-60</X>
												<Y>20</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<VisibleCode>txt_mapOverlayLegend_gridNeighbours4.isVisible()</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-16711936</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1753109545710</Id>
												<Name>txt_mapOverlayLegend_gridNeighbours4</Name>
												<X>-20</X>
												<Y>20</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>v_amountOfDefinedGridLoops &gt; 2</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Lus 3</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Text>
												<Id>1753109615141</Id>
												<Name>txt_mapOverlayLegend_gridNeighbours5</Name>
												<X>-18</X>
												<Y>50</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>false</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<VisibleCode>v_amountOfDefinedGridLoops &gt; 4</VisibleCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Etc.</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
										</Presentation>
									</Group>
									<Group>
										<Id>1752833007769</Id>
										<Name>gr_mapOverlayLegend_congestion</Name>
										<X>800</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>false</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<XCode>10</XCode>
										<YCode>-10</YCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Control Type="RadioButtons">
												<EmbeddedIcon>false</EmbeddedIcon>
												<Id>1752831754623</Id>
												<Name>rb_mapOverlayLegend_congestion</Name>
												<X>-80</X>
												<Y>5</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<BasicProperties Width="150" Height="70">
													<EmbeddedIcon>false</EmbeddedIcon>
													<TextColor>-16777216</TextColor>
													<Enabled>true</Enabled>
													<ActionCode>rb_mapOverlay.setValue(rb_mapOverlay.getValue(), true);</ActionCode>
												</BasicProperties>
												<ExtendedProperties>
													<Font Name="Dialog" Size="9" Style="0"/>
													<Orientation>VERTICAL</Orientation>
													<Button>Afname</Button>
													<Button>Teruglevering</Button>
													<Button>Beide</Button>
													<LinkTo>false</LinkTo>
												</ExtendedProperties>
											</Control>
											<Text>
												<Id>1752832963782</Id>
												<Name>txt_mapOverlayLegend_congestion3</Name>
												<X>-80</X>
												<Y>-10</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Type belasting:</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>11</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Rectangle>
												<Id>1753112150775</Id>
												<Name>rect_mapOverlayLegend_congestion1</Name>
												<X>-80</X>
												<Y>-55</Y>
												<Label>
													<X>10</X>
													<Y>10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<Width>25</Width>
												<Height>15</Height>
												<Rotation>0.0</Rotation>
												<FillColor>-8355712</FillColor>
												<FillMaterial>null</FillMaterial>
											</Rectangle>
											<Text>
												<Id>1753112150777</Id>
												<Name>txt_mapOverlayLegend_congestion1</Name>
												<X>-40</X>
												<Y>-55</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Onbekende capaciteit</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Image>
												<Id>1753189107075</Id>
												<Name>i_mapOverlayLegend_congestion_Degrees</Name>
												<X>60</X>
												<Y>-33</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<OnClickCode>f_setInfoText(i_mapOverlayLegend_congestion_Degrees, v_infoText.i_mapOverlayLegend_congestion_Degrees, i_mapOverlayLegend_congestion_Degrees.getX() + gr_mapOverlayLegend_congestion.getX() + gr_mapOverlayLegenda.getX(), i_mapOverlayLegend_congestion_Degrees.getY() + gr_mapOverlayLegend_congestion.getY() + gr_mapOverlayLegenda.getY());</OnClickCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>20</Width>
												<Height>20</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_i.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
											<Group>
												<Id>1753189732312</Id>
												<Name>gr_rect_mapOverlayLegend_congestion2</Name>
												<X>-65</X>
												<Y>-25</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Presentation>
													<Rectangle>
														<Id>1753189579677</Id>
														<Name>rect_mapOverlayLegend_congestion21</Name>
														<X>-15</X>
														<Y>-7</Y>
														<Label>
															<X>10</X>
															<Y>10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<Width>8</Width>
														<Height>15</Height>
														<Rotation>0.0</Rotation>
														<FillColor>-16744448</FillColor>
														<FillMaterial>null</FillMaterial>
													</Rectangle>
													<Rectangle>
														<Id>1753189590812</Id>
														<Name>rect_mapOverlayLegend_congestion22</Name>
														<X>-7</X>
														<Y>-7</Y>
														<Label>
															<X>10</X>
															<Y>10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<Width>9</Width>
														<Height>15</Height>
														<Rotation>0.0</Rotation>
														<FillColor>-23296</FillColor>
														<FillMaterial>null</FillMaterial>
													</Rectangle>
													<Rectangle>
														<Id>1753189664328</Id>
														<Name>rect_mapOverlayLegend_congestion23</Name>
														<X>2</X>
														<Y>-7</Y>
														<Label>
															<X>10</X>
															<Y>10</Y>
														</Label>
														<PublicFlag>true</PublicFlag>
														<PresentationFlag>true</PresentationFlag>
														<ShowLabel>false</ShowLabel>
														<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
														<EmbeddedIcon>false</EmbeddedIcon>
														<Z>0</Z>
														<ZHeight>10</ZHeight>
														<LineWidth>1</LineWidth>
														<LineColor>-16777216</LineColor>
														<LineMaterial>null</LineMaterial>
														<LineStyle>SOLID</LineStyle>
														<Width>8</Width>
														<Height>15</Height>
														<Rotation>0.0</Rotation>
														<FillColor>-65536</FillColor>
														<FillMaterial>null</FillMaterial>
													</Rectangle>
												</Presentation>
											</Group>
											<Text>
												<Id>1753189690263</Id>
												<Name>txt_mapOverlayLegend_congestion2</Name>
												<X>-40</X>
												<Y>-30</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Rotation>0.0</Rotation>
												<Color>-16777216</Color>
												<Text>Stabiel - Overbelast</Text>
												<Font>
													<Name>SansSerif</Name>
													<Size>10</Size>
													<Style>0</Style>
												</Font>
												<Alignment>LEFT</Alignment>
											</Text>
											<Image>
												<Id>1753190036395</Id>
												<Name>i_mapOverlayLegend_congestion_Types</Name>
												<X>-5</X>
												<Y>-12</Y>
												<Label>
													<X>0</X>
													<Y>-10</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<OnClickCode>f_setInfoText(i_mapOverlayLegend_congestion_Types, v_infoText.i_mapOverlayLegend_congestion_Types, i_mapOverlayLegend_congestion_Types.getX() + gr_mapOverlayLegend_congestion.getX() + gr_mapOverlayLegenda.getX(), i_mapOverlayLegend_congestion_Types.getY() + gr_mapOverlayLegend_congestion.getY() + gr_mapOverlayLegenda.getY());</OnClickCode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<Width>20</Width>
												<Height>20</Height>
												<Rotation>0.0</Rotation>
												<ImageFiles>
													<ImageResourceReference>
														<PackageName>zerointerfaceloader</PackageName>
														<ClassName>icon_i.png</ClassName>
													</ImageResourceReference>
												</ImageFiles>
												<OriginalSize>false</OriginalSize>
											</Image>
										</Presentation>
									</Group>
								</Presentation>
							</Group>
							<Group>
								<Id>1724074510751</Id>
								<Name>gr_consumptionColorsLegendaHouseholds</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>2800</X>
								<Y>1890</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<XCode>0</XCode>
								<YCode>-10</YCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1724074510753</Id>
										<Name>rect_householdTinyCosumption</Name>
										<X>-60</X>
										<Y>-52</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-8355712</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>25</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>1694498815</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074510755</Id>
										<Name>rect_householdSmallCosumption</Name>
										<X>-60</X>
										<Y>-28</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-8355712</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>25</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>1928724474</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074510757</Id>
										<Name>rect_householdMediumCosumption</Name>
										<X>-60</X>
										<Y>-4</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-8355712</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>25</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>1692204540</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074510759</Id>
										<Name>rect_householdLargeCosumption</Name>
										<X>-60</X>
										<Y>20</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-8355712</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>25</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>1637870836</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Rectangle>
										<Id>1724074510761</Id>
										<Name>rect_householdHugeCosumption</Name>
										<X>-60</X>
										<Y>44</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-8355712</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>25</Width>
										<Height>15</Height>
										<Rotation>0.0</Rotation>
										<FillColor>1766972398</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1724074510763</Id>
										<Name>t_HouseholdTinyCosumption</Name>
										<X>-20</X>
										<Y>-51</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>&lt; 1500 kWh / jaar</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1724074510765</Id>
										<Name>t_HouseholdSmallCosumption</Name>
										<X>-20</X>
										<Y>-28</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>&lt; 2500 kWh / jaar</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1724074510767</Id>
										<Name>t_HouseholdMediumCosumption</Name>
										<X>-20</X>
										<Y>-3</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>&lt; 4000 kWh / jaar</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1724074510769</Id>
										<Name>t_HouseholdLargeCosumption</Name>
										<X>-20</X>
										<Y>21</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>&lt; 6000 kWh / jaar</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1724074510771</Id>
										<Name>t_HouseholdHugeCosumption</Name>
										<X>-20</X>
										<Y>45</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>&gt; 6000 kWh / jaar</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>10</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1752231354833</Id>
								<Name>txt_visualObjects</Name>
								<X>-290</X>
								<Y>140</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>GIS Objects pure for visuals</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1746110287596</Id>
								<Name>gr_infoText</Name>
								<X>-2150</X>
								<Y>360</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<RoundedRectangle>
										<Id>1746110662246</Id>
										<Name>rect_infoText</Name>
										<X>0</X>
										<Y>0</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>1</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>620</Width>
										<Height>170</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
										<ArcRadius>10</ArcRadius>
									</RoundedRectangle>
									<Group>
										<Id>1746110287600</Id>
										<Name>gr_closeInfoText</Name>
										<X>600</X>
										<Y>20</Y>
										<Label>
											<X>5.17</X>
											<Y>0</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<OnClickCode>p_currentActiveInfoBubble.clear();
gr_infoText.setVisible(false);</OnClickCode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Presentation>
											<Oval>
												<Id>1746110287602</Id>
												<Name>oval_closeInfoText</Name>
												<X>0</X>
												<Y>0</Y>
												<Label>
													<X>0</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>1</LineWidth>
												<LineColor>-16777216</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<RadiusX>12</RadiusX>
												<RadiusY>40</RadiusY>
												<Rotation>0.0</Rotation>
												<FillColor>-12566464</FillColor>
												<FillMaterial>null</FillMaterial>
											</Oval>
											<Line>
												<Id>1746110287604</Id>
												<Name>line_closeInfoText1</Name>
												<X>-6</X>
												<Y>6</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-1</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>12</Dx>
												<Dy>-12</Dy>
												<Dz>0</Dz>
											</Line>
											<Line>
												<Id>1746110287606</Id>
												<Name>line_closeInfoText2</Name>
												<X>6</X>
												<Y>6</Y>
												<Label>
													<X>10</X>
													<Y>0</Y>
												</Label>
												<PublicFlag>true</PublicFlag>
												<PresentationFlag>true</PresentationFlag>
												<ShowLabel>false</ShowLabel>
												<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
												<EmbeddedIcon>false</EmbeddedIcon>
												<Z>0</Z>
												<ZHeight>10</ZHeight>
												<LineWidth>3</LineWidth>
												<LineColor>-1</LineColor>
												<LineMaterial>null</LineMaterial>
												<LineStyle>SOLID</LineStyle>
												<BeginArrowSize>1</BeginArrowSize>
												<BeginArrowStyle>0</BeginArrowStyle>
												<EndArrowSize>1</EndArrowSize>
												<EndArrowStyle>0</EndArrowStyle>
												<Dx>-12</Dx>
												<Dy>-12</Dy>
												<Dz>0</Dz>
											</Line>
										</Presentation>
									</Group>
									<Text>
										<Id>1746110287608</Id>
										<Name>t_infoTextHeader</Name>
										<X>20</X>
										<Y>20</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Extra Informatie</Text>
										<Font>
											<Name>Calibri</Name>
											<Size>18</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
									<Text>
										<Id>1746110287610</Id>
										<Name>t_infoTextDescription</Name>
										<X>20</X>
										<Y>50</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat
nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui
officia deserunt mollit anim id est laborum."</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
					<Level>
						<Id>1699290897134</Id>
						<Name>level1</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1696520909213</Id>
						<Name>va_Interface</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1726584205735</Id>
				<Name>Zero_Loader</Name>
				<Import>import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.FileOutputStream;
import java.util.stream.Stream;
import java.util.stream.IntStream;
import java.util.Dictionary.*;
import java.util.Hashtable.*;
import java.util.*;
import java.util.stream.Collectors;

import java.io.*;
import java.io.File;
import java.io.IOException;
//import java.util.Date;  
import java.text.SimpleDateFormat;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;


//Possibility to turn of traceln
import java.io.OutputStream;
import java.io.PrintStream;

//Import survey API library
import com.zenmo.vallum.Vallum;
import com.zenmo.zummon.companysurvey.TimeSeries;

import zeroPackage.ZeroMath;
import com.zenmo.zummon.companysurvey.PandIDKt;
import com.zenmo.vallum.PandKt;
import kotlinx.datetime.DateTimeUnit;</Import>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1726584205730</Id>
					<Name>1726584205730</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>GIS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>false</AutoCreate>
					<Id>1658477089958</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>p_timeStep_h</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1726584205731</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1726584205903</CurrentLevel>
				<ConnectionsId>1726584206083</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1726584205883</Id>
						<Name>v_timeOfModelStart_ms</Name>
						<X>1480</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205885</Id>
						<Name>v_modelStartUpDuration_s</Name>
						<X>1480</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205887</Id>
						<Name>v_hourOfYearStart</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1480</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205889</Id>
						<Name>v_remainingNumberOfTrucks</Name>
						<X>1480</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205891</Id>
						<Name>v_totalFloorAreaAnonymousCompanies_m2</Name>
						<Description>variable that tracks how much floor area remains for the average companies. (this will be used to determine the average m3 and kwh per m2 floor area to be used by the unkown companies (that have not filled in the survey). 
Calculated by: initial value (total floor area of the area) - total floor area of the survey companies</Description>
						<X>1481</X>
						<Y>261</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205893</Id>
						<Name>v_numberOfCompaniesNoSurvey</Name>
						<X>1481</X>
						<Y>241</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205895</Id>
						<Name>v_remainingGasConsumption_m3</Name>
						<X>1481</X>
						<Y>301</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205897</Id>
						<Name>v_remainingElectricityDelivery_kWh</Name>
						<Description>This variable indicates an annual maximum consumption for all the created consumption profiles combined. Setting it produces warnings if this is exceeded.</Description>
						<X>1481</X>
						<Y>281</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>Double.POSITIVE_INFINITY</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726584205899</Id>
						<Name>v_remainingNumberOfVans</Name>
						<X>1481</X>
						<Y>371</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727683925084</Id>
						<Name>v_nbCreatedVans</Name>
						<X>1480</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733235094633</Id>
						<Name>v_numberOfSurveyCompanies</Name>
						<X>1480</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733389557748</Id>
						<Name>v_simStartHour_h</Name>
						<Description>The hour 0 is defined as january 1st, 00:00h in the year energyModel.p_year</Description>
						<X>1480</X>
						<Y>119</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733390702422</Id>
						<Name>v_simDuration_h</Name>
						<X>1480</X>
						<Y>138</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>8760-energyModel.p_timeStep_h</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1736255870137</Id>
						<Name>v_remainingNumberOfCars</Name>
						<X>1480</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1737972861302</Id>
						<Name>map_buildingData_Vallum</Name>
						<X>-370</X>
						<Y>395</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Map&lt;String, com.zenmo.bag.Pand&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584206064</Id>
						<Name>zero_Interface</Name>
						<X>30</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Zero_Interface</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726584206062</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584206070</Id>
						<Name>defaultProfiles_data</Name>
						<X>-370</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>DefaultProfiles_data</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726584206068</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584206073</Id>
						<Name>project_data</Name>
						<Description>Should be filled with the Project_data record created in the startup of the project model</Description>
						<X>-370</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Project_data</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726584206071</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584206076</Id>
						<Name>settings</Name>
						<Description>Should be filled with the settings record created in the startup of the project model</Description>
						<X>-370</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Settings</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726584206074</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726584206079</Id>
						<Name>user</Name>
						<X>-370</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>User</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726584206077</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205737</Id>
						<Name>c_gridNodeIDsInScope</Name>
						<X>1480</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>String</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205739</Id>
						<Name>c_companyBuilding_data</Name>
						<X>-370</X>
						<Y>415</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Building_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205741</Id>
						<Name>c_gridNode_data</Name>
						<X>-370</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205743</Id>
						<Name>c_surveyCompanyBuilding_data</Name>
						<X>-380</X>
						<Y>910</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="private" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Building_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205745</Id>
						<Name>c_houseBuilding_data</Name>
						<X>-370</X>
						<Y>435</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Building_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205747</Id>
						<Name>c_solarfarm_data</Name>
						<X>-370</X>
						<Y>482</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Solarfarm_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205749</Id>
						<Name>c_windfarm_data</Name>
						<X>-370</X>
						<Y>502</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Windfarm_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205751</Id>
						<Name>c_electrolyser_data</Name>
						<X>-370</X>
						<Y>521</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Electrolyser_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205753</Id>
						<Name>c_battery_data</Name>
						<X>-370</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Battery_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205755</Id>
						<Name>c_cable_data</Name>
						<X>-370</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Cable_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205757</Id>
						<Name>c_neighbourhood_data</Name>
						<X>-370</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Neighbourhood_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205759</Id>
						<Name>c_remainingBuilding_data</Name>
						<X>-370</X>
						<Y>455</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Building_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205763</Id>
						<Name>c_chargingstation_data</Name>
						<X>-370</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Chargingstation_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1726584205765</Id>
						<Name>c_parcel_data</Name>
						<X>-370</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Parcel_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1737744140895</Id>
						<Name>c_vallumBuilding_data</Name>
						<X>-380</X>
						<Y>930</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Building_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1748944117397</Id>
						<Name>c_customProfiles_data</Name>
						<X>-370</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>CustomProfile_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1749631164240</Id>
						<Name>c_gridNodeIDsWithProfiles</Name>
						<X>1480</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>String</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1749649688266</Id>
						<Name>c_chargerProfiles_data</Name>
						<X>-370</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>ChargerProfile_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1749738339329</Id>
						<Name>c_parkingSpace_data</Name>
						<X>-370</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>ParkingSpace_data</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1753789656643</Id>
						<Name>c_defaultHeatingStrategies</Name>
						<X>1130</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>OL_GridConnectionHeatingType</ElementClass>
							<ValueElementClass>I_HeatingManagement</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1753789658412</Id>
						<Name>c_smartHeatingStrategies</Name>
						<X>1130</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>OL_GridConnectionHeatingType</ElementClass>
							<ValueElementClass>List&lt;I_HeatingManagement&gt;</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205769</Id>
						<Name>f_createGISRegionOutline</Name>
						<Description>Creates the outline of the simulated area</Description>
						<X>806.739</X>
						<Y>619</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Create neighborhoods and draw them&#xD;
for (Neighbourhood_data NBH : c_neighbourhood_data) {	&#xD;
	GIS_Object area = energyModel.add_pop_GIS_Objects();&#xD;
	&#xD;
	area.p_id = NBH.districtname();&#xD;
	area.p_GISObjectType = OL_GISObjectType.valueOf(NBH.neighbourhoodtype());&#xD;
&#xD;
	//Create gisregion&#xD;
	area.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(NBH.polygon(), area.p_GISObjectType));&#xD;
	&#xD;
	//Style area &#xD;
	zero_Interface.f_styleSimulationAreas(area);&#xD;
	zero_Interface.c_GISNeighborhoods.add(area);&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205771</Id>
						<Name>f_createGridConnections</Name>
						<X>90</X>
						<Y>220</Y>
						<Label>
							<X>11</X>
							<Y>1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Energy production sites&#xD;
f_createSolarParks();&#xD;
f_createWindFarms();&#xD;
&#xD;
//Other infra assets&#xD;
f_createChargingStations();&#xD;
f_createElectrolysers();&#xD;
f_createBatteries();&#xD;
&#xD;
//Consumers&#xD;
f_createCompanies();&#xD;
f_createHouses();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205773</Id>
						<Name>f_configureEngine_default</Name>
						<Description>Generieke functie die flexibele modelconfiguratie mogelijk maakt op basis van externe data. Expliciet gemodelleerd om profiling en volgorde van initialisatie te kunnen controleren.

@param: none
@return: none
@since: Sprint 6
@author: Jorrit</Description>
						<X>79</X>
						<Y>161</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Set basic input files&#xD;
energyModel.p_truckTripsCsv = inputCSVtruckTrips;&#xD;
energyModel.p_householdTripsCsv = inputCSVhouseholdTrips;&#xD;
energyModel.p_cookingPatternCsv = inputCSVcookingActivities;&#xD;
&#xD;
//Initialize specific slider GC&#xD;
f_initializeSpecificSliderGC();&#xD;
&#xD;
//Actors&#xD;
f_createActors();&#xD;
&#xD;
//Grid nodes&#xD;
f_createGridNodes();&#xD;
&#xD;
//Grid connections&#xD;
f_createGridConnections();&#xD;
&#xD;
//Additional GIS objects&#xD;
f_createAdditionalGISObjects();&#xD;
&#xD;
//Initialize the engine&#xD;
energyModel.p_runStartTime_h = v_simStartHour_h;&#xD;
energyModel.p_runEndTime_h = v_simStartHour_h + v_simDuration_h;&#xD;
energyModel.f_initializeEngine();&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205775</Id>
						<Name>f_createGridNodes</Name>
						<X>50</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//double latitude_c;&#xD;
//double longitude_c;&#xD;
OL_GridNodeType nodeType;&#xD;
GISRegion gisregion;&#xD;
&#xD;
// Grid operator (for now only one in the area)&#xD;
GridOperator Grid_Operator = findFirst(energyModel.pop_gridOperators, p-&gt;p.p_actorID.equals(project_data.grid_operator())) ;&#xD;
&#xD;
for (GridNode_data GN_data : c_gridNode_data) {&#xD;
	//    if no scope selected, or if node has 'all scopes' in input file or if the node specific scope is selected (exists in the arrayList)       &#xD;
	if( settings.subscopesToSimulate() == null || settings.subscopesToSimulate().isEmpty() || GN_data.subscope() == null || settings.subscopesToSimulate().indexOf(GN_data.subscope()) &gt; -1 ){ &#xD;
		if (GN_data.status()) {&#xD;
			GridNode GN = energyModel.add_pop_gridNodes();&#xD;
			GN.p_gridNodeID = GN_data.gridnode_id();&#xD;
			c_gridNodeIDsInScope.add(GN.p_gridNodeID);&#xD;
			&#xD;
			// Check wether transformer capacity is known or estimated&#xD;
			GN.p_capacity_kW = GN_data.capacity_kw();&#xD;
			GN.p_originalCapacity_kW = GN.p_capacity_kW;	&#xD;
			GN.p_realCapacityAvailable = GN_data.is_capacity_available();&#xD;
			&#xD;
			// Basic GN information&#xD;
			//GN.p_nodeStatus = GN_data.status();&#xD;
			GN.p_description = GN_data.description();&#xD;
			String nodeTypeString = GN_data.type();&#xD;
			&#xD;
			// Connect&#xD;
			GN.p_parentNodeID = GN_data.parent_node_id(); // Needs to be manually defined in the excel file of the nodes!&#xD;
			GN.p_ownerGridOperator = Grid_Operator;&#xD;
			&#xD;
			//Define node type&#xD;
			switch (nodeTypeString) {&#xD;
			    case "LVLV":&#xD;
			        GN.p_nodeType = OL_GridNodeType.LVLV;&#xD;
			        GN.p_energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
			        break;&#xD;
			    case "MVLV":&#xD;
			        GN.p_nodeType = OL_GridNodeType.MVLV;&#xD;
			        GN.p_energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
			        break;&#xD;
			    case "SUBMV":&#xD;
			        GN.p_nodeType = OL_GridNodeType.SUBMV;&#xD;
			        GN.p_energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
			        zero_Interface.b_gridLoopsAreDefined = true;&#xD;
			        break;&#xD;
			    case "MVMV":&#xD;
			        GN.p_nodeType = OL_GridNodeType.MVMV;&#xD;
			        GN.p_energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
			        break;&#xD;
			    case "HVMV":&#xD;
			        GN.p_nodeType = OL_GridNodeType.HVMV;&#xD;
			        GN.p_energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
			        break;&#xD;
			    default:&#xD;
			        traceln("There is a gridnode in your input file with an incorrect node type");&#xD;
			        break;&#xD;
			}&#xD;
			&#xD;
			//Define GN location&#xD;
			GN.p_latitude = GN_data.latitude();&#xD;
			GN.p_longitude = GN_data.longitude();&#xD;
			GN.setLatLon(GN.p_latitude, GN.p_longitude);&#xD;
			&#xD;
			//Create gis region&#xD;
			GN.gisRegion = zero_Interface.f_createGISObject(f_createGISNodesTokens(GN));&#xD;
			zero_Interface.f_styleGridNodes(GN);&#xD;
			&#xD;
			//Grid operator nodes&#xD;
			Grid_Operator.c_electricityGridNodes.add(GN);&#xD;
			&#xD;
			&#xD;
			//Gridnode service area&#xD;
			if (GN_data.service_area_polygon() != null){&#xD;
				//Create service area gis object&#xD;
				//GIS_Object serviceArea = f_createGISObject(GN.p_gridNodeID + ": service area", GN.p_latitude, GN.p_longitude, GN_data.service_area_polygon());&#xD;
				GISRegion serviceArea = zero_Interface.f_createGISObject(f_createGISObjectsTokens(GN_data.service_area_polygon(), OL_GISObjectType.GN_SERVICE_AREA));&#xD;
				&#xD;
				//Add to hashmap&#xD;
				zero_Interface.c_GISNetplanes.add( serviceArea );&#xD;
			}&#xD;
			&#xD;
			//Gridnode profile&#xD;
			if(GN_data.profile_data_kWh() != null){&#xD;
				f_addGridNodeProfile(GN, GN_data.profile_data_kWh());&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double[]</ReturnType>
						<Id>1726584205777</Id>
						<Name>f_createGISObjectsTokens</Name>
						<X>825.241</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>RegionCoords</Name>
							<Type>String</Type>
						</Parameter>
						<Parameter>
							<Name>GISObjectType</Name>
							<Type>OL_GISObjectType</Type>
						</Parameter>
						<Body>if (RegionCoords.startsWith("MultiPolygon")){&#xD;
	RegionCoords = RegionCoords.replace("MultiPolygon (((","");&#xD;
	RegionCoords = RegionCoords.replace(","," ");&#xD;
	RegionCoords = RegionCoords.replace(")))","");&#xD;
}&#xD;
else if(RegionCoords.startsWith("MULTIPOLYGON")){&#xD;
	RegionCoords = RegionCoords.replace("MULTIPOLYGON (((","");&#xD;
	RegionCoords = RegionCoords.replace(","," ");&#xD;
	RegionCoords = RegionCoords.replace(")))","");&#xD;
}&#xD;
else if(RegionCoords.startsWith("Poly")){&#xD;
	RegionCoords = RegionCoords.replace("Polygon ((","");&#xD;
	RegionCoords = RegionCoords.replace(","," ");&#xD;
	RegionCoords = RegionCoords.replace("))","");&#xD;
}&#xD;
else if(RegionCoords.startsWith("POLYGON")){&#xD;
	RegionCoords = RegionCoords.replace("POLYGON ((","");&#xD;
	RegionCoords = RegionCoords.replace(","," ");&#xD;
	RegionCoords = RegionCoords.replace("))","");&#xD;
}&#xD;
else if(RegionCoords.startsWith("MultiLineString")){&#xD;
	RegionCoords = RegionCoords.replace("MultiLineString ((","");&#xD;
	RegionCoords = RegionCoords.replace(","," ");&#xD;
	RegionCoords = RegionCoords.replace("))","");&#xD;
}&#xD;
else if(RegionCoords.startsWith("LineString")){&#xD;
	RegionCoords = RegionCoords.replace("LineString (","");&#xD;
	RegionCoords = RegionCoords.replace(","," ");&#xD;
	RegionCoords = RegionCoords.replace(")","");&#xD;
}&#xD;
else {&#xD;
	traceln("GIS coordinaten in de excel data die niet starten met Multi of Poly");&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
if(RegionCoords.contains(")(") || RegionCoords.contains(") (") || RegionCoords.contains(")  (")){&#xD;
	if (GISObjectType == OL_GISObjectType.ANTI_LAYER){&#xD;
		RegionCoords = RegionCoords.replace(")("," "); // Combine all polies into one!&#xD;
		RegionCoords = RegionCoords.replace(") ("," "); // Combine all polies into one!&#xD;
	}&#xD;
	else{&#xD;
		RegionCoords = RegionCoords.split("\\)")[0];&#xD;
	}&#xD;
}&#xD;
&#xD;
RegionCoords = RegionCoords.replace("  "," ");&#xD;
String delims = " ";&#xD;
String[] tokens;&#xD;
tokens = RegionCoords.split(delims);&#xD;
&#xD;
int nbCoords = tokens.length;&#xD;
double[] GISCoords = new double[nbCoords];&#xD;
		&#xD;
for (int i=0; i&lt;nbCoords; i++) {&#xD;
	if (i % 2 == 0) { // latitudes&#xD;
		GISCoords[i]=Double.parseDouble(tokens[i+1]);&#xD;
	} else { // longitudes&#xD;
		GISCoords[i]=Double.parseDouble(tokens[i-1]);&#xD;
	}&#xD;
}&#xD;
return GISCoords;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205779</Id>
						<Name>f_importExcelTablesToDB</Name>
						<Description>Automatisch inladen van excel files uit de model map naar de database.

@author: Ate
@since: 14-12-23</Description>
						<X>-390</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//inputHouseholdTrips.readFile();&#xD;
//inputCookingActivities.readFile();&#xD;
//inputTruckTrips.readFile();&#xD;
&#xD;
//inputCSVcookingActivities.readFile();&#xD;
//inputCSVcookingActivities.&#xD;
&#xD;
if(settings.reloadDatabase()){&#xD;
	&#xD;
	//Get the database names that are selected for reloading&#xD;
	List&lt;String[]&gt; databaseNames = project_data.databaseNames();&#xD;
	&#xD;
	//Get the model database&#xD;
	ModelDatabase modelDB = getEngine().getModelDatabase();&#xD;
	&#xD;
	//Loop over all databases&#xD;
	for(String[] databaseName : databaseNames){&#xD;
	&#xD;
		//Create the file path string&#xD;
		String filePathString = "data_" + project_data.project_name() + "/" + databaseName[0] + "_" + project_data.project_name() + ".xlsx";&#xD;
		&#xD;
		//If file exists, load it into the database&#xD;
		File f = new File(filePathString);&#xD;
		if(f.exists() &amp;&amp; !f.isDirectory()) { 			&#xD;
			Database myFileDatabase = new Database(this, databaseName[1], filePathString);&#xD;
			modelDB.importFromExternalDB(myFileDatabase.getConnection(), databaseName[1], databaseName[1], true, false);&#xD;
			traceln("Database %s has been updated.", databaseName[1]);	&#xD;
		} else { // if file does not exist, clear the database to make sure there are no wrong values in the simulation!&#xD;
			executeStatement("DELETE FROM " + databaseName[1] + " c");&#xD;
			traceln("File not found, database %s has been cleared!", databaseName[1]);&#xD;
		}&#xD;
	}&#xD;
&#xD;
	//Overwrite specific database values&#xD;
	f_overwriteSpecificDatabaseValues();&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205785</Id>
						<Name>f_createSolarParks</Name>
						<Description>Function used to generate solar parks: grid connections and park owner (connection owner actor)</Description>
						<X>430.001</X>
						<Y>710.001</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ConnectionOwner owner;&#xD;
GCEnergyProduction solarpark;&#xD;
&#xD;
List&lt;String&gt; existing_actors = new ArrayList();&#xD;
List&lt;String&gt; existing_solarFields = new ArrayList();&#xD;
&#xD;
for (Solarfarm_data dataSolarfarm : f_getSolarfarmsInSubScope(c_solarfarm_data)) { // MOET NOG CHECK OF ZONNEVELD ACTOR AL BESTAAT OP, zo ja --&gt; Zonneveld koppelen aan elkaar en niet 2 GC en 2 actoren maken.&#xD;
	&#xD;
	if (!existing_solarFields.contains( dataSolarfarm.gc_id() )) {&#xD;
		solarpark = energyModel.add_EnergyProductionSites();&#xD;
		&#xD;
		solarpark.set_p_gridConnectionID( dataSolarfarm.gc_id() );&#xD;
		solarpark.set_p_name( dataSolarfarm.gc_name() );&#xD;
		&#xD;
		//Check wether it can be changed using sliders&#xD;
		solarpark.p_isSliderGC = dataSolarfarm.isSliderGC();&#xD;
		&#xD;
		//Grid Capacity&#xD;
		solarpark.v_liveConnectionMetaData.physicalCapacity_kW = dataSolarfarm.connection_capacity_kw();&#xD;
		if ( dataSolarfarm.connection_capacity_kw() &gt; 0 ) {&#xD;
			solarpark.v_liveConnectionMetaData.physicalCapacityKnown = true;&#xD;
		}&#xD;
		if ( dataSolarfarm.contracted_feed_in_capacity_kw() != null) {&#xD;
			solarpark.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataSolarfarm.contracted_feed_in_capacity_kw();&#xD;
			solarpark.v_liveConnectionMetaData.contractedFeedinCapacityKnown = true;&#xD;
		}&#xD;
		else {&#xD;
			solarpark.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataSolarfarm.connection_capacity_kw();&#xD;
			solarpark.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		solarpark.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	&#xD;
		solarpark.set_p_ownerID( dataSolarfarm.owner_id() );	&#xD;
		solarpark.set_p_parentNodeElectricID( dataSolarfarm.gridnode_id() );&#xD;
		&#xD;
		solarpark.v_isActive = dataSolarfarm.initially_active() ;&#xD;
		&#xD;
		//Add EA&#xD;
		f_addEnergyProduction(solarpark, OL_EnergyAssetType.PHOTOVOLTAIC, "Solar farm" , dataSolarfarm.capacity_electric_kw());&#xD;
		&#xD;
		&#xD;
		if (!existing_actors.contains(solarpark.p_ownerID)){ // check if owner exists already, if not, create new owner.&#xD;
			owner = energyModel.add_pop_connectionOwners();&#xD;
			&#xD;
			owner.set_p_actorID( dataSolarfarm.owner_id());&#xD;
			owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );&#xD;
			owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.SOLARFARM_OP );&#xD;
			owner.b_dataSharingAgreed = true;&#xD;
			existing_actors.add(owner.p_actorID);&#xD;
		}&#xD;
		else { // Owner exists already: add new GC to existing owner&#xD;
			owner = findFirst(energyModel.f_getConnectionOwners(), p -&gt; p.p_actorID.equals(dataSolarfarm.owner_id()));&#xD;
		}&#xD;
		&#xD;
		solarpark.set_p_owner( owner );&#xD;
		&#xD;
		existing_solarFields.add(solarpark.p_gridConnectionID);		&#xD;
	}&#xD;
	else { // solarpark and its owner exist already, only create new gis building which is added to the park&#xD;
		solarpark = findFirst(energyModel.EnergyProductionSites, p -&gt; p.p_gridConnectionID.equals(dataSolarfarm.gc_id()) );&#xD;
		owner = solarpark.p_owner;		&#xD;
&#xD;
	}&#xD;
	&#xD;
	if (dataSolarfarm.polygon() != null) {&#xD;
		//Create GIS object for the solar park&#xD;
		GIS_Object area = f_createGISObject( dataSolarfarm.gc_name(), dataSolarfarm.latitude(), dataSolarfarm.longitude(), dataSolarfarm.polygon(), OL_GISObjectType.SOLARFARM);&#xD;
		&#xD;
		//Add to collections&#xD;
		area.c_containedGridConnections.add(solarpark);&#xD;
		solarpark.c_connectedGISObjects.add(area);&#xD;
		&#xD;
		//Style building&#xD;
		area.set_p_defaultFillColor( zero_Interface.v_solarParkColor );&#xD;
		area.set_p_defaultLineColor( zero_Interface.v_solarParkLineColor );&#xD;
		area.set_p_defaultLineWidth( zero_Interface.v_energyAssetLineWidth);&#xD;
		zero_Interface.f_styleAreas(area);&#xD;
	}&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205787</Id>
						<Name>f_createBatteries</Name>
						<Description>Function used to create (neighborhood) battery grid connection and actor</Description>
						<X>430.001</X>
						<Y>850</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (Battery_data dataBattery : f_getBatteriesInSubScope(c_battery_data)) { // MOET NOG CHECK OF battery ACTOR AL BESTAAT OP, zo ja --&gt; battery koppelen aan elkaar en niet 2 GC en 2 actoren maken.&#xD;
	&#xD;
	ConnectionOwner owner = energyModel.add_pop_connectionOwners();&#xD;
	GCGridBattery gridbattery = energyModel.add_GridBatteries();&#xD;
	&#xD;
	//Owner parameters&#xD;
	owner.set_p_actorID( dataBattery.owner_id() );&#xD;
	owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );&#xD;
	owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.BATTERY_OP );&#xD;
	owner.b_dataSharingAgreed = true;&#xD;
	&#xD;
	//GC parameters&#xD;
	gridbattery.set_p_gridConnectionID( dataBattery.gc_id () );&#xD;
	gridbattery.set_p_name( dataBattery.gc_name() );&#xD;
	gridbattery.set_p_ownerID( dataBattery.owner_id() );&#xD;
	gridbattery.set_p_owner( owner );	&#xD;
	gridbattery.v_liveConnectionMetaData.physicalCapacity_kW = dataBattery.connection_capacity_kw();&#xD;
	&#xD;
	//Check wether it can be changed using sliders&#xD;
	gridbattery.p_isSliderGC = dataBattery.isSliderGC();&#xD;
	&#xD;
	//Grid Capacity&#xD;
	gridbattery.v_liveConnectionMetaData.physicalCapacity_kW = dataBattery.connection_capacity_kw();&#xD;
	if ( dataBattery.connection_capacity_kw() &gt; 0 ) {&#xD;
		gridbattery.v_liveConnectionMetaData.physicalCapacityKnown = true;&#xD;
	}&#xD;
	if ( dataBattery.contracted_delivery_capacity_kw() != null ) {&#xD;
		gridbattery.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = dataBattery.contracted_delivery_capacity_kw();&#xD;
		gridbattery.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = true;&#xD;
	}&#xD;
	else {&#xD;
		gridbattery.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = dataBattery.connection_capacity_kw();&#xD;
		gridbattery.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
	}&#xD;
	if ( dataBattery.contracted_feed_in_capacity_kw() != null ) {&#xD;
		gridbattery.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataBattery.contracted_feed_in_capacity_kw();&#xD;
		gridbattery.v_liveConnectionMetaData.contractedFeedinCapacityKnown = true;&#xD;
	}&#xD;
	else {&#xD;
		gridbattery.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataBattery.connection_capacity_kw();&#xD;
		gridbattery.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;	&#xD;
	}&#xD;
	&#xD;
	gridbattery.set_p_parentNodeElectricID( dataBattery.gridnode_id() );&#xD;
	gridbattery.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	&#xD;
	&#xD;
	switch (dataBattery.operation_mode()) {&#xD;
		case PRICE:&#xD;
			gridbattery.p_batteryAlgorithm = new J_BatteryManagementPrice(gridbattery);&#xD;
			break;&#xD;
		case PEAK_SHAVING_PARENT_NODE:&#xD;
			J_BatteryManagementPeakShaving batteryAlgorithm = new J_BatteryManagementPeakShaving(gridbattery);&#xD;
			GridNode gn = findFirst(energyModel.pop_gridNodes, x -&gt; x.p_gridNodeID.equals(gridbattery.p_parentNodeElectricID));&#xD;
			if (gn == null) {&#xD;
				throw new RuntimeException("Could not find GridNode with ID: " + gridbattery.p_parentNodeElectricID + " for GCGridBattery");&#xD;
			}&#xD;
			batteryAlgorithm.setTarget(gn);&#xD;
			gridbattery.p_batteryAlgorithm = batteryAlgorithm;&#xD;
			break;&#xD;
		case PEAK_SHAVING_COOP:&#xD;
			// target agent is still null, should be set at the moment of coop creation&#xD;
			batteryAlgorithm = new J_BatteryManagementPeakShaving(gridbattery);&#xD;
			batteryAlgorithm.setTargetType( OL_ResultScope.ENERGYCOOP );&#xD;
			gridbattery.p_batteryAlgorithm = batteryAlgorithm;&#xD;
			break;&#xD;
		default:&#xD;
			throw new RuntimeException("Battery Operation Mode: " + dataBattery.operation_mode() + " is not supported for GCGridBattery.");&#xD;
	}&#xD;
	&#xD;
	//Get initial state&#xD;
	gridbattery.v_isActive = dataBattery.initially_active();&#xD;
	&#xD;
	if (dataBattery.polygon() != null) {&#xD;
		//Create gis object for the battery&#xD;
		GIS_Object area =  f_createGISObject( dataBattery.gc_name(), dataBattery.latitude(), dataBattery.longitude(), dataBattery.polygon(), OL_GISObjectType.BATTERY);&#xD;
&#xD;
		//Add to collections&#xD;
		gridbattery.c_connectedGISObjects.add(area);&#xD;
		area.c_containedGridConnections.add(gridbattery);&#xD;
			&#xD;
		//Style building&#xD;
		area.set_p_defaultFillColor( zero_Interface.v_batteryColor );&#xD;
		area.set_p_defaultLineColor( zero_Interface.v_batteryLineColor );&#xD;
		area.set_p_defaultLineWidth( zero_Interface.v_energyAssetLineWidth);&#xD;
		zero_Interface.f_styleAreas(area);&#xD;
	}&#xD;
	//Create energy asset for the battery&#xD;
	f_addStorage(gridbattery, dataBattery.capacity_electric_kw(), dataBattery.storage_capacity_kwh(), OL_EnergyAssetType.STORAGE_ELECTRIC );	&#xD;
	&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205789</Id>
						<Name>f_createElectrolysers</Name>
						<Description>Function used to create electrolyser grid connections and actors</Description>
						<X>430</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ConnectionOwner owner;&#xD;
List&lt;String&gt; existing_actors = new ArrayList();&#xD;
&#xD;
&#xD;
for (Electrolyser_data dataElectrolyser : f_getElectrolysersInSubScope(c_electrolyser_data)) {&#xD;
	GCEnergyConversion H2Electrolyser = energyModel.add_EnergyConversionSites();&#xD;
&#xD;
	H2Electrolyser.set_p_gridConnectionID( dataElectrolyser.gc_id() );&#xD;
	H2Electrolyser.set_p_name( dataElectrolyser.gc_name() );&#xD;
	H2Electrolyser.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	&#xD;
	H2Electrolyser.set_p_ownerID( dataElectrolyser.owner_id() );	&#xD;
	H2Electrolyser.set_p_parentNodeElectricID( dataElectrolyser.gridnode_id() );&#xD;
	&#xD;
	//Grid Capacity&#xD;
	H2Electrolyser.v_liveConnectionMetaData.physicalCapacity_kW = dataElectrolyser.connection_capacity_kw();&#xD;
	if ( dataElectrolyser.connection_capacity_kw() &gt; 0 ) {&#xD;
		H2Electrolyser.v_liveConnectionMetaData.physicalCapacityKnown = true;&#xD;
	}&#xD;
	if ( dataElectrolyser.contracted_delivery_capacity_kw() != null ) {&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = dataElectrolyser.contracted_delivery_capacity_kw();&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = true;&#xD;
	}&#xD;
	else {&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = dataElectrolyser.connection_capacity_kw();&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
	}&#xD;
	if ( dataElectrolyser.contracted_feed_in_capacity_kw() != null ) {&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataElectrolyser.contracted_feed_in_capacity_kw();&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedFeedinCapacityKnown = true;&#xD;
	}&#xD;
	else {&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataElectrolyser.connection_capacity_kw();&#xD;
		H2Electrolyser.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;	&#xD;
	}&#xD;
&#xD;
&#xD;
	&#xD;
	H2Electrolyser.v_isActive = dataElectrolyser.initially_active();	&#xD;
	H2Electrolyser.p_minProductionRatio = dataElectrolyser.min_production_ratio();&#xD;
&#xD;
	//Electrolyser operation mode&#xD;
	H2Electrolyser.set_p_electrolyserOperationMode( dataElectrolyser.default_operation_mode());&#xD;
	&#xD;
	//Create EA for the electrolyser GC&#xD;
	J_EAConversionElectrolyser h2ElectrolyserEA = new J_EAConversionElectrolyser(H2Electrolyser, dataElectrolyser.capacity_electric_kw(), dataElectrolyser.conversion_efficiency(), energyModel.p_timeStep_h, OL_ElectrolyserState.STANDBY, dataElectrolyser.load_change_time_s(), dataElectrolyser.start_up_time_shutdown_s(), dataElectrolyser.start_up_time_standby_s(), dataElectrolyser.start_up_time_idle_s());&#xD;
	&#xD;
	if (!existing_actors.contains(H2Electrolyser.p_ownerID)){ // check if owner exists already, if not, create new owner.&#xD;
		owner = energyModel.add_pop_connectionOwners();&#xD;
		&#xD;
		owner.set_p_actorID( H2Electrolyser.p_ownerID );&#xD;
		owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );&#xD;
		owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.ELECTROLYSER_OP );&#xD;
		owner.b_dataSharingAgreed = true;&#xD;
	}&#xD;
	else { // Owner exists already: add new GC to existing owner&#xD;
		owner = findFirst(energyModel.f_getConnectionOwners(), p -&gt; p.p_actorID.equals(dataElectrolyser.owner_id()));&#xD;
	}&#xD;
	&#xD;
	H2Electrolyser.set_p_owner( owner );&#xD;
&#xD;
	if (dataElectrolyser.polygon() != null) {			&#xD;
		//Create GIS object for the electrolyser&#xD;
		GIS_Object area = f_createGISObject( dataElectrolyser.gc_name(), dataElectrolyser.latitude(), dataElectrolyser.longitude(), dataElectrolyser.polygon(), OL_GISObjectType.ELECTROLYSER);&#xD;
&#xD;
		//Add to collections&#xD;
		area.c_containedGridConnections.add(H2Electrolyser);&#xD;
		H2Electrolyser.c_connectedGISObjects.add(area);&#xD;
	&#xD;
		&#xD;
		//Style building&#xD;
		area.set_p_defaultFillColor( zero_Interface.v_electrolyserColor );&#xD;
		area.set_p_defaultLineColor( zero_Interface.v_electrolyserLineColor );&#xD;
		area.set_p_defaultLineWidth( zero_Interface.v_energyAssetLineWidth);&#xD;
		zero_Interface.f_styleAreas(area);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205791</Id>
						<Name>f_createWindFarms</Name>
						<Description>Function used to create all windfarm grid connections, actors, EAs and GISObjects</Description>
						<X>430.001</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ConnectionOwner owner;&#xD;
GCEnergyProduction windfarm;&#xD;
&#xD;
List&lt;String&gt; existing_actors = new ArrayList();&#xD;
List&lt;String&gt; existing_windFarms = new ArrayList();&#xD;
&#xD;
for (Windfarm_data dataWindfarm : f_getWindfarmsInSubScope(c_windfarm_data)) {&#xD;
	if (!existing_windFarms.contains(dataWindfarm.gc_id())) { // Check if windfarm exists already, if not, create new windfarm GC + turbine&#xD;
		windfarm = energyModel.add_EnergyProductionSites();&#xD;
&#xD;
		windfarm.set_p_gridConnectionID( dataWindfarm.gc_id() );&#xD;
		windfarm.set_p_name( dataWindfarm.gc_name() );&#xD;
&#xD;
		//Check wether it can be changed using sliders&#xD;
		windfarm.p_isSliderGC = dataWindfarm.isSliderGC();&#xD;
	&#xD;
		//Grid capacity&#xD;
		windfarm.v_liveConnectionMetaData.physicalCapacity_kW = dataWindfarm.connection_capacity_kw();&#xD;
		if ( dataWindfarm.connection_capacity_kw() &gt; 0 ) {&#xD;
			windfarm.v_liveConnectionMetaData.physicalCapacityKnown = true;&#xD;
		}&#xD;
		if ( dataWindfarm.contracted_feed_in_capacity_kw() != null) {&#xD;
			windfarm.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataWindfarm.contracted_feed_in_capacity_kw();&#xD;
			windfarm.v_liveConnectionMetaData.contractedFeedinCapacityKnown = true;&#xD;
		}&#xD;
		else {&#xD;
			windfarm.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataWindfarm.connection_capacity_kw();&#xD;
			windfarm.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
		}&#xD;
		&#xD;
		windfarm.set_p_heatingType( OL_GridConnectionHeatingType.NONE );	&#xD;
		windfarm.set_p_ownerID( dataWindfarm.owner_id() );	&#xD;
		windfarm.set_p_parentNodeElectricID( dataWindfarm.gridnode_id() );&#xD;
		&#xD;
		//Get initial state&#xD;
		windfarm.v_isActive = dataWindfarm.initially_active();&#xD;
		&#xD;
		//Create EA for the windturbine GC&#xD;
		f_addEnergyProduction(windfarm, OL_EnergyAssetType.WINDMILL, "Windmill onshore", dataWindfarm.capacity_electric_kw());&#xD;
		&#xD;
		if (!existing_actors.contains(windfarm.p_ownerID)){ // check if owner exists already, if not, create new owner.&#xD;
			owner = energyModel.add_pop_connectionOwners();&#xD;
			&#xD;
			owner.set_p_actorID( windfarm.p_ownerID );&#xD;
			owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );&#xD;
			owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.WINDFARM_OP );&#xD;
			owner.b_dataSharingAgreed = true;&#xD;
		}&#xD;
		else { // Owner exists already: add new GC to existing owner&#xD;
			owner = findFirst(energyModel.f_getConnectionOwners(), p -&gt; p.p_actorID.equals(dataWindfarm.owner_id()));&#xD;
		}&#xD;
		&#xD;
		windfarm.set_p_owner( owner );&#xD;
		&#xD;
		existing_windFarms.add(windfarm.p_gridConnectionID);	&#xD;
	}&#xD;
	else { // winfarm and its owner exist already, only create new gis building which is added to the farm&#xD;
		windfarm = findFirst(energyModel.EnergyProductionSites, p -&gt; p.p_gridConnectionID.equals(dataWindfarm.gc_id()) );&#xD;
		owner = windfarm.p_owner;		&#xD;
&#xD;
	}&#xD;
	&#xD;
	//Create GIS object for the windfarm&#xD;
	if (dataWindfarm.polygon() != null) {&#xD;
		GIS_Object area = f_createGISObject( dataWindfarm.gc_name(), dataWindfarm.latitude(), dataWindfarm.longitude(), dataWindfarm.polygon(), OL_GISObjectType.WINDFARM );&#xD;
		&#xD;
		//Add to collections&#xD;
		area.c_containedGridConnections.add(windfarm);&#xD;
		windfarm.c_connectedGISObjects.add(area);&#xD;
		&#xD;
		//Style building&#xD;
		area.set_p_defaultFillColor( zero_Interface.v_windFarmColor );&#xD;
		area.set_p_defaultLineColor( zero_Interface.v_windFarmLineColor );&#xD;
		area.set_p_defaultLineWidth( zero_Interface.v_energyAssetLineWidth);&#xD;
		zero_Interface.f_styleAreas(area);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double[]</ReturnType>
						<Id>1726584205793</Id>
						<Name>f_createGISNodesTokens</Name>
						<X>70</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GN</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Body>double scaling_factor_LVLV = zero_Interface.v_LVLVNodeSize;&#xD;
double scaling_factor_MVLV = zero_Interface.v_MVLVNodeSize;&#xD;
double scaling_factor_MVMV = zero_Interface.v_MVMVNodeSize;&#xD;
double scaling_factor_HVMV = zero_Interface.v_HVMVNodeSize;&#xD;
&#xD;
int nb_GISCoords;&#xD;
String node_shape = "TRIANGLE";&#xD;
double scaling_factor_gridnode = 0;&#xD;
&#xD;
switch( GN.p_nodeType ) {&#xD;
		case LVLV:&#xD;
		nb_GISCoords = 6;&#xD;
		node_shape = "TRIANGLE";&#xD;
		scaling_factor_gridnode = scaling_factor_LVLV;		&#xD;
		break;&#xD;
		case MVLV:&#xD;
		nb_GISCoords = 6;&#xD;
		node_shape = "TRIANGLE";&#xD;
		scaling_factor_gridnode = scaling_factor_MVLV;&#xD;
		break;&#xD;
		case SUBMV:&#xD;
		nb_GISCoords = 6;&#xD;
		node_shape = "TRIANGLE";&#xD;
		scaling_factor_gridnode = scaling_factor_MVLV;	&#xD;
		break;&#xD;
		case MVMV:&#xD;
		nb_GISCoords = 6;&#xD;
		node_shape = "TRIANGLE";&#xD;
		scaling_factor_gridnode = scaling_factor_MVMV;	&#xD;
		break;&#xD;
		case HVMV:&#xD;
		nb_GISCoords = 6;&#xD;
		node_shape = "TRIANGLE";&#xD;
		scaling_factor_gridnode = scaling_factor_HVMV;	&#xD;
		break;&#xD;
		case HT:&#xD;
		nb_GISCoords = 6;	&#xD;
		break;&#xD;
		case MT:&#xD;
		nb_GISCoords = 6;	&#xD;
		break;&#xD;
		case LT:&#xD;
		nb_GISCoords = 6;	&#xD;
		break;&#xD;
		case LT5thgen:&#xD;
		nb_GISCoords = 6;	&#xD;
		break;&#xD;
		default:&#xD;
		nb_GISCoords = 6;&#xD;
}&#xD;
&#xD;
double[] GISCoords = new double[nb_GISCoords];&#xD;
&#xD;
&#xD;
switch(node_shape){&#xD;
&#xD;
	case "TRIANGLE":&#xD;
		//latitudes&#xD;
		GISCoords[0]=GN.p_latitude;&#xD;
		GISCoords[2]=GN.p_latitude - scaling_factor_gridnode*0.00001;&#xD;
		GISCoords[4]=GN.p_latitude - scaling_factor_gridnode*0.00001;&#xD;
		&#xD;
		//longitudes&#xD;
		GISCoords[1]=GN.p_longitude;&#xD;
		GISCoords[3]=GN.p_longitude + scaling_factor_gridnode*0.00001;&#xD;
		GISCoords[5]=GN.p_longitude - scaling_factor_gridnode*0.00001;&#xD;
		break;&#xD;
	case "DIAMOND":&#xD;
		//latitudes&#xD;
		GISCoords[0]=GN.p_latitude;&#xD;
		GISCoords[2]=GN.p_latitude - scaling_factor_gridnode*0.00001;&#xD;
		GISCoords[4]=GN.p_latitude;&#xD;
		GISCoords[6]=GN.p_latitude + scaling_factor_gridnode*0.00001;&#xD;
		&#xD;
		//longitudes&#xD;
		GISCoords[1]=GN.p_longitude;&#xD;
		GISCoords[3]=GN.p_longitude + scaling_factor_gridnode*0.00001;&#xD;
		GISCoords[5]=GN.p_longitude + scaling_factor_gridnode*0.00001*2;&#xD;
		GISCoords[7]=GN.p_longitude + scaling_factor_gridnode*0.00001;&#xD;
		break;&#xD;
	/*&#xD;
	case "CIRCLE":&#xD;
			// if you want Circle coordinates --&gt;&#xD;
		//x = r * cos(t) + a&#xD;
		//y = r * sin(t) + b&#xD;
		//t is an angle between 0 and 2π (more steps is more circle points, about 10-12 should suffice. --&gt; adjust nb_GISCoords accordingly&#xD;
		// r is the radius: 0.000009 degrees in latitude is about 1 meter &#xD;
		// a and b are latitude and longitude&#xD;
		break;&#xD;
	*/&#xD;
}&#xD;
&#xD;
return GISCoords;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205795</Id>
						<Name>f_createEnergyActors</Name>
						<Description>Function used to generate specific actors like grid operator, energy supplier and energy coop. Actors used to create variable pricing.</Description>
						<X>60</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Create the grid operator&#xD;
GridOperator GO = energyModel.add_pop_gridOperators();&#xD;
&#xD;
GO.p_actorID = project_data.grid_operator();&#xD;
GO.p_actorType = OL_ActorType.OPERATORGRID;&#xD;
GO.p_hasCongestionPricing = project_data.hasCongestionPricing() != null ? project_data.hasCongestionPricing() : false;&#xD;
&#xD;
&#xD;
// Create the energy coop&#xD;
if (project_data.energy_coop() != null &amp;&amp; !project_data.energy_coop().equals("None")){&#xD;
	&#xD;
	EnergyCoop EC = energyModel.add_pop_energyCoops();&#xD;
	&#xD;
	EC.p_actorID = project_data.energy_coop();&#xD;
	EC.p_actorType = OL_ActorType.COOPENERGY;&#xD;
	EC.p_gridOperator = GO;&#xD;
	//EC.p_CoopParent = EC.p_actorID; // WAT BETEKENT COOP PARENT??&#xD;
}&#xD;
&#xD;
&#xD;
// Energy supplier&#xD;
if (project_data.energy_supplier() != null &amp;&amp; !project_data.energy_supplier().equals("None")){&#xD;
	&#xD;
	EnergySupplier ES = energyModel.add_pop_energySuppliers(); &#xD;
	&#xD;
	ES.p_actorID = project_data.energy_supplier();&#xD;
	ES.p_actorType = OL_ActorType.SUPPLIERENERGY;&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205799</Id>
						<Name>f_createGenericCompanies</Name>
						<Description>Creating the companies (using a single GC) + owned buildings, that have not filled in the survey. If created, they will be simulated using average values, scaled with the totals (CBS data) of the area.</Description>
						<X>430</X>
						<Y>368</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Initialize variables&#xD;
List&lt;GCUtility&gt; generic_company_GCs = new ArrayList();&#xD;
HashMap&lt;GridConnection, Double&gt; map_GC_to_installedBuildingPV = new HashMap();&#xD;
&#xD;
//Get buildings in scope&#xD;
List&lt;Building_data&gt; buildingDataGenericCompanies = f_getBuildingsInSubScope(c_companyBuilding_data);&#xD;
&#xD;
//Add generic companies to the legend if in model&#xD;
if(buildingDataGenericCompanies.size()&gt;0){&#xD;
	zero_Interface.c_modelActiveDefaultGISBuildings.add(OL_GISBuildingTypes.DEFAULT_COMPANY);&#xD;
}&#xD;
&#xD;
//Loop over the remaining buildings in c_CompanyBuilding_data (Survey buildings have been removed from this collection)&#xD;
for (Building_data genericCompany : buildingDataGenericCompanies) {&#xD;
	&#xD;
	GCUtility companyGC = findFirst(generic_company_GCs, GC -&gt; GC.p_gridConnectionID.equals(genericCompany.address_id()));&#xD;
	&#xD;
	if(companyGC == null){&#xD;
		//Create new companyGC&#xD;
		companyGC = energyModel.add_UtilityConnections();&#xD;
		&#xD;
		//Update counter and collections&#xD;
		v_numberOfCompaniesNoSurvey++;&#xD;
		generic_company_GCs.add(companyGC);&#xD;
		map_GC_to_installedBuildingPV.put(companyGC, 0.0);&#xD;
		&#xD;
		//Set parameters for the Grid Connection&#xD;
		companyGC.p_gridConnectionID = genericCompany.address_id();&#xD;
		&#xD;
		// Check that is needed until connectioncapacity is no longer in 'Panden' excel&#xD;
		if (genericCompany.contracted_capacity_kw() == null || genericCompany.contracted_capacity_kw() &lt;= 0) {&#xD;
			companyGC.v_liveConnectionMetaData.physicalCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;&#xD;
			companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;&#xD;
			companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;&#xD;
		}&#xD;
		else{&#xD;
			companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = genericCompany.contracted_capacity_kw();&#xD;
			companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
			companyGC.v_liveConnectionMetaData.physicalCapacity_kW = companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
		}&#xD;
		&#xD;
		companyGC.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
		companyGC.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
&#xD;
		&#xD;
		&#xD;
		//set GC Adress&#xD;
		companyGC.p_address = new J_Address();&#xD;
		companyGC.p_address.setStreetName(genericCompany.streetname());&#xD;
		if (genericCompany.house_number() == null) {&#xD;
			companyGC.p_address.setHouseNumber(0);&#xD;
		}&#xD;
		else {&#xD;
			companyGC.p_address.setHouseNumber(genericCompany.house_number());&#xD;
		}&#xD;
		companyGC.p_address.setHouseLetter(genericCompany.house_letter());&#xD;
		companyGC.p_address.setHouseAddition(genericCompany.house_addition());&#xD;
		companyGC.p_address.setPostalcode(genericCompany.postalcode());&#xD;
		companyGC.p_address.setCity(genericCompany.city());&#xD;
		&#xD;
		&#xD;
		//Set location of GC&#xD;
	 	companyGC.p_latitude = genericCompany.latitude(); &#xD;
	 	companyGC.p_longitude = genericCompany.longitude();&#xD;
	 	companyGC.setLatLon(companyGC.p_latitude, companyGC.p_longitude);  &#xD;
	 	&#xD;
	 	&#xD;
		//Connect GC to grid node&#xD;
		companyGC.p_parentNodeElectricID = genericCompany.gridnode_id ();&#xD;
		&#xD;
		// Create new actor and assign GC to that&#xD;
		ConnectionOwner COC = energyModel.add_pop_connectionOwners(); // Create Connection owner company&#xD;
			&#xD;
		COC.p_actorID = genericCompany.address_id();&#xD;
		COC.p_actorType = OL_ActorType.CONNECTIONOWNER;&#xD;
		COC.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;&#xD;
		COC.p_detailedCompany = false;&#xD;
		COC.b_dataSharingAgreed = true;&#xD;
		&#xD;
		companyGC.p_owner = COC;&#xD;
		companyGC.p_ownerID = COC.p_actorID;&#xD;
	}&#xD;
	&#xD;
	//Check wheter this building already exists&#xD;
	GIS_Building existingBuilding = findFirst(energyModel.pop_GIS_Buildings, gisBuilding -&gt; gisBuilding.p_id.equals(genericCompany.building_id()));&#xD;
	&#xD;
	if(existingBuilding == null){//Create new GIS building and connect&#xD;
		GIS_Building b = f_createGISBuilding( genericCompany, companyGC );&#xD;
&#xD;
		companyGC.p_roofSurfaceArea_m2 += b.p_roofSurfaceArea_m2;&#xD;
		map_GC_to_installedBuildingPV.put(companyGC, map_GC_to_installedBuildingPV.get(companyGC) + (genericCompany.pv_installed_kwp() != null ? genericCompany.pv_installed_kwp() : 0));&#xD;
		&#xD;
		//Style building&#xD;
		b.p_defaultFillColor = zero_Interface.v_companyBuildingColor;&#xD;
		b.p_defaultLineColor = zero_Interface.v_companyBuildingLineColor;&#xD;
		zero_Interface.f_styleAreas(b);&#xD;
	}&#xD;
	else{// Connect with existing building&#xD;
		//Redistribute the PV installed&#xD;
		List&lt;GridConnection&gt; currentConnectedGCWithBuilding_notDetailed = findAll(existingBuilding.c_containedGridConnections, gc -&gt; !gc.p_owner.p_detailedCompany);&#xD;
		int currentAmountOfConnectedGCWithBuilding_notDetailed = currentConnectedGCWithBuilding_notDetailed.size();&#xD;
&#xD;
		double buildingPV = genericCompany.pv_installed_kwp() != null ? genericCompany.pv_installed_kwp() : 0;&#xD;
		double newPVDistributionForAllAttachedGC_kW = buildingPV/(currentAmountOfConnectedGCWithBuilding_notDetailed+1);&#xD;
		double deltaPV_earlierConnectedGC_kW = newPVDistributionForAllAttachedGC_kW - (buildingPV/currentAmountOfConnectedGCWithBuilding_notDetailed);&#xD;
		&#xD;
		for(GridConnection earlierConnectedGC : currentConnectedGCWithBuilding_notDetailed){&#xD;
			map_GC_to_installedBuildingPV.put(earlierConnectedGC, map_GC_to_installedBuildingPV.get(earlierConnectedGC) + deltaPV_earlierConnectedGC_kW);	&#xD;
			if(map_GC_to_installedBuildingPV.get(earlierConnectedGC) &lt; 0){&#xD;
				new RuntimeException("Negative installed PV for GC: " + earlierConnectedGC.p_gridConnectionID + " after redistribution of PV on the building. This should never be possible!");&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		map_GC_to_installedBuildingPV.put(companyGC, map_GC_to_installedBuildingPV.get(companyGC) + newPVDistributionForAllAttachedGC_kW);&#xD;
		&#xD;
		//Connect to the existing building&#xD;
		f_connectGCToExistingBuilding(companyGC, existingBuilding, genericCompany);&#xD;
	}&#xD;
	&#xD;
	companyGC.p_floorSurfaceArea_m2 += genericCompany.address_floor_surface_m2();&#xD;
	v_totalFloorAreaAnonymousCompanies_m2 += genericCompany.address_floor_surface_m2();&#xD;
	&#xD;
}&#xD;
&#xD;
//Amount of generic companies created&#xD;
traceln("Number of companies created without survey: " + v_numberOfCompaniesNoSurvey);&#xD;
&#xD;
//Create EA after all buildings and connections have been made -&gt; needed because total surfaces are unkown before that&#xD;
for (GridConnection GCcompany : generic_company_GCs ) {&#xD;
	&#xD;
	//create the energy assets for each GC&#xD;
	f_iEAGenericCompanies(GCcompany, map_GC_to_installedBuildingPV.get(GCcompany));&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>GIS_Building</ReturnType>
						<Id>1726584205801</Id>
						<Name>f_createGISBuilding</Name>
						<Description>Creates the GIS object(s) building(s) for the companies and houses</Description>
						<X>807.621</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>buildingData</Name>
							<Type>Building_data</Type>
						</Parameter>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>GIS_Building b = energyModel.add_pop_GIS_Buildings();&#xD;
&#xD;
b.p_id = buildingData.building_id();&#xD;
b.p_GISObjectType = OL_GISObjectType.BUILDING;&#xD;
b.p_buildingYear = buildingData.build_year();	&#xD;
b.p_status = buildingData.status();&#xD;
b.p_useType = buildingData.purpose();	&#xD;
&#xD;
// Adres data&#xD;
b.p_annotation = buildingData.annotation();&#xD;
&#xD;
&#xD;
//If building is the first building in a cluster (means it has a pancluster_nr), add it to the list of buidling clusters&#xD;
if(buildingData.pandcluster_nr() != null &amp;&amp; buildingData.pandcluster_nr() &gt; 0) { // &amp;&amp; &#xD;
	energyModel.c_GISBuildingClusters.add(b);&#xD;
	b.p_pandcluster_nr = buildingData.pandcluster_nr();&#xD;
}&#xD;
&#xD;
//Create gisregion&#xD;
b.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(buildingData.polygon(), b.p_GISObjectType));&#xD;
&#xD;
//Use the first point of the polygon as lat lon&#xD;
double[] gisregion_points = b.gisRegion.getPoints(); // get all points of the gisArea of the building in the format lat1,lon1,lat2,lon2, etc.&#xD;
&#xD;
//position and coordinates&#xD;
b.p_latitude = gisregion_points[0];&#xD;
b.p_longitude = gisregion_points[1];&#xD;
&#xD;
//Set latlon&#xD;
b.setLatLon(b.p_latitude, b.p_longitude);&#xD;
&#xD;
&#xD;
//Define roof surface area (with Null checks and gisregion area as back up)&#xD;
b.p_roofSurfaceArea_m2 = buildingData.polygon_area_m2() != null ? buildingData.polygon_area_m2() : b.gisRegion.area();&#xD;
&#xD;
//Define floor surface area (with Null check, and make it 0 if unkown, else counting errors due to order of loadin of building data)&#xD;
b.p_floorSurfaceArea_m2 = buildingData.address_floor_surface_m2() != null ? buildingData.address_floor_surface_m2() : 0;&#xD;
&#xD;
//Add to collections&#xD;
b.c_containedGridConnections.add(parentGC);&#xD;
parentGC.c_connectedGISObjects.add(b);&#xD;
&#xD;
&#xD;
return b;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205803</Id>
						<Name>f_addElectricityDemandProfile</Name>
						<X>821</X>
						<Y>111</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyElectricityDemand_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>pvPower_kW</Name>
							<Type>Double</Type>
						</Parameter>
						<Parameter>
							<Name>hasQuarterlyData</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>profileName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>if ( hasQuarterlyData == true ) { // Add quarterly electricity data pattern if available &#xD;
	&#xD;
	//Initialize the arrays&#xD;
	List&lt;Double&gt; yearlyElectricityFeedin_kWh_list = null; &#xD;
	List&lt;Double&gt; yearlyElectricityProduction_kWh_list = null;&#xD;
	&#xD;
	//Check for PV, and if so: check for additional quarterhourly values&#xD;
	if(pvPower_kW != null &amp;&amp; pvPower_kW &gt; 0){&#xD;
		//Check for feedin values availability, if available: fill the list, if not, list = null;&#xD;
		try {&#xD;
			if(selectFirstValue(Double.class, "SELECT " + profileName + "_feedin FROM comp_elec_consumption LIMIT 1;") != null){&#xD;
		  		yearlyElectricityFeedin_kWh_list = selectValues(double.class, "SELECT " + profileName + "_feedin FROM comp_elec_consumption;");			&#xD;
			}&#xD;
		}&#xD;
		catch(Exception e) {&#xD;
			//Do nothing, cause initialized with null;&#xD;
		}&#xD;
		&#xD;
		//Check for bruto production values availability, if available: fill the list, if not, list = null;&#xD;
		try {&#xD;
			if(selectFirstValue(Double.class, "SELECT " + profileName + "_production FROM comp_elec_consumption LIMIT 1;") != null){&#xD;
		  		yearlyElectricityProduction_kWh_list = selectValues(double.class, "SELECT " + profileName + "_production FROM comp_elec_consumption;");&#xD;
			}&#xD;
		}&#xD;
		catch(Exception e) {&#xD;
			//Do nothing, cause initialized with null;&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//Get the delivery values&#xD;
	List&lt;Double&gt; yearlyElectricityDelivery_kWh_list = selectValues(double.class, "SELECT " + profileName + "_demand FROM comp_elec_consumption;");&#xD;
	&#xD;
	&#xD;
	//Convert lists into arrays&#xD;
	double[] yearlyElectricityDelivery_kWh_array = (yearlyElectricityDelivery_kWh_list != null) ? yearlyElectricityDelivery_kWh_list.stream().mapToDouble(d -&gt; max(0,d)).toArray() : null;&#xD;
	double[] yearlyElectricityFeedin_kWh_array = 	(yearlyElectricityFeedin_kWh_list != null) ? yearlyElectricityFeedin_kWh_list.stream().mapToDouble(d -&gt; max(0,d)).toArray() : null;&#xD;
	double[] yearlyElectricityProduction_kWh_array = (yearlyElectricityProduction_kWh_list != null) ? yearlyElectricityProduction_kWh_list.stream().mapToDouble(d -&gt; max(0,d)).toArray() : null;&#xD;
	&#xD;
&#xD;
	//Preprocess and add the profiles&#xD;
	f_createPreprocessedElectricityProfile_PV(parentGC, yearlyElectricityDelivery_kWh_array, yearlyElectricityFeedin_kWh_array, yearlyElectricityProduction_kWh_array, pvPower_kW, null);&#xD;
&#xD;
} &#xD;
&#xD;
else { // Add regular electricity and consumption profiles&#xD;
	J_EAConsumption profile = new J_EAConsumption(parentGC, OL_EnergyAssetType.ELECTRICITY_DEMAND, profileName, yearlyElectricityDemand_kWh, OL_EnergyCarriers.ELECTRICITY, energyModel.p_timeStep_h, null);&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205805</Id>
						<Name>f_addHeatDemandProfile</Name>
						<X>821</X>
						<Y>221</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyGasDemand_m3</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>hasHourlyGasData</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>ratioGasUsedForHeating</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>profileName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>J_EAConsumption heatDemand;&#xD;
double yearlyDemandHeat_kWh = 0;&#xD;
double profileTimeStep_hr = 1;&#xD;
double maxHeatOutputPower_kW = 0;&#xD;
double gasToHeatEfficiency = 0;&#xD;
&#xD;
switch (parentGC.p_heatingType){&#xD;
	case GASBURNER:&#xD;
	case HYBRID_HEATPUMP:&#xD;
		gasToHeatEfficiency = avgc_data.p_avgEfficiencyGasBurner_fr;&#xD;
		break;&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		gasToHeatEfficiency = avgc_data.p_avgEfficiencyCHP_thermal_fr;&#xD;
		break;&#xD;
}&#xD;
if(hasHourlyGasData){&#xD;
	J_EAProfile profile = new J_EAProfile(parentGC, OL_EnergyCarriers.HEAT, null, OL_ProfileAssetType.HEATDEMAND ,profileTimeStep_hr);		&#xD;
	profile.energyAssetName = parentGC.p_ownerID + " custom heat profile";&#xD;
	&#xD;
	List&lt;Double&gt; hourlyGasDemand_kWh = selectValues(double.class, "SELECT " + profileName + "_demand FROM comp_gas_consumption;");&#xD;
	List&lt;Double&gt; hourlyHeatDemand_kWh = new ArrayList&lt;Double&gt;();&#xD;
	&#xD;
	for (int i = 0; i &lt; hourlyGasDemand_kWh.size(); i++) {&#xD;
		double gasHeatingValue_timestep_kWh = hourlyGasDemand_kWh.get(i) * avgc_data.p_gas_kWhpm3 * gasToHeatEfficiency * ratioGasUsedForHeating;&#xD;
		yearlyDemandHeat_kWh += gasHeatingValue_timestep_kWh;&#xD;
    	hourlyHeatDemand_kWh.add(i, gasHeatingValue_timestep_kWh);&#xD;
    	&#xD;
    	//Keep track of max value&#xD;
    	if((gasHeatingValue_timestep_kWh/energyModel.p_timeStep_h) &gt; maxHeatOutputPower_kW){&#xD;
    		maxHeatOutputPower_kW = gasHeatingValue_timestep_kWh/energyModel.p_timeStep_h;&#xD;
    	}&#xD;
	}	&#xD;
	profile.a_energyProfile_kWh = hourlyHeatDemand_kWh.stream().mapToDouble(d -&gt; max(0,d)).toArray();&#xD;
	&#xD;
	//Update v_remainingGasConsumption_m3&#xD;
	v_remainingGasConsumption_m3 -= yearlyDemandHeat_kWh/(avgc_data.p_gas_kWhpm3 * gasToHeatEfficiency * ratioGasUsedForHeating);&#xD;
}&#xD;
else{&#xD;
	&#xD;
	&#xD;
	if (parentGC.p_heatingType == null || parentGC.p_heatingType == OL_GridConnectionHeatingType.NONE || parentGC.p_floorSurfaceArea_m2 == 0 ){ &#xD;
		//traceln("NO FLOOR SURFACE OR HEATING TYPE DETECTED");&#xD;
		return;&#xD;
	}&#xD;
	&#xD;
	//Determine heatdemand&#xD;
	yearlyDemandHeat_kWh = yearlyGasDemand_m3 * avgc_data.p_gas_kWhpm3 * gasToHeatEfficiency;&#xD;
	&#xD;
	if (yearlyDemandHeat_kWh &lt;= 0 ){// If heat demand = 0, make estimation based on floor surface area, average m3 gas consumption per m2 floor and gas burner efficiency&#xD;
		yearlyDemandHeat_kWh = avgc_data.p_avgCompanyGasConsumption_m3pm2*parentGC.p_floorSurfaceArea_m2 * avgc_data.p_gas_kWhpm3 * avgc_data.p_avgEfficiencyGasBurner_fr;&#xD;
		//traceln("NO HEAT DEMAND DETECTED: ESTIMATION MADE BASED ON FLOOR SURFACE AREA!");&#xD;
	}&#xD;
&#xD;
	//Determine heatdemand&#xD;
	heatDemand = new J_EAConsumption(parentGC, OL_EnergyAssetType.HEAT_DEMAND, profileName, yearlyDemandHeat_kWh, OL_EnergyCarriers.HEAT, energyModel.p_timeStep_h, null);&#xD;
	&#xD;
	//Calculate required thermal power&#xD;
	maxHeatOutputPower_kW = yearlyDemandHeat_kWh*defaultProfiles_data.getDefaultBuildingHeatDemandProfileMaximum_fr();&#xD;
}&#xD;
&#xD;
&#xD;
//Add heat demand asset&#xD;
f_addHeatAsset(parentGC, parentGC.p_heatingType, maxHeatOutputPower_kW);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205807</Id>
						<Name>f_createGISParcels</Name>
						<Description>Creates "empty" parcels on the gismap, these parcels do not contain buildings or gridconnections. Currently no need for the function to return the GIS_Object.</Description>
						<X>807.621</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Add GISObject type to the legenda&#xD;
if(c_parcel_data.size()&gt;0){&#xD;
	zero_Interface.c_modelActiveSpecialGISObjects.add(OL_GISObjectType.PARCEL);&#xD;
}&#xD;
&#xD;
for (Parcel_data dataParcel : c_parcel_data) {&#xD;
		&#xD;
	GIS_Parcel parcel = energyModel.add_pop_GIS_Parcels();&#xD;
	&#xD;
	parcel.set_p_latitude( dataParcel.latitude() );&#xD;
	parcel.set_p_longitude( dataParcel.longitude() );&#xD;
	parcel.setLatLon(parcel.p_latitude, parcel.p_longitude);	&#xD;
	parcel.set_p_id( dataParcel.parcel_id() );&#xD;
	parcel.set_p_GISObjectType(OL_GISObjectType.PARCEL);&#xD;
	&#xD;
	//Building + styling the gisregion and putting it on the map&#xD;
	GISRegion gisregion = zero_Interface.f_createGISObject(f_createGISObjectsTokens( dataParcel.polygon(), parcel.p_GISObjectType));&#xD;
	parcel.gisRegion = gisregion;&#xD;
	&#xD;
	parcel.set_p_defaultFillColor( zero_Interface.v_parcelColor );&#xD;
	parcel.set_p_defaultLineColor( zero_Interface.v_parcelLineColor );&#xD;
	parcel.set_p_defaultLineStyle( LineStyle.LINE_STYLE_DASHED );&#xD;
	zero_Interface.f_styleAreas(parcel);&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205809</Id>
						<Name>f_addEnergyProduction</Name>
						<X>821</X>
						<Y>291</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>asset_type</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>asset_name</Name>
							<Type>String</Type>
						</Parameter>
						<Parameter>
							<Name>installedPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double assetCapacity_kW				= 0;&#xD;
double timestep_h 					= energyModel.p_timeStep_h;&#xD;
J_ProfilePointer profilePointer = null;&#xD;
OL_EnergyCarriers energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
switch (asset_type){&#xD;
&#xD;
case PHOTOVOLTAIC: &#xD;
	energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
	profilePointer = energyModel.pp_PVProduction35DegSouth_fr;&#xD;
	assetCapacity_kW = installedPower_kW;&#xD;
	break;&#xD;
&#xD;
case WINDMILL:&#xD;
	energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
	profilePointer=energyModel.pp_windProduction_fr;&#xD;
	assetCapacity_kW = installedPower_kW;&#xD;
	break;&#xD;
&#xD;
case PHOTOTHERMAL: //NOT USED YET&#xD;
	energyCarrier = OL_EnergyCarriers.HEAT;&#xD;
	profilePointer = energyModel.pp_PVProduction35DegSouth_fr; // Voor nu om te testen! Misschien valt dit wel te gebruiken met bepaalde efficientie factor!&#xD;
	assetCapacity_kW = installedPower_kW;&#xD;
	break;&#xD;
}&#xD;
&#xD;
J_EAProduction production_asset = new J_EAProduction(parentGC, asset_type, asset_name, energyCarrier, assetCapacity_kW, timestep_h, profilePointer);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>GIS_Object</ReturnType>
						<Id>1726584205811</Id>
						<Name>f_createGISObject</Name>
						<Description>Creates the GIS object for the area EA (windfarms, solarparks, electrolysers, batteries, etc.)</Description>
						<X>807.621</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>name</Name>
							<Type>String</Type>
						</Parameter>
						<Parameter>
							<Name>latitude</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>longitude</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>polygon</Name>
							<Type>String</Type>
						</Parameter>
						<Parameter>
							<Name>GISObjectType</Name>
							<Type>OL_GISObjectType</Type>
						</Parameter>
						<Body>GIS_Object area = energyModel.add_pop_GIS_Objects();&#xD;
&#xD;
area.p_id = name;&#xD;
area.p_GISObjectType = GISObjectType;&#xD;
&#xD;
//position and coordinates&#xD;
area.p_latitude = latitude;&#xD;
area.p_longitude = longitude;&#xD;
area.setLatLon(area.p_latitude, area.p_longitude);		&#xD;
&#xD;
//Create gisregion&#xD;
area.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(polygon, area.p_GISObjectType));&#xD;
&#xD;
//Add GISObject type to the legenda&#xD;
zero_Interface.c_modelActiveSpecialGISObjects.add(area.p_GISObjectType);&#xD;
&#xD;
return area;&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205815</Id>
						<Name>f_createSurveyCompanies_Zorm</Name>
						<X>429.001</X>
						<Y>159</Y>
						<Label>
							<X>10.999</X>
							<Y>1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Get the survey data&#xD;
List&lt;com.zenmo.zummon.companysurvey.Survey&gt; surveys = f_getSurveys();&#xD;
traceln("Size of survey List: %s", surveys.size());&#xD;
&#xD;
//Get the building data&#xD;
try{&#xD;
	map_buildingData_Vallum = com.zenmo.vallum.PandKt.fetchBagPanden(surveys);&#xD;
}&#xD;
catch (Exception e){ //if api of bag is down, leave bag buildings empty and display error message&#xD;
	zero_Interface.f_setErrorScreen("BAG API is offline, het is mogelijk dat bepaalde panden niet zijn ingeladen!");&#xD;
}&#xD;
&#xD;
&#xD;
traceln("Companies that filled in the survey:");&#xD;
for (var survey : surveys) {&#xD;
	&#xD;
	traceln(survey.getCompanyName());&#xD;
	&#xD;
	//Create connection owner&#xD;
	ConnectionOwner survey_owner = energyModel.add_pop_connectionOwners();&#xD;
	survey_owner.p_actorID = survey.getCompanyName();&#xD;
	survey_owner.p_actorType = OL_ActorType.CONNECTIONOWNER;&#xD;
	survey_owner.p_connectionOwnerType = OL_ConnectionOwnerType.COMPANY;&#xD;
	survey_owner.p_detailedCompany = true;&#xD;
	survey_owner.b_dataSharingAgreed = survey.getDataSharingAgreed();&#xD;
		&#xD;
	for (var address : survey.getAddresses()) {&#xD;
		&#xD;
		//Update number of survey companies (locations)&#xD;
		v_numberOfSurveyCompanies++;&#xD;
		&#xD;
        for (var gridConnection: address.getGridConnections()) {&#xD;
&#xD;
		 	//Check if it has (or will have) a direct connection with the grid (either gas or electric), if not: skip this gc.&#xD;
		 	boolean hasNaturalGasConnection = (gridConnection.getNaturalGas().getHasConnection() != null)? gridConnection.getNaturalGas().getHasConnection() : false;	 	&#xD;
		 	boolean hasExpansionRequest = (gridConnection.getElectricity().getGridExpansion().getHasRequestAtGridOperator() != null ) ? gridConnection.getElectricity().getGridExpansion().getHasRequestAtGridOperator() : false;&#xD;
		 	&#xD;
		 	if (!gridConnection.getElectricity().getHasConnection() &amp;&amp; !hasExpansionRequest &amp;&amp; !hasNaturalGasConnection){&#xD;
				traceln("surveyGC with sequence: " + gridConnection.getSequence() + " is not created, as it has no connection to the grid, future grid connection or current gas connection.");	&#xD;
			 	continue;&#xD;
		 	}&#xD;
		 	&#xD;
		 	//Create GC&#xD;
		 	GCUtility companyGC = energyModel.add_UtilityConnections();		  &#xD;
		 	&#xD;
			//Set parameters for the Grid Connection&#xD;
			companyGC.p_ownerID = survey.getCompanyName();&#xD;
		 	companyGC.p_gridConnectionID = gridConnection.getSequence().toString() ;&#xD;
&#xD;
		 	//Find actor and connect GC &#xD;
			companyGC.p_owner = survey_owner;	&#xD;
			&#xD;
			//Adress data&#xD;
			companyGC.p_address = new J_Address();&#xD;
			companyGC.p_address.setStreetName(address.getStreet().substring(0,1).toUpperCase() + address.getStreet().substring(1).toLowerCase());&#xD;
		 	companyGC.p_address.setHouseNumber(address.getHouseNumber());&#xD;
		 	companyGC.p_address.setHouseLetter(address.getHouseLetter().equals("") ? null : address.getHouseLetter());&#xD;
		 	companyGC.p_address.setHouseAddition(address.getHouseNumberSuffix().equals("") ? null : address.getHouseNumberSuffix());&#xD;
		 	companyGC.p_address.setPostalcode(address.getPostalCode().equals("") ? null : address.getPostalCode().toUpperCase().replaceAll("\\s",""));&#xD;
		 	companyGC.p_address.setCity(address.getCity().substring(0,1).toUpperCase() + address.getCity().substring(1).toLowerCase());&#xD;
&#xD;
			//Get attached building info&#xD;
			List&lt;Building_data&gt; buildings = f_getSurveyGCBuildingData(companyGC, gridConnection);&#xD;
			&#xD;
			//Total new additional floor/roof surface area&#xD;
		 	double totalNewFloorSurfaceAreaGC_m2 = 0;&#xD;
		 	double totalNewRoofSurfaceAreaGC_m2 = 0;&#xD;
			&#xD;
			//Create the GIS buildings&#xD;
			for (Building_data buildingData : buildings) {&#xD;
				GIS_Building gisBuilding = findFirst(energyModel.pop_GIS_Buildings, b -&gt; b.p_id.equals(buildingData.building_id())); // Check if building already exists in engine&#xD;
				if (gisBuilding != null) {&#xD;
				    // Connect GC to existing building in engine&#xD;
				    f_connectGCToExistingBuilding(companyGC, gisBuilding, buildingData);&#xD;
				}&#xD;
				else{ &#xD;
					gisBuilding = f_createGISBuilding( buildingData, companyGC);				&#xD;
				}&#xD;
				&#xD;
				//Set name of building&#xD;
				if(gisBuilding.p_annotation == null){&#xD;
					gisBuilding.p_annotation = companyGC.p_ownerID;&#xD;
				}&#xD;
				&#xD;
				//Accumulate surface areas&#xD;
				totalNewFloorSurfaceAreaGC_m2 += buildingData.address_floor_surface_m2();&#xD;
				totalNewRoofSurfaceAreaGC_m2 += gisBuilding.p_roofSurfaceArea_m2;&#xD;
				&#xD;
				//Set trafo ID&#xD;
				companyGC.p_parentNodeElectricID = buildingData.gridnode_id();&#xD;
				&#xD;
				//Style building&#xD;
				gisBuilding.p_defaultFillColor = zero_Interface.v_detailedCompanyBuildingColor;&#xD;
				gisBuilding.p_defaultLineColor = zero_Interface.v_detailedCompanyBuildingLineColor;&#xD;
				zero_Interface.f_styleAreas(gisBuilding);&#xD;
				&#xD;
			}      &#xD;
			&#xD;
			//Add (combined) building data to GC (latitude and longitude + area)&#xD;
			companyGC.p_floorSurfaceArea_m2 += totalNewFloorSurfaceAreaGC_m2;&#xD;
			companyGC.p_roofSurfaceArea_m2 += totalNewRoofSurfaceAreaGC_m2;&#xD;
			&#xD;
&#xD;
			if(!companyGC.c_connectedGISObjects.isEmpty()){&#xD;
				companyGC.p_longitude = companyGC.c_connectedGISObjects.get(0).p_longitude; // Get longitude of first building (only used to get nearest trafo)&#xD;
				companyGC.p_latitude = companyGC.c_connectedGISObjects.get(0).p_latitude; // Get latitude of first building (only used to get nearest trafo)&#xD;
				&#xD;
				if(buildings.isEmpty()){ //GC will not have gotten a gridnode assigned,&#xD;
					for (var PID : gridConnection.getPandIds() ) {&#xD;
						Building_data surveyBuildingData = findFirst(c_surveyCompanyBuilding_data, b -&gt; b.building_id().equals(PID.getValue()));&#xD;
						if(surveyBuildingData != null){&#xD;
							companyGC.p_parentNodeElectricID = surveyBuildingData.gridnode_id();&#xD;
							break;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			else{&#xD;
				traceln("Gridconnection %s with owner %s has no buildings!!!", companyGC.p_gridConnectionID, companyGC.p_ownerID);&#xD;
			}&#xD;
			&#xD;
			//Set lat lon&#xD;
			companyGC.setLatLon(companyGC.p_latitude, companyGC.p_longitude); &#xD;
			&#xD;
			//Energy asset initialization&#xD;
			f_iEASurveyCompanies_Zorm(companyGC, gridConnection); &#xD;
        }&#xD;
    }&#xD;
}&#xD;
&#xD;
//If survey companies are present, add to the ui legend&#xD;
if(v_numberOfSurveyCompanies&gt;0){&#xD;
	//Add to the legend&#xD;
	zero_Interface.c_modelActiveDefaultGISBuildings.add(OL_GISBuildingTypes.DETAILED_COMPANY);&#xD;
&#xD;
	//Pass the number of survey companies to interface for the dynamic legend&#xD;
	zero_Interface.v_numberOfSurveyCompanies = v_numberOfSurveyCompanies;&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;com.zenmo.zummon.companysurvey.Survey&gt;</ReturnType>
						<Id>1726584205819</Id>
						<Name>f_getSurveys</Name>
						<X>449</X>
						<Y>179</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Connect with API to database&#xD;
Vallum vallum = new Vallum(user.PROJECT_CLIENT_ID(), user.PROJECT_CLIENT_SECRET());&#xD;
&#xD;
&#xD;
List&lt;com.zenmo.zummon.companysurvey.Survey&gt; surveys = new ArrayList();&#xD;
&#xD;
&#xD;
String[] zorm_project_names;&#xD;
if(project_data.zorm_project_names() != null){&#xD;
	zorm_project_names = project_data.zorm_project_names();&#xD;
}&#xD;
else{&#xD;
	zorm_project_names = new String[]{project_data.project_name()};&#xD;
}&#xD;
&#xD;
surveys = vallum.getEnabledSurveysByProjectNames(zorm_project_names);&#xD;
&#xD;
//Clear user data&#xD;
user = null;&#xD;
&#xD;
return surveys;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205821</Id>
						<Name>f_createActors</Name>
						<X>90</X>
						<Y>201</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create specific actors like Grid operator, energy supplier, energy coop&#xD;
f_createEnergyActors();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205825</Id>
						<Name>f_setHeatingTypeSurvey</Name>
						<X>460</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>companyGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>gridConnection</Name>
							<Type>com.zenmo.zummon.companysurvey.GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>hasHourlyGasData</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>List&lt;OL_GridConnectionHeatingType&gt; heatingTypes = new ArrayList&lt;&gt;();&#xD;
// Translating the survey heating types to OL_GridConnectionHeatingType&#xD;
for (var heatingType : gridConnection.getHeat().getHeatingTypes()) {&#xD;
		case GAS_BOILER:&#xD;
			heatingTypes.add(OL_GridConnectionHeatingType.GASBURNER);&#xD;
			break;&#xD;
		case HYBRID_HEATPUMP:&#xD;
			heatingTypes.add(OL_GridConnectionHeatingType.HYBRID_HEATPUMP);&#xD;
			break;&#xD;
		case ELECTRIC_HEATPUMP:&#xD;
			heatingTypes.add(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP);&#xD;
			break;&#xD;
		case DISTRICT_HEATING:&#xD;
			heatingTypes.add(OL_GridConnectionHeatingType.DISTRICTHEAT);&#xD;
			break;&#xD;
		case COMBINED_HEAT_AND_POWER:&#xD;
			heatingTypes.add(OL_GridConnectionHeatingType.GASFIRED_CHPPEAK);&#xD;
			break;	&#xD;
		case OTHER:&#xD;
			heatingTypes.add(OL_GridConnectionHeatingType.OTHER);&#xD;
			break;&#xD;
		default:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;&#xD;
			throw new RuntimeException("No or incorrect heating: " + heatingType + " type detected for '" + companyGC.p_ownerID + "'");&#xD;
}&#xD;
&#xD;
int i = 0;&#xD;
&#xD;
if (gridConnection.getHeat().getHeatingTypes().size() &gt; 1) {&#xD;
	//companyGC.p_heatingType = OL_GridConnectionHeatingType.CUSTOM;&#xD;
else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER) &amp;&amp; companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP)){&#xD;
	&#xD;
}&#xD;
&#xD;
while (i &lt; gridConnection.getHeat().getHeatingTypes().size()){&#xD;
&#xD;
	var Heating_Type = gridConnection.getHeat().getHeatingTypes().get(i);&#xD;
&#xD;
	switch (Heating_Type){&#xD;
		&#xD;
		case GAS_BOILER:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
			companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.GASBURNER);&#xD;
			break;&#xD;
&#xD;
		case HYBRID_HEATPUMP:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;&#xD;
			companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.HYBRID_HEATPUMP);&#xD;
			break;&#xD;
&#xD;
		case ELECTRIC_HEATPUMP:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;&#xD;
			companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP);&#xD;
			break;&#xD;
		&#xD;
		case DISTRICT_HEATING:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.DISTRICTHEAT;&#xD;
			companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.DISTRICTHEAT);&#xD;
			break;&#xD;
		case COMBINED_HEAT_AND_POWER:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.GASFIRED_CHPPEAK;&#xD;
			companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.GASFIRED_CHPPEAK);&#xD;
			break;&#xD;
						&#xD;
		case OTHER:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;// Other is not supported by the model so: NONE.&#xD;
			companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.OTHER);&#xD;
			break;&#xD;
			&#xD;
		default:&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;&#xD;
			traceln("no or incorrect heating type detected for '" + companyGC.p_ownerID + "'");&#xD;
	}&#xD;
	i++;&#xD;
}&#xD;
&#xD;
//Null check for when list was empty&#xD;
if(companyGC.p_heatingType == null){&#xD;
	companyGC.p_heatingType = OL_GridConnectionHeatingType.NONE;&#xD;
}&#xD;
&#xD;
//Backup for when there is gas consumption, but no heating type that uses it&#xD;
if(	!companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER) &amp;&amp; &#xD;
	!companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASFIRED_CHPPEAK)){&#xD;
	if ((hasHourlyGasData || (gridConnection.getNaturalGas().getAnnualDelivery_m3() != null &amp;&amp; gridConnection.getNaturalGas().getAnnualDelivery_m3() &gt; 0))) {&#xD;
		companyGC.c_heatingTypes.add(OL_GridConnectionHeatingType.GASBURNER);&#xD;
		if(companyGC.c_heatingTypes.size() == 1){&#xD;
			companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
		}&#xD;
		traceln("Gas consumption detected for '" + companyGC.p_ownerID + "', setting heating type to GASBURNER");			&#xD;
	}&#xD;
}&#xD;
&#xD;
//Set correct primary heating method (p_heatingType) (needed for now, till model can support multiple heating types)&#xD;
if (companyGC.c_heatingTypes.size()&gt;1){&#xD;
	&#xD;
	if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.HYBRID_HEATPUMP)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;&#xD;
		return;&#xD;
	}&#xD;
	else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER) &amp;&amp; companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;&#xD;
		return;&#xD;
	}&#xD;
	else if (companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;&#xD;
		return;&#xD;
	}&#xD;
	else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
		return;&#xD;
	} &#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205827</Id>
						<Name>f_addElectricVehicle</Name>
						<X>821</X>
						<Y>351</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicle_type</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>isDefaultVehicle</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>annualTravelDistance_km</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>maxChargingPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double storageCapacity_kWh 		= 0;&#xD;
double energyConsumption_kWhpkm = 0;&#xD;
double capacityElectricity_kW 	= 0;&#xD;
double stateOfCharge_fr  		= 1; // Initial state of charge&#xD;
double timestep_h				= energyModel.p_timeStep_h;&#xD;
double vehicleScaling 			= 1.0;&#xD;
&#xD;
switch(vehicle_type){&#xD;
	&#xD;
	/*&#xD;
	case ELECTRIC_VEHICLE_COMUTERS: // ??? Hoe laad je andere laadprofielen in.?? Deze moet ander laadprofiel dan de Standaard Electric_vehicle &#xD;
		capacityElectricity_kW	= avgc_data.p_avgEVMaxChargePowerCar_kW;&#xD;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageCar_kWh;&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;&#xD;
	break;&#xD;
	*/&#xD;
	&#xD;
	case ELECTRIC_VEHICLE:&#xD;
		capacityElectricity_kW	= avgc_data.p_avgEVMaxChargePowerCar_kW;&#xD;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageCar_kWh;&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionCar_kWhpkm;&#xD;
	break;&#xD;
	&#xD;
	case ELECTRIC_VAN:&#xD;
		capacityElectricity_kW 	= avgc_data.p_avgEVMaxChargePowerVan_kW;&#xD;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageVan_kWh;&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionVan_kWhpkm;&#xD;
	break;&#xD;
	&#xD;
	case ELECTRIC_TRUCK:&#xD;
		capacityElectricity_kW	= avgc_data.p_avgEVMaxChargePowerTruck_kW;&#xD;
		storageCapacity_kWh		= avgc_data.p_avgEVStorageTruck_kWh;&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgEVEnergyConsumptionTruck_kWhpkm;&#xD;
	break;&#xD;
	&#xD;
}&#xD;
&#xD;
if (!isDefaultVehicle &amp;&amp; maxChargingPower_kW != 0){&#xD;
	capacityElectricity_kW	= maxChargingPower_kW;&#xD;
}&#xD;
&#xD;
&#xD;
//Create the EV vehicle energy asset with the set parameters + links&#xD;
J_EAEV electricVehicle = new J_EAEV(parentGC, capacityElectricity_kW, storageCapacity_kWh, stateOfCharge_fr, timestep_h, energyConsumption_kWhpkm, vehicleScaling, vehicle_type, null);	&#xD;
&#xD;
if (!isDefaultVehicle &amp;&amp; annualTravelDistance_km &gt; 1000){&#xD;
		electricVehicle.tripTracker.setAnnualDistance_km(annualTravelDistance_km);&#xD;
}&#xD;
else if (vehicle_type == OL_EnergyAssetType.ELECTRIC_VAN){&#xD;
		electricVehicle.tripTracker.setAnnualDistance_km(avgc_data.p_avgAnnualTravelDistanceVan_km);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205829</Id>
						<Name>f_addDieselVehicle</Name>
						<X>821</X>
						<Y>371</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicle_type</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>isDefaultVehicle</Name>
							<Type>Boolean</Type>
						</Parameter>
						<Parameter>
							<Name>annualTravelDistance_km</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double energyConsumption_kWhpkm = 0;&#xD;
double vehicleScaling = 1.0;&#xD;
&#xD;
//Diesel car&#xD;
switch (vehicle_type){&#xD;
	&#xD;
	case DIESEL_VEHICLE:&#xD;
		energyConsumption_kWhpkm = roundToDecimal(uniform(0.7, 1.3),2) * avgc_data.p_avgDieselConsumptionCar_kWhpkm;&#xD;
	break;&#xD;
	&#xD;
	case DIESEL_VAN:&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgDieselConsumptionVan_kWhpkm;&#xD;
		v_nbCreatedVans++;&#xD;
	break;&#xD;
	&#xD;
	case DIESEL_TRUCK:&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgDieselConsumptionTruck_kWhpkm;&#xD;
	break;&#xD;
}&#xD;
&#xD;
//Create EA&#xD;
J_EADieselVehicle dieselVehicle = new J_EADieselVehicle(parentGC, energyConsumption_kWhpkm, energyModel.p_timeStep_h, vehicleScaling, vehicle_type, null);&#xD;
&#xD;
//Set annual travel distance&#xD;
if (!isDefaultVehicle &amp;&amp; annualTravelDistance_km &gt; 1000){&#xD;
		dieselVehicle.tripTracker.setAnnualDistance_km(annualTravelDistance_km);&#xD;
}&#xD;
else if (vehicle_type == OL_EnergyAssetType.DIESEL_VAN){&#xD;
		dieselVehicle.tripTracker.setAnnualDistance_km(avgc_data.p_avgAnnualTravelDistanceVan_km);&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205831</Id>
						<Name>f_addStorage</Name>
						<X>821</X>
						<Y>331</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>storagePower_kw</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>storageCapacity_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>storageType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Body>J_EAStorage storage = null;&#xD;
&#xD;
switch (storageType){&#xD;
&#xD;
	case STORAGE_ELECTRIC:&#xD;
	&#xD;
		storage = new J_EAStorageElectric(parentGC, storagePower_kw, storageCapacity_kWh, 0, energyModel.p_timeStep_h);&#xD;
		//traceln("Battery with StorageCapacity_kWh: %s", storageCapacity_kWh);&#xD;
	break;&#xD;
	&#xD;
	case STORAGE_HEAT:&#xD;
		double lossFactor_WpK = 0; // For now no losses, waiting for new setup heating assets before this can be implemented correctly (its JEA_Building depedent)&#xD;
		double minTemperature_degC = avgc_data.p_avgMinHeatBufferTemperature_degC;&#xD;
		double maxTemperature_degC = avgc_data.p_avgMaxHeatBufferTemperature_degC;&#xD;
		double initialTemperature_degC = (minTemperature_degC + maxTemperature_degC) / 2;&#xD;
		double setTemperature_degC = initialTemperature_degC;&#xD;
		//double storageCapacity_kg = (storageCapacity_kWh*3.6e6)/(avgc_data.p_waterHeatCapacity_JpkgK * (maxTemperature_degC - minTemperature_degC));&#xD;
		//double heatCapacity_JpK = avgc_data.p_waterHeatCapacity_JpkgK * storageCapacity_kg;&#xD;
		//in short -&gt;&#xD;
		double heatCapacity_JpK = storageCapacity_kWh*3.6e6 / (maxTemperature_degC - minTemperature_degC); &#xD;
		new J_EAStorageHeat(parentGC, storageType, storagePower_kw, lossFactor_WpK, energyModel.p_timeStep_h, initialTemperature_degC, minTemperature_degC, maxTemperature_degC, setTemperature_degC, heatCapacity_JpK, OL_AmbientTempType.AMBIENT_AIR );&#xD;
			&#xD;
	break;&#xD;
	&#xD;
	case STORAGE_GAS:&#xD;
	&#xD;
	break;&#xD;
	&#xD;
	default:&#xD;
	&#xD;
	return;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205833</Id>
						<Name>f_iEAGenericCompanies</Name>
						<Description>Initialisation of the Energy assets using average values for companies that have not filled in the survey (yet) combined with totals (floor surface, electricity/yr, gas/yr and trucks)  of the simulated area.</Description>
						<X>450</X>
						<Y>388</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>companyGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>pv_installed_kwp</Name>
							<Type>Double</Type>
						</Parameter>
						<Body>//Create current &amp; future scenario parameter list&#xD;
J_scenario_Current current_scenario_list = new J_scenario_Current();&#xD;
zero_Interface.c_scenarioMap_Current.put(companyGC, current_scenario_list);&#xD;
&#xD;
J_scenario_Future future_scenario_list = new J_scenario_Future();&#xD;
zero_Interface.c_scenarioMap_Future.put(companyGC, future_scenario_list);&#xD;
&#xD;
//Set parent&#xD;
current_scenario_list.setParentAgent(companyGC);&#xD;
future_scenario_list.setParentAgent(companyGC);&#xD;
&#xD;
//Add current grid capacity to current (and future, feedin, physical, as no data on plans so assumption it is/stays the same) scenario list&#xD;
current_scenario_list.setCurrentContractDeliveryCapacity_kW(companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
future_scenario_list.setRequestedContractDeliveryCapacity_kW(companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
current_scenario_list.setCurrentContractFeedinCapacity_kW(companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
future_scenario_list.setRequestedContractFeedinCapacity_kW(companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
current_scenario_list.setCurrentPhysicalConnectionCapacity_kW(companyGC.v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
future_scenario_list.setRequestedPhysicalConnectionCapacity_kW(companyGC.v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
&#xD;
//Basic heating and electricity demand profiles&#xD;
if (companyGC.p_floorSurfaceArea_m2 &gt; 0){&#xD;
	&#xD;
	if(v_remainingElectricityDelivery_kWh &gt; 0){&#xD;
		//Buidling Base electricity load&#xD;
		double Remaining_electricity_demand_kWh_p_m2_yr = v_remainingElectricityDelivery_kWh / v_totalFloorAreaAnonymousCompanies_m2;&#xD;
		double yearlyElectricityDemand_kWh = Remaining_electricity_demand_kWh_p_m2_yr * companyGC.p_floorSurfaceArea_m2;&#xD;
		&#xD;
		//Add base load profile&#xD;
		f_addElectricityDemandProfile(companyGC, yearlyElectricityDemand_kWh, null, false, "default_office_electricity_demand_fr");&#xD;
	}&#xD;
	&#xD;
	if(v_remainingGasConsumption_m3 &gt; 0){&#xD;
		//Building Gas demand profile (purely heating)&#xD;
		double Remaining_gas_demand_m3_p_m2_yr = v_remainingGasConsumption_m3/v_totalFloorAreaAnonymousCompanies_m2;&#xD;
		double yearlyGasDemand_m3 = Remaining_gas_demand_m3_p_m2_yr*companyGC.p_floorSurfaceArea_m2;&#xD;
		double ratioGasUsedForHeating = 1;&#xD;
		&#xD;
		companyGC.p_heatingType = avgc_data.p_avgCompanyHeatingMethod; // Assuming all avg companies have GASBURNER.&#xD;
		//Add heat demand profile&#xD;
		f_addHeatDemandProfile(companyGC, yearlyGasDemand_m3, false, ratioGasUsedForHeating, "default_building_heat_demand_fr");&#xD;
	}&#xD;
	//Set current scenario heating type&#xD;
	current_scenario_list.setCurrentHeatingType(companyGC.p_heatingType);&#xD;
	future_scenario_list.setPlannedHeatingType(companyGC.p_heatingType);&#xD;
}&#xD;
&#xD;
&#xD;
//Production asset (PV) ??????????????????????????????????????????? willen we die toevoegen aan generieke bedrijven?&#xD;
if(pv_installed_kwp != null &amp;&amp; pv_installed_kwp &gt; 0){&#xD;
	f_addEnergyProduction(companyGC, OL_EnergyAssetType.PHOTOVOLTAIC, "Rooftop Solar", pv_installed_kwp);&#xD;
}&#xD;
&#xD;
&#xD;
//Battery with capacity 0 (initialize the slider)&#xD;
f_addStorage(companyGC, 0, 0, OL_EnergyAssetType.STORAGE_ELECTRIC);&#xD;
&#xD;
//add to scenario: current &amp; future&#xD;
current_scenario_list.setCurrentBatteryPower_kW(0f);&#xD;
current_scenario_list.setCurrentBatteryCapacity_kWh(0f);&#xD;
future_scenario_list.setPlannedBatteryPower_kW(0f);&#xD;
future_scenario_list.setPlannedBatteryCapacity_kWh(0f);&#xD;
&#xD;
	&#xD;
//Transport (total remaining cars, vans and trucks (total as defined in project selection - survey company usage)&#xD;
&#xD;
//Vans&#xD;
if(v_remainingNumberOfCars &gt; 0){&#xD;
	int nbCars = 0;&#xD;
	for (int k = 0; k&lt; ceil((double)v_remainingNumberOfCars/(double)v_numberOfCompaniesNoSurvey); k++){&#xD;
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VEHICLE, true, 0);&#xD;
		v_remainingNumberOfCars--;&#xD;
		nbCars++;&#xD;
	}&#xD;
	&#xD;
	//Set current scenario cars&#xD;
	current_scenario_list.setCurrentDieselCars(nbCars);&#xD;
	//Set planned scenario cars&#xD;
	future_scenario_list.setPlannedEVCars(0);&#xD;
}&#xD;
&#xD;
//Vans&#xD;
if(v_remainingNumberOfVans &gt; 0){&#xD;
	int nbVans = 0;&#xD;
	for (int k = 0; k&lt; ceil((double)v_remainingNumberOfVans/(double)v_numberOfCompaniesNoSurvey); k++){&#xD;
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VAN, true, 0);&#xD;
		v_remainingNumberOfVans--;&#xD;
		nbVans++;&#xD;
	}&#xD;
	&#xD;
	//Set current scenario vans&#xD;
	current_scenario_list.setCurrentDieselVans(nbVans);&#xD;
	//Set planned scenario vans&#xD;
	future_scenario_list.setPlannedEVVans(0);&#xD;
}&#xD;
&#xD;
//Trucks&#xD;
if (v_remainingNumberOfTrucks &gt; 0){&#xD;
	int nbTrucks=0;&#xD;
	for (int k = 0; k&lt; ceil((double)v_remainingNumberOfTrucks/(double)v_numberOfCompaniesNoSurvey); k++){&#xD;
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_TRUCK, true, 0);&#xD;
		v_remainingNumberOfTrucks--;&#xD;
		nbTrucks++;&#xD;
	}&#xD;
	&#xD;
	//Set current scenario trucks&#xD;
	current_scenario_list.setCurrentDieselTrucks(nbTrucks);&#xD;
	//Set planned scenario trucks&#xD;
	future_scenario_list.setPlannedEVTrucks(0);&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205835</Id>
						<Name>f_createRemainingBuildings</Name>
						<X>806.739</X>
						<Y>659</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//If remaining buildings in model, add to legend&#xD;
if(c_remainingBuilding_data.size()&gt;0){&#xD;
	zero_Interface.c_modelActiveDefaultGISBuildings.add(OL_GISBuildingTypes.REMAINING);&#xD;
}&#xD;
&#xD;
for (Building_data remainingBuilding_data : c_remainingBuilding_data) {&#xD;
	&#xD;
	GIS_Building building = energyModel.add_pop_GIS_Buildings();&#xD;
	building.p_id = remainingBuilding_data.building_id();&#xD;
	building.p_longitude = remainingBuilding_data.longitude();&#xD;
	building.p_latitude = remainingBuilding_data.latitude();&#xD;
	building.setLatLon(building.p_latitude, building.p_longitude);		&#xD;
	building.p_GISObjectType = OL_GISObjectType.REMAINING_BUILDING;&#xD;
	&#xD;
	//Building + styling the gisregion and putting it on the map		&#xD;
	building.gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(remainingBuilding_data.polygon(), building.p_GISObjectType));&#xD;
	&#xD;
	building.p_defaultFillColor = zero_Interface.v_restBuildingColor;&#xD;
	building.p_defaultLineColor = zero_Interface.v_restBuildingLineColor;&#xD;
	zero_Interface.f_styleAreas(building);&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205837</Id>
						<Name>f_addTransportHydrogen</Name>
						<X>821</X>
						<Y>391</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vehicle_type</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>isDefaultVehicle</Name>
							<Type>boolean</Type>
						</Parameter>
						<Parameter>
							<Name>annualTravelDistance_km</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double energyConsumption_kWhpkm = 0;&#xD;
double vehicleScaling = 1.0;&#xD;
&#xD;
//Hydrogen car&#xD;
switch (vehicle_type){&#xD;
&#xD;
	case HYDROGEN_VEHICLE:&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgHydrogenConsumptionCar_kWhpkm;&#xD;
	break;&#xD;
	&#xD;
	case HYDROGEN_VAN:&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgHydrogenConsumptionVan_kWhpkm;&#xD;
	break;&#xD;
	&#xD;
	case HYDROGEN_TRUCK:&#xD;
		energyConsumption_kWhpkm = avgc_data.p_avgHydrogenConsumptionTruck_kWhpkm;&#xD;
	break;&#xD;
}&#xD;
&#xD;
//Create EA&#xD;
J_EAHydrogenVehicle hydrogenVehicle = new J_EAHydrogenVehicle(parentGC, energyConsumption_kWhpkm, energyModel.p_timeStep_h, vehicleScaling, vehicle_type, null);&#xD;
&#xD;
//Set annual travel distance&#xD;
if (!isDefaultVehicle &amp;&amp; annualTravelDistance_km &gt; 1000){&#xD;
		hydrogenVehicle.tripTracker.setAnnualDistance_km(annualTravelDistance_km);&#xD;
}&#xD;
else if (vehicle_type == OL_EnergyAssetType.HYDROGEN_VAN){&#xD;
		hydrogenVehicle.tripTracker.setAnnualDistance_km(avgc_data.p_avgAnnualTravelDistanceVan_km);&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205845</Id>
						<Name>f_addChargingDemandProfile</Name>
						<X>821</X>
						<Y>191</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GC</Name>
							<Type>GCPublicCharger</Type>
						</Parameter>
						<Parameter>
							<Name>profileName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>J_EAProfile profile = new J_EAProfile(GC, OL_EnergyCarriers.ELECTRICITY, null, OL_ProfileAssetType.CHARGING, energyModel.p_timeStep_h);		&#xD;
profile.energyAssetName = "charging profile";&#xD;
List&lt;Double&gt; quarterlyEnergyDemand_kWh = selectValues(double.class, "SELECT " + profileName + " FROM charging_profiles;");			&#xD;
profile.a_energyProfile_kWh = quarterlyEnergyDemand_kWh.stream().mapToDouble(d -&gt; max(0,d)).map( d -&gt; d / 4).toArray();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>GISRegion</ReturnType>
						<Id>1726584205847</Id>
						<Name>f_createGISRegionChargingStation</Name>
						<X>807.621</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>lat</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>lon</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//create shape Coords&#xD;
int nb_points = 6;&#xD;
double[] GISCoords = new double[nb_points * 2];&#xD;
&#xD;
for (int i=0; i &lt; nb_points ; i++){&#xD;
	double size = 0.00004;&#xD;
	GISCoords[i * 2] = size * cos( i * ( 2 * Math.PI ) / nb_points) + lat;&#xD;
	GISCoords[i * 2 + 1] = 1.64 * size * sin( i * ( 2 * Math.PI ) / nb_points) + lon;&#xD;
}&#xD;
&#xD;
//Create the region&#xD;
GISRegion gisregion = zero_Interface.f_createGISObject( GISCoords );&#xD;
&#xD;
return gisregion;&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205849</Id>
						<Name>f_createChargingStations</Name>
						<X>431</X>
						<Y>751</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Initialize parameters&#xD;
int laadpaal_nr = 1;&#xD;
int laadstation_nr = 1;&#xD;
&#xD;
//Loop over charging stations&#xD;
for (Chargingstation_data dataChargingStation : f_getChargingstationsInSubScope(c_chargingstation_data)){&#xD;
&#xD;
	GCPublicCharger chargingStation = energyModel.add_PublicChargers();&#xD;
&#xD;
	chargingStation.set_p_gridConnectionID( dataChargingStation.gc_id());&#xD;
	chargingStation.set_p_name( dataChargingStation.gc_name() );&#xD;
	&#xD;
	//Electric Capacity&#xD;
	if (dataChargingStation.connection_capacity_kw() != null) {&#xD;
		// Assume the connection capacity is both physical and contracted.&#xD;
		chargingStation.v_liveConnectionMetaData.physicalCapacity_kW = dataChargingStation.connection_capacity_kw();&#xD;
		chargingStation.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = dataChargingStation.connection_capacity_kw();&#xD;
		chargingStation.v_liveConnectionMetaData.physicalCapacityKnown = true;&#xD;
		chargingStation.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = true;&#xD;
	}&#xD;
	&#xD;
	chargingStation.set_p_heatingType( OL_GridConnectionHeatingType.NONE );&#xD;
	&#xD;
	//Set parent node&#xD;
	chargingStation.p_parentNodeElectricID = dataChargingStation.gridnode_id();&#xD;
	&#xD;
	//Is active at start?&#xD;
	chargingStation.v_isActive = dataChargingStation.initially_active();&#xD;
&#xD;
	//Set charging attitude: MAX_POWER should always be the starting case for charge stations to prevent more charging than possible&#xD;
	chargingStation.set_p_chargingAttitudeVehicles(OL_ChargingAttitude.MAX_SPREAD);&#xD;
			&#xD;
	//Create and connect owner&#xD;
	ConnectionOwner owner = energyModel.add_pop_connectionOwners();&#xD;
&#xD;
	chargingStation.set_p_ownerID( dataChargingStation.owner_id());				&#xD;
	owner.set_p_actorID( chargingStation.p_ownerID );&#xD;
	owner.set_p_actorType( OL_ActorType.CONNECTIONOWNER );&#xD;
	owner.set_p_connectionOwnerType( OL_ConnectionOwnerType.CHARGEPOINT_OP );&#xD;
	owner.b_dataSharingAgreed = true;&#xD;
	&#xD;
	chargingStation.set_p_owner( owner );&#xD;
	&#xD;
	&#xD;
	//Check if centre or single&#xD;
	chargingStation.p_isChargingCentre = dataChargingStation.is_charging_centre();&#xD;
	if (chargingStation.p_isChargingCentre) {&#xD;
		&#xD;
		if (chargingStation.p_ownerID == null){&#xD;
			chargingStation.p_ownerID = "Publiek laadstation " + laadstation_nr;&#xD;
			laadstation_nr++;&#xD;
		}&#xD;
&#xD;
		chargingStation.set_p_nbOfChargers( dataChargingStation.number_of_chargers() );&#xD;
		chargingStation.set_p_maxChargingPower_kW( dataChargingStation.power_per_charger_kw() );&#xD;
		&#xD;
		//If check on connection capacity to prevent more charging than possible&#xD;
		if(chargingStation.v_liveConnectionMetaData.contractedDeliveryCapacity_kW &gt; chargingStation.p_nbOfChargers*chargingStation.p_maxChargingPower_kW){&#xD;
			chargingStation.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = chargingStation.p_nbOfChargers*chargingStation.p_maxChargingPower_kW;&#xD;
		}&#xD;
		&#xD;
		//Set vehicle type&#xD;
		chargingStation.p_chargingVehicleType = dataChargingStation.vehicle_type();		&#xD;
		&#xD;
		//Create vehicles that charge at the charging centre&#xD;
		if(chargingStation.p_chargingVehicleType == OL_EnergyAssetType.CHARGER){&#xD;
			List&lt;J_ChargingSession&gt; chargerProfile = f_getChargerProfile();&#xD;
			boolean V1GCapable = randomTrue(avgc_data.p_v1gProbability);&#xD;
			boolean V2GCapable = randomTrue(avgc_data.p_v2gProbability);&#xD;
			new J_EACharger(chargingStation, chargingStation.p_maxChargingPower_kW, energyModel.p_timeStep_h, chargerProfile, V1GCapable, V2GCapable);&#xD;
		}&#xD;
		else{&#xD;
			for(int k = 0; k &lt; chargingStation.p_nbOfChargers*avgc_data.p_avgVehiclesPerChargePoint; k++ ){&#xD;
				f_addElectricVehicle(chargingStation, chargingStation.p_chargingVehicleType, true, 0, chargingStation.p_maxChargingPower_kW);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		if (dataChargingStation.polygon() != null) {&#xD;
			//Create EA GIS object (building) for the charging centre&#xD;
			GIS_Object area = f_createGISObject( dataChargingStation.gc_name(), dataChargingStation.latitude(), dataChargingStation.longitude(), dataChargingStation.polygon(), OL_GISObjectType.CHARGER );&#xD;
			&#xD;
			//Set gis object type&#xD;
			area.p_GISObjectType = OL_GISObjectType.CHARGER;&#xD;
			&#xD;
			//Add to collections&#xD;
			area.c_containedGridConnections.add(chargingStation);&#xD;
			chargingStation.c_connectedGISObjects.add(area);&#xD;
			&#xD;
			//Style building&#xD;
			area.set_p_defaultFillColor( zero_Interface.v_chargingStationColor );&#xD;
			area.set_p_defaultLineColor( zero_Interface.v_chargingStationLineColor );&#xD;
			area.set_p_defaultLineWidth( zero_Interface.v_energyAssetLineWidth);&#xD;
			zero_Interface.f_styleAreas(area);&#xD;
		}&#xD;
		else{&#xD;
			traceln("No gisobject created for charge centre: " + chargingStation.p_name);&#xD;
		}&#xD;
	}&#xD;
	else {&#xD;
&#xD;
		if (chargingStation.p_ownerID == null){&#xD;
			chargingStation.p_ownerID = "Publieke laadpaal " + laadpaal_nr;&#xD;
			laadpaal_nr++;&#xD;
		}&#xD;
		&#xD;
		//Set charging power&#xD;
		chargingStation.set_p_maxChargingPower_kW( dataChargingStation.power_per_charger_kw() );&#xD;
		&#xD;
		//Set vehicle type&#xD;
		chargingStation.p_chargingVehicleType = dataChargingStation.vehicle_type();		&#xD;
		&#xD;
		//Create vehicles that charge at the charging station&#xD;
		if(chargingStation.p_chargingVehicleType == OL_EnergyAssetType.CHARGER){&#xD;
			List&lt;J_ChargingSession&gt; chargerProfile = f_getChargerProfile();&#xD;
			boolean V1GCapable = randomTrue(avgc_data.p_v1gProbability);&#xD;
			boolean V2GCapable = randomTrue(avgc_data.p_v2gProbability);&#xD;
			new J_EACharger(chargingStation, chargingStation.p_maxChargingPower_kW, energyModel.p_timeStep_h, chargerProfile, V1GCapable, V2GCapable);&#xD;
		}&#xD;
		else{&#xD;
			for(int k = 0; k &lt; avgc_data.p_avgVehiclesPerChargePoint; k++ ){&#xD;
				f_addElectricVehicle(chargingStation, chargingStation.p_chargingVehicleType, true, 0, chargingStation.p_maxChargingPower_kW);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//Create GIS object for the chargingStation			&#xD;
		GIS_Object area = energyModel.add_pop_GIS_Objects();&#xD;
&#xD;
		//position and coordinates&#xD;
		area.p_latitude = dataChargingStation.latitude();&#xD;
		area.p_longitude = dataChargingStation.longitude();&#xD;
		area.setLatLon(area.p_latitude, area.p_longitude);		&#xD;
		&#xD;
		//Create gisregion&#xD;
		area.gisRegion = f_createGISRegionChargingStation( area.p_latitude, area.p_longitude );	&#xD;
		&#xD;
		//Set area type&#xD;
		area.p_GISObjectType = OL_GISObjectType.CHARGER;&#xD;
	&#xD;
		chargingStation.c_connectedGISObjects.add(area);&#xD;
		area.c_containedGridConnections.add(chargingStation);&#xD;
		if(chargingStation.v_isActive){&#xD;
			area.set_p_defaultFillColor( zero_Interface.v_chargingStationColor );&#xD;
			area.set_p_defaultLineColor( zero_Interface.v_chargingStationLineColor );&#xD;
		}&#xD;
		else{&#xD;
			area.set_p_defaultFillColor( zero_Interface.v_newChargingStationColor );&#xD;
			area.set_p_defaultLineColor( zero_Interface.v_newChargingStationLineColor );&#xD;
		}&#xD;
		zero_Interface.f_styleAreas(area);&#xD;
	&#xD;
		zero_Interface.c_modelActiveSpecialGISObjects.add(area.p_GISObjectType);&#xD;
	}	&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205853</Id>
						<Name>f_createInterface</Name>
						<X>30</X>
						<Y>950</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//OVERRIDE THE zero_Interface parameter here&#xD;
//zero_Interface = YOUR INTERFACE;&#xD;
&#xD;
//Set parameters/pointers in the interface&#xD;
zero_Interface.energyModel = energyModel;&#xD;
zero_Interface.uI_Results.energyModel = energyModel;&#xD;
zero_Interface.p_selectedProjectType = project_data.project_type();&#xD;
zero_Interface.settings = settings;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205859</Id>
						<Name>f_createGISCables</Name>
						<X>807.621</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create cables&#xD;
for (Cable_data dataCable : c_cable_data) {&#xD;
	if(dataCable.line().contains("Multi")){&#xD;
		continue;&#xD;
	}&#xD;
	zero_Interface.f_createGISLine(f_createGISObjectsTokens(dataCable.line(), dataCable.type()), dataCable.type());&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205861</Id>
						<Name>f_createPreprocessedElectricityProfile_PV</Name>
						<Description>Principe:
verbruik = levering + productie - teruglevering</Description>
						<X>840</X>
						<Y>131</Y>
						<Label>
							<X>9</X>
							<Y>-1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyElectricityDelivery_kWh</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyElectricityFeedin_kWh</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyElectricityProduction_kWh</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>pvPower_kW</Name>
							<Type>Double</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyHeatPumpElectricityConsumption_kWh</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>//Create the profile &#xD;
J_EAProfile profile = new J_EAProfile(parentGC, OL_EnergyCarriers.ELECTRICITY, null, OL_ProfileAssetType.ELECTRICITYBASELOAD, energyModel.p_timeStep_h);		&#xD;
profile.setStartTime_h(v_simStartHour_h);&#xD;
profile.energyAssetName = parentGC.p_ownerID + " custom profile";&#xD;
double extraConsumption_kWh = 0;&#xD;
&#xD;
//Initialize parameters		&#xD;
double nettDelivery_kWh;&#xD;
&#xD;
//Preprocessing and adding new array to the J_EAProfile&#xD;
if (yearlyElectricityProduction_kWh != null &amp;&amp; yearlyElectricityFeedin_kWh != null) { // When delivery, feedin and production profiles are available&#xD;
	double[] yearlyElectricityConsumption_kWh = new double[yearlyElectricityDelivery_kWh.length];&#xD;
	for (int i = 0; i &lt; yearlyElectricityDelivery_kWh.length; i++) {	&#xD;
		yearlyElectricityConsumption_kWh[i] = yearlyElectricityDelivery_kWh[i] - yearlyElectricityFeedin_kWh[i] + yearlyElectricityProduction_kWh[i];&#xD;
		extraConsumption_kWh += -min(yearlyElectricityConsumption_kWh[i],0);&#xD;
		yearlyElectricityConsumption_kWh[i] = max(0,yearlyElectricityConsumption_kWh[i]);&#xD;
	}&#xD;
	profile.a_energyProfile_kWh = yearlyElectricityConsumption_kWh;&#xD;
	nettDelivery_kWh = Arrays.stream(yearlyElectricityDelivery_kWh).sum() - Arrays.stream(yearlyElectricityFeedin_kWh).sum();&#xD;
	//traceln("Calculating consumption profile on delivery, feedin and production profiles for company %s with %s kWp PV", parentGC.p_gridConnectionID, pvPower_kW);&#xD;
} else if (pvPower_kW != null &amp;&amp; pvPower_kW &gt; 0) { // When only delivery, feedin profiles are available, in addition to PV power, make explicit consumption and production arrays using delivery profile and PV installed power [kW]&#xD;
	double[] yearlyElectricityConsumption_kWh = new double[yearlyElectricityDelivery_kWh.length];&#xD;
	if (yearlyElectricityFeedin_kWh != null) { // Terugleveringsdata beschikbaar&#xD;
		//traceln("Estimating electricity consumption based on delivery and feedin profiles with pv power estimate for company %s with %s kWp PV", parentGC.p_gridConnectionID, pvPower_kW);&#xD;
		double addedConsumption_kWh = 0;&#xD;
		for (int i = 0; i &lt; yearlyElectricityDelivery_kWh.length; i++) {&#xD;
			double pvPowerEstimate_kW = pvPower_kW * energyModel.pp_PVProduction35DegSouth_fr.getValue(v_simStartHour_h+i*0.25);&#xD;
			double estimatedConsumption_kWh = yearlyElectricityDelivery_kWh[i] + max(0, pvPowerEstimate_kW*0.25 - yearlyElectricityFeedin_kWh[i]);&#xD;
			addedConsumption_kWh += max(0, pvPowerEstimate_kW*0.25 - yearlyElectricityFeedin_kWh[i]);&#xD;
			yearlyElectricityConsumption_kWh[i] = max(0,estimatedConsumption_kWh);&#xD;
		}&#xD;
		//traceln("Added electricity consumed compared to delivery profile: %s MWh", addedConsumption_kWh/1000);&#xD;
	} else { // Zonder terugleveringsdata, alleen afname&#xD;
		traceln("Estimating electricity consumption based on delivery profile and pv power for company %s with %s kWp PV", parentGC.p_gridConnectionID, pvPower_kW);&#xD;
		double pvPowerEstimate_kW = 0;&#xD;
		double estimatedConsumption_kWh = 0;&#xD;
		double addedConsumption_kWh = 0;&#xD;
		for (int i = 0; i &lt; yearlyElectricityDelivery_kWh.length; i++) {&#xD;
			pvPowerEstimate_kW = pvPower_kW * energyModel.pp_PVProduction35DegSouth_fr.getValue(v_simStartHour_h+i*0.25);&#xD;
			&#xD;
			if (yearlyElectricityDelivery_kWh[i] != 0) { // Only update consumption if delivery is non-zero, otherwise hold previously estimated consumption constant&#xD;
				estimatedConsumption_kWh = yearlyElectricityDelivery_kWh[i] + pvPowerEstimate_kW*0.25;&#xD;
				//addedConsumption_kWh += pvPowerEstimate_kW * 0.25;&#xD;
			} else {&#xD;
				estimatedConsumption_kWh = min(pvPowerEstimate_kW*0.25, estimatedConsumption_kWh); // Take minimum to prevent to much consumption when there is not enough sun in model sun, compared to real sun data!!&#xD;
				&#xD;
				//addedConsumption_kWh += max(0, estimatedConsumption_kWh - pvPowerEstimate_kW*0.25);//* 0.25;&#xD;
			}&#xD;
			yearlyElectricityConsumption_kWh[i] = max(0,estimatedConsumption_kWh);&#xD;
		}&#xD;
		//traceln("Added electricity consumed compared to delivery profile: %s MWh", addedConsumption_kWh/1000);&#xD;
	}&#xD;
	profile.a_energyProfile_kWh = yearlyElectricityConsumption_kWh;&#xD;
	nettDelivery_kWh = Arrays.stream(yearlyElectricityDelivery_kWh).sum();&#xD;
} else { // No PV production&#xD;
	profile.a_energyProfile_kWh = yearlyElectricityDelivery_kWh;&#xD;
	nettDelivery_kWh = Arrays.stream(yearlyElectricityDelivery_kWh).sum();&#xD;
}&#xD;
//traceln(Arrays.stream(profile.a_energyProfile_kWh).sum() + " kWh per jaar at grid connection " + parentGC.p_ownerID + " " + profileName);&#xD;
v_remainingElectricityDelivery_kWh -= nettDelivery_kWh;&#xD;
&#xD;
if (extraConsumption_kWh &gt; 1) {&#xD;
	traceln("Preprocessing of delivery and production data led to negative consumption of: %s kWh", extraConsumption_kWh);&#xD;
	traceln("Consumption profile was capped to 0kW");&#xD;
}&#xD;
 &#xD;
if (v_remainingElectricityDelivery_kWh &lt; 0){&#xD;
	traceln("v_remainingElectricityDelivery_kWh became negative at GC: %s", parentGC);&#xD;
}&#xD;
&#xD;
if(yearlyHeatPumpElectricityConsumption_kWh != null){&#xD;
	for(int i = 0; i &lt; yearlyHeatPumpElectricityConsumption_kWh.length; i++){&#xD;
		yearlyHeatPumpElectricityConsumption_kWh[i] = max(0,yearlyHeatPumpElectricityConsumption_kWh[i]);&#xD;
	}&#xD;
	double[] preProcessedDefaultConsumptionProfile = new double[profile.a_energyProfile_kWh.length];&#xD;
	for(int i = 0; i &lt; preProcessedDefaultConsumptionProfile.length; i++){&#xD;
		preProcessedDefaultConsumptionProfile[i] = max(0,profile.a_energyProfile_kWh[i] - yearlyHeatPumpElectricityConsumption_kWh[i]);&#xD;
	}&#xD;
	profile.a_energyProfile_kWh = preProcessedDefaultConsumptionProfile;&#xD;
	&#xD;
	J_EAProfile profileHeatPumpElectricityConsumption = new J_EAProfile(parentGC, OL_EnergyCarriers.ELECTRICITY, yearlyHeatPumpElectricityConsumption_kWh, OL_ProfileAssetType.HEATPUMP_ELECTRICITY_CONSUMPTION, energyModel.p_timeStep_h);		&#xD;
	profileHeatPumpElectricityConsumption.setStartTime_h(v_simStartHour_h);&#xD;
	profileHeatPumpElectricityConsumption.energyAssetName = parentGC.p_ownerID + " custom heat pump electricity consumption profile";&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205865</Id>
						<Name>f_startUpLoader_default</Name>
						<X>60</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("---------------------------");&#xD;
traceln("======= STARTING UP =======");&#xD;
traceln("---------------------------");&#xD;
traceln("");&#xD;
&#xD;
double startTime = System.currentTimeMillis();&#xD;
v_timeOfModelStart_ms = startTime;&#xD;
//v_hourOfYearStart= avgc_data.hourOfYearPerMonth[getMonth()] + (getDayOfMonth()-1)*24;&#xD;
&#xD;
//Send avgc data to engine&#xD;
avgc_data.f_setAVGC_data();&#xD;
&#xD;
//Import excel data to the anylogic database&#xD;
f_importExcelTablesToDB();&#xD;
&#xD;
//Fill the record collections&#xD;
f_readDatabase();&#xD;
&#xD;
//Weather market data&#xD;
f_setEngineProfiles();&#xD;
&#xD;
//Create the project interface&#xD;
f_createInterface();&#xD;
&#xD;
//Project specific styling (Needs to happen before configuring the engine)&#xD;
zero_Interface.f_projectSpecificStyling();&#xD;
&#xD;
// Populate the model&#xD;
f_configureEngine_default();&#xD;
&#xD;
//send the GIS map centre location to the Interface &#xD;
zero_Interface.map_centre_latitude = project_data.map_centre_latitude();&#xD;
zero_Interface.map_centre_longitude = project_data.map_centre_longitude();&#xD;
zero_Interface.map_scale = project_data.map_scale();&#xD;
&#xD;
//Start up of the User Interface (Needs to happen after configuring the engine)&#xD;
zero_Interface.f_UIStartup();&#xD;
&#xD;
//Ending of the start up&#xD;
double endTime = System.currentTimeMillis();&#xD;
double duration = endTime - startTime;&#xD;
v_modelStartUpDuration_s = roundToDecimal(duration / 1000, 3);&#xD;
&#xD;
traceln(" ");&#xD;
traceln("*** Start up finished *** ");&#xD;
traceln("*** Start up duration: "+ v_modelStartUpDuration_s + " s ***");&#xD;
traceln(" ");&#xD;
&#xD;
&#xD;
//Simulate full year simulation for initial KPIs&#xD;
if( settings.runHeadlessAtStartup() ){&#xD;
	energyModel.f_runRapidSimulation(); // Do a full year run to have KPIs right away!&#xD;
	zero_Interface.gr_simulateYearScreenSmall.setVisible(false);&#xD;
	zero_Interface.gr_loadIconSmall.setVisible(false);&#xD;
	zero_Interface.b_resultsUpToDate = true;&#xD;
	zero_Interface.uI_Results.f_enableNonLivePlotRadioButtons(true);&#xD;
}&#xD;
else {&#xD;
		zero_Interface.f_resetSettings();&#xD;
}&#xD;
&#xD;
//Clear all data record collections after loader is done&#xD;
f_clearDataRecords();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205867</Id>
						<Name>f_readDatabase</Name>
						<X>-390</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Override this function and:&#xD;
//Fill the data parameters and collections using your own functions here</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205869</Id>
						<Name>f_clearDataRecords</Name>
						<X>-390</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Function used to clear all data record collections after the loader is done&#xD;
//-&gt; no longer needed, by clearing it is send to the garbage collector -&gt; saves memory&#xD;
&#xD;
/*&#xD;
genericProfiles_data = null;&#xD;
c_GridNode_data.clear();&#xD;
c_SurveyCompanyBuilding_data.clear();&#xD;
c_GenericCompanyBuilding_data.clear();&#xD;
c_HouseBuilding_data.clear();&#xD;
c_remainingBuilding_data.clear();&#xD;
c_Solarfarm_data.clear();&#xD;
c_Windfarm_data.clear();&#xD;
c_Electrolyser_data.clear();&#xD;
c_Battery_data.clear();&#xD;
c_Chargingstation_data.clear();&#xD;
c_Neighbourhood_data.clear();&#xD;
c_Parcel_data.clear();&#xD;
c_Cable_data_LV.clear();&#xD;
c_Cable_data_MV.clear();&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205871</Id>
						<Name>f_createSurveyCompanies_Excel</Name>
						<X>430</X>
						<Y>338</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Survey companies excel should be overridden with your own code");</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205873</Id>
						<Name>f_createCompanies</Name>
						<X>420</X>
						<Y>130</Y>
						<Label>
							<X>11</X>
							<Y>1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create survey companies based on survey inload structure&#xD;
switch(project_data.survey_type()){&#xD;
	&#xD;
	case ZORM:&#xD;
		f_createSurveyCompanies_Zorm();&#xD;
		break;&#xD;
	&#xD;
	case EXCEL:&#xD;
		f_createSurveyCompanies_Excel();&#xD;
		break;&#xD;
}&#xD;
&#xD;
//Create generic companies&#xD;
f_createGenericCompanies();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726584205881</Id>
						<Name>f_createAdditionalGISObjects</Name>
						<X>90</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Area outlines&#xD;
f_createGISRegionOutline();&#xD;
&#xD;
//Parking spaces&#xD;
f_createParkingSpots();&#xD;
&#xD;
//Parcels&#xD;
f_createGISParcels();&#xD;
&#xD;
//Remaining buildings (no GC or EA)&#xD;
f_createRemainingBuildings();&#xD;
&#xD;
//Cables&#xD;
f_createGISCables();</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1727792666396</Id>
						<Name>f_overwriteSpecificDatabaseValues</Name>
						<X>-390</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//SHOULD BE OVERRIDDEN&#xD;
&#xD;
//Function used to overwrite specific database values after the databases have been loaded in&#xD;
//Usecases for example are adjusting floor surface area to 0, to cause no consumption, etc.&#xD;
// --&gt; without the loss of data in your database sources itself&#xD;
&#xD;
//Example code&#xD;
/*&#xD;
//Adjust building floor surface area to 0 to cause no consumption (empty buildings)&#xD;
&#xD;
List&lt;String&gt; buildingIDS = new ArrayList&lt;String&gt;();&#xD;
&#xD;
// Define the building ids that need to have no consumption&#xD;
String buildingID_XXXX = "XXXX";&#xD;
&#xD;
buildingIDS.add(buildingID_XXXX);&#xD;
&#xD;
&#xD;
for(String buildingID : buildingIDS){&#xD;
	update(buildings)&#xD;
  	.where(buildings.building_id.eq(buildingID))&#xD;
  	.set(buildings.cumulative_floor_surface_m2, 0.0)&#xD;
  	.execute();&#xD;
}&#xD;
*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double[]</ReturnType>
						<Id>1728035809860</Id>
						<Name>f_convertFloatArrayToDoubleArray</Name>
						<X>1560</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>floatArray</Name>
							<Type>float[]</Type>
						</Parameter>
						<Body>if (floatArray == null) {&#xD;
        return null;&#xD;
}&#xD;
double[] doubleArray = new double[floatArray.length];&#xD;
for (int i = 0; i &lt; floatArray.length; i++) {&#xD;
    doubleArray[i] = floatArray[i];&#xD;
}&#xD;
return doubleArray;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1728039545686</Id>
						<Name>f_getPreprocessedElectricityConsumptionTotal</Name>
						<X>840</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>annualElectricityDelivery_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>annualElectricityFeedin_kWh</Name>
							<Type>Integer</Type>
						</Parameter>
						<Parameter>
							<Name>annualElectricityProduction_kWh</Name>
							<Type>Integer</Type>
						</Parameter>
						<Parameter>
							<Name>pvPower_kW</Name>
							<Type>Double</Type>
						</Parameter>
						<Body>double annualElectricityConsumption_kWh = 0;&#xD;
if(annualElectricityFeedin_kWh != null){&#xD;
	if(annualElectricityProduction_kWh != null){&#xD;
		annualElectricityConsumption_kWh = annualElectricityDelivery_kWh - annualElectricityFeedin_kWh + annualElectricityProduction_kWh;&#xD;
	}&#xD;
	else if(pvPower_kW != null &amp;&amp; pvPower_kW &gt; 0){&#xD;
		annualElectricityConsumption_kWh = annualElectricityDelivery_kWh - annualElectricityFeedin_kWh + pvPower_kW*avgc_data.p_avgFullLoadHoursPV_hr;&#xD;
	}&#xD;
	else{//Geen opwek&#xD;
		annualElectricityConsumption_kWh = annualElectricityDelivery_kWh;&#xD;
	}&#xD;
}&#xD;
else if(pvPower_kW != null &amp;&amp; pvPower_kW &gt; 0){&#xD;
	//WAT HIER?? Voor nu consumption = delivery&#xD;
	//Maar: moet preprocessing van standaard profiel worden, waar gelijktijdigheid gecheckt wordt!&#xD;
	annualElectricityConsumption_kWh = annualElectricityDelivery_kWh;&#xD;
}&#xD;
else{&#xD;
	annualElectricityConsumption_kWh = annualElectricityDelivery_kWh;&#xD;
}&#xD;
return annualElectricityConsumption_kWh;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1732112209863</Id>
						<Name>f_createCustomPVAsset</Name>
						<X>820</X>
						<Y>310</Y>
						<Label>
							<X>9</X>
							<Y>-1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyElectricityProduction_kWh</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>pvPower_kW</Name>
							<Type>Double</Type>
						</Parameter>
						<Body>if (yearlyElectricityProduction_kWh.length != 35040) {&#xD;
	traceln("Skipping creation of PV asset: need 35040 data points, got %d", yearlyElectricityProduction_kWh.length);&#xD;
	return;&#xD;
}&#xD;
&#xD;
// Generate custom PV production asset using production data!&#xD;
double[] a_arguments = IntStream.range(0, 35040).mapToDouble(i -&gt; v_simStartHour_h + i*0.25).toArray(); // time axis&#xD;
&#xD;
// From kWh/quarter to normalized power&#xD;
double totalProduction_kWh = Arrays.stream(yearlyElectricityProduction_kWh).sum();&#xD;
double fullLoadHours_h = totalProduction_kWh / pvPower_kW;&#xD;
double[] a_normalizedPower_fr = Arrays.stream(yearlyElectricityProduction_kWh).map(i -&gt; 4 * i / totalProduction_kWh * fullLoadHours_h ).toArray();&#xD;
&#xD;
//traceln("Full load hours of a_normalizedPower_fr %s: ", Arrays.stream(a_normalizedPower_fr).sum()/4);&#xD;
//traceln("Max of a_normalizedPower_fr %s: ", Arrays.stream(a_normalizedPower_fr).max());&#xD;
&#xD;
TableFunction tf_customPVproduction_fr = new TableFunction(a_arguments, a_normalizedPower_fr, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);&#xD;
J_ProfilePointer profilePointer = new J_ProfilePointer((parentGC.p_ownerID + "_PVproduction") , tf_customPVproduction_fr);&#xD;
energyModel.f_addProfile(profilePointer);&#xD;
J_EAProduction production_asset = new J_EAProduction(parentGC, OL_EnergyAssetType.PHOTOVOLTAIC, (parentGC.p_ownerID + "_rooftopPV"), OL_EnergyCarriers.ELECTRICITY, (double)pvPower_kW, energyModel.p_timeStep_h, profilePointer);&#xD;
&#xD;
traceln("Custom PV asset added to GC: " + parentGC.p_ownerID);&#xD;
//traceln("Custom PV asset added to %s with installed power %s kW and %s full load hours!", parentGC.p_ownerID, pvPower_kW, fullLoadHours_h);&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1732112244908</Id>
						<Name>f_iEASurveyCompanies_Zorm</Name>
						<X>448</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>companyGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>gridConnection</Name>
							<Type>com.zenmo.zummon.companysurvey.GridConnection</Type>
						</Parameter>
						<Body>//Initialize boolean that sets the creation of currently existing electric (demand) EA&#xD;
boolean createElectricEA = true;&#xD;
final int targetYear = 2023;&#xD;
&#xD;
&#xD;
//Create current scenario parameter list&#xD;
J_scenario_Current current_scenario_list = new J_scenario_Current();&#xD;
zero_Interface.c_scenarioMap_Current.put(companyGC, current_scenario_list);&#xD;
&#xD;
//Create future scenario parameter list&#xD;
J_scenario_Future future_scenario_list = new J_scenario_Future();&#xD;
zero_Interface.c_scenarioMap_Future.put(companyGC, future_scenario_list);&#xD;
&#xD;
&#xD;
&#xD;
//Get PV power (used for preprocessing and estimating grid capacity if unknown)&#xD;
Double pvPower_kW = (gridConnection.getSupply().getPvInstalledKwp() != null) ? new Double(gridConnection.getSupply().getPvInstalledKwp()) : null;&#xD;
&#xD;
&#xD;
////Electricity (connection and consumption)&#xD;
//Initialize contract capacity with 0 for when companies fill in survey already but currently have no connection yet&#xD;
companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = 0.0;&#xD;
companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = 0.0;&#xD;
companyGC.v_liveConnectionMetaData.physicalCapacity_kW = 0.0;&#xD;
&#xD;
f_createDieselTractors(companyGC, gridConnection.getTransport().getAgriculture());&#xD;
&#xD;
//Check for electricity connection and data&#xD;
if (gridConnection.getElectricity().getHasConnection()){&#xD;
	&#xD;
	if ((gridConnection.getElectricity().getContractedConnectionCapacityKw() == null || &#xD;
		gridConnection.getElectricity().getContractedConnectionCapacityKw() &lt;= 0) &amp;&amp;&#xD;
		(gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw() == null || &#xD;
		gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw() &lt;= 0)) {&#xD;
		&#xD;
		traceln("SURVEYOWNER HAS NOT FILLED IN CONNECTION CAPACITY!!! AVG values taken");&#xD;
		companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;&#xD;
		companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;&#xD;
		companyGC.v_liveConnectionMetaData.physicalCapacity_kW = avgc_data.p_avgUtilityConnectionCapacity_kW;&#xD;
		&#xD;
		companyGC.v_liveConnectionMetaData.physicalCapacityKnown = false;&#xD;
		companyGC.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
		companyGC.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
	}&#xD;
	else{&#xD;
	&#xD;
		if(gridConnection.getElectricity().getContractedConnectionCapacityKw() != null &amp;&amp; gridConnection.getElectricity().getContractedConnectionCapacityKw() &gt; 0){&#xD;
			companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = gridConnection.getElectricity().getContractedConnectionCapacityKw(); //Contracted connection capacity&#xD;
			companyGC.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = true;&#xD;
		}&#xD;
		else{&#xD;
			companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = ((double)gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw()); //Contracted connection capacity&#xD;
			companyGC.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		//Check if contract capacity feedin has been filled in: if not, make the same as pv capacity&#xD;
		if(gridConnection.getElectricity().getGrootverbruik().getContractedConnectionSupplyCapacityKw() != null &amp;&amp; gridConnection.getElectricity().getGrootverbruik().getContractedConnectionSupplyCapacityKw() &gt; 0){&#xD;
			companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = ((double)gridConnection.getElectricity().getGrootverbruik().getContractedConnectionSupplyCapacityKw()); //Contracted connection capacity&#xD;
			companyGC.v_liveConnectionMetaData.contractedFeedinCapacityKnown = true;&#xD;
		}&#xD;
		else{&#xD;
			if(pvPower_kW != null){&#xD;
				companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = pvPower_kW;&#xD;
			}&#xD;
			else{&#xD;
				companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = 0.0;&#xD;
			}&#xD;
			companyGC.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
		}&#xD;
		&#xD;
		//Check if physical capacity has been filled in: if not, make the same as maximum of contract delivery and feedin&#xD;
		if(gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw() != null &amp;&amp; gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw() &gt; 0){&#xD;
			companyGC.v_liveConnectionMetaData.physicalCapacity_kW = (double)gridConnection.getElectricity().getGrootverbruik().getPhysicalCapacityKw(); //Contracted connection capacity&#xD;
			companyGC.v_liveConnectionMetaData.physicalCapacityKnown = true;&#xD;
		}&#xD;
		else{&#xD;
			companyGC.v_liveConnectionMetaData.physicalCapacity_kW = max(companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW, companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW); //Contracted connection capacity&#xD;
			companyGC.v_liveConnectionMetaData.physicalCapacityKnown = false;&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//Add to current scenario list&#xD;
	current_scenario_list.setCurrentContractDeliveryCapacity_kW(companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	current_scenario_list.setCurrentContractFeedinCapacity_kW(companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	current_scenario_list.setCurrentPhysicalConnectionCapacity_kW(companyGC.v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
	&#xD;
	&#xD;
	//Electricity consumption profile&#xD;
	String profileName = "default_office_electricity_demand_fr";&#xD;
	&#xD;
	//Check if quarter hourly values are available in vallum&#xD;
	boolean createdTimeSeriesAssets = f_createElectricityTimeSeriesAssets(companyGC, gridConnection);&#xD;
	&#xD;
	if(createdTimeSeriesAssets){&#xD;
		if(!settings.createCurrentElectricityEA()){//input boolean: Dont create current electric energy assets if electricity profile or total is known.&#xD;
			createElectricEA = false;&#xD;
		}&#xD;
	}&#xD;
	else{ //(!createdTimeSeriesAssets) { // &#xD;
		double yearlyElectricityConsumption_kWh  = 0;&#xD;
		try { // Check if quarterly hour values are available in excel database&#xD;
			if(selectFirstValue(Double.class, "SELECT " + "ccid" + gridConnection.getSequence().toString() + "_demand FROM comp_elec_consumption LIMIT 1;") != null){&#xD;
		  		companyGC.v_hasQuarterHourlyValues = true;&#xD;
				profileName = "ccid" + companyGC.p_gridConnectionID;&#xD;
				&#xD;
				//Check if solar was already producing in simualtion year (Check for now: if year production = 0 , no solar yet, if year production = null, no data: so assume there was solar already)&#xD;
				if(gridConnection.getElectricity().getAnnualElectricityProduction_kWh() != null &amp;&amp; gridConnection.getElectricity().getAnnualElectricityProduction_kWh  () == 0){&#xD;
					pvPower_kW = null;&#xD;
				}&#xD;
		&#xD;
				if (!settings.createCurrentElectricityEA()){//input boolean: Dont create current electric energy assets if electricity profile is present.&#xD;
					createElectricEA = false;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		catch(Exception e) {&#xD;
			//Data not available, do nothing and leave v_hasQuarterHourlyValues on false.&#xD;
		}&#xD;
		&#xD;
		if(companyGC.v_hasQuarterHourlyValues == false){//Calculate yearly consumption based on yearly delivery (and yearly feedin, production or solarpanels if available)&#xD;
			//Get totals&#xD;
			double yearlyElectricityDelivery_kWh = (gridConnection.getElectricity().getAnnualElectricityDemandKwh() != null) ? gridConnection.getElectricity().getAnnualElectricityDemandKwh() : 0; // Yearly electricity consumption (0 if value is null)&#xD;
			Integer yearlyElectricityFeedin_kWh = gridConnection.getElectricity().getAnnualElectricityFeedIn_kWh();&#xD;
			Integer yearlyElectricityProduction_kWh = gridConnection.getElectricity().getAnnualElectricityProduction_kWh();&#xD;
			&#xD;
			//Calculate consumption&#xD;
			yearlyElectricityConsumption_kWh = f_getPreprocessedElectricityConsumptionTotal(companyGC, yearlyElectricityDelivery_kWh, yearlyElectricityFeedin_kWh, yearlyElectricityProduction_kWh, pvPower_kW);&#xD;
			&#xD;
			//If no electricity consumption, determine the consumption based on average values and floor surface and connection capacity&#xD;
			if(yearlyElectricityConsumption_kWh == 0){&#xD;
				yearlyElectricityConsumption_kWh = avgc_data.p_avgCompanyElectricityConsumption_kWhpm2*companyGC.p_floorSurfaceArea_m2;&#xD;
				&#xD;
				//Check if it is within the contracted limits (peak should at least be 20% lower than contracted capacity&#xD;
				if(yearlyElectricityConsumption_kWh*defaultProfiles_data.getDefaultOfficeElectricityDemandProfileMaximum_fr() &gt; 0.8*companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW){&#xD;
					yearlyElectricityConsumption_kWh = 0.8*companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW/defaultProfiles_data.getDefaultOfficeElectricityDemandProfileMaximum_fr();&#xD;
				}&#xD;
				 &#xD;
			}&#xD;
			&#xD;
			//Update total Yearly electricity consumption (only when no timestep data available, cause when thats avaiable, it happens in the preprocessing function)&#xD;
			if (yearlyElectricityDelivery_kWh != 0){&#xD;
				v_remainingElectricityDelivery_kWh -= yearlyElectricityDelivery_kWh;&#xD;
			}&#xD;
			else{&#xD;
				v_remainingElectricityDelivery_kWh -= yearlyElectricityConsumption_kWh;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//Add base electricity demand profile (with profile if available, with generic pattern if only yearly data is available)&#xD;
		f_addElectricityDemandProfile(companyGC, yearlyElectricityConsumption_kWh, pvPower_kW, companyGC.v_hasQuarterHourlyValues, profileName);&#xD;
	}&#xD;
}&#xD;
&#xD;
//If everything is 0 set the GC as non active&#xD;
if(companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW == 0 &amp;&amp; companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW == 0 &amp;&amp; companyGC.v_liveConnectionMetaData.physicalCapacity_kW == 0){&#xD;
	companyGC.v_isActive = false;&#xD;
}&#xD;
		&#xD;
//Grid expansion request&#xD;
if (gridConnection.getElectricity().getGridExpansion().getHasRequestAtGridOperator() != null &amp;&amp; gridConnection.getElectricity().getGridExpansion().getHasRequestAtGridOperator()){&#xD;
	future_scenario_list.setRequestedContractDeliveryCapacity_kW(((gridConnection.getElectricity().getGridExpansion().getRequestedKW() != null) ? gridConnection.getElectricity().getGridExpansion().getRequestedKW() : 0) + companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	future_scenario_list.setRequestedContractFeedinCapacity_kW(((gridConnection.getElectricity().getGridExpansion().getRequestedKW() != null) ? gridConnection.getElectricity().getGridExpansion().getRequestedKW() : 0) + companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	future_scenario_list.setRequestedPhysicalConnectionCapacity_kW(max(companyGC.v_liveConnectionMetaData.physicalCapacity_kW, max(future_scenario_list.getRequestedContractDeliveryCapacity_kW(), future_scenario_list.getRequestedContractFeedinCapacity_kW())));&#xD;
}&#xD;
else{&#xD;
	future_scenario_list.setRequestedContractDeliveryCapacity_kW(companyGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	future_scenario_list.setRequestedContractFeedinCapacity_kW(companyGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	future_scenario_list.setRequestedPhysicalConnectionCapacity_kW(companyGC.v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
}&#xD;
&#xD;
&#xD;
////Supply (pv, wind, etc.)&#xD;
if (gridConnection.getSupply().getHasSupply() != null &amp;&amp; gridConnection.getSupply().getHasSupply()){&#xD;
	//gridConnection.getElectricity().getAnnualElectricityProductionKwh() // Staat niet meer in het formulier!&#xD;
	&#xD;
	double[] yearlyElectricityProduction_kWh_array = null;&#xD;
	&#xD;
	var quarterHourlyProduction_kWh = gridConnection.getElectricity().getQuarterHourlyProduction_kWh();&#xD;
	if (quarterHourlyProduction_kWh != null &amp;&amp; quarterHourlyProduction_kWh.hasNumberOfValuesForOneYear()) {&#xD;
		yearlyElectricityProduction_kWh_array = f_convertFloatArrayToDoubleArray(quarterHourlyProduction_kWh.convertToQuarterHourly().getFullYearOrFudgeIt(targetYear));&#xD;
	}&#xD;
	&#xD;
	if(yearlyElectricityProduction_kWh_array == null &amp;&amp; gridConnection.getSupply().getPvInstalledKwp() != null &amp;&amp; gridConnection.getSupply().getPvInstalledKwp() &gt; 0){&#xD;
		try {&#xD;
			if(selectFirstValue(Double.class, "SELECT " + "ccid" + companyGC.p_gridConnectionID + "_production FROM comp_elec_consumption LIMIT 1;") != null){&#xD;
		  		List&lt;Double&gt; yearlyElectricityProduction_kWh_list = selectValues(double.class, "SELECT " + "ccid" + companyGC.p_gridConnectionID + "_production FROM comp_elec_consumption;");&#xD;
				yearlyElectricityProduction_kWh_array = (yearlyElectricityProduction_kWh_list != null) ? yearlyElectricityProduction_kWh_list.stream().mapToDouble(d -&gt; max(0,d)).toArray() : null;&#xD;
			}&#xD;
		}&#xD;
		catch(Exception e) {&#xD;
		}&#xD;
	}&#xD;
	if (yearlyElectricityProduction_kWh_array != null &amp;&amp; gridConnection.getSupply().getPvInstalledKwp() != null &amp;&amp; gridConnection.getSupply().getPvInstalledKwp() &gt; 0 &amp;&amp; !gridConnection.getHeat().getHeatingTypes().contains(com.zenmo.zummon.companysurvey.HeatingType.COMBINED_HEAT_AND_POWER)){&#xD;
		f_createCustomPVAsset(companyGC, yearlyElectricityProduction_kWh_array, (double)gridConnection.getSupply().getPvInstalledKwp()); // Create custom PV asset when production data is available!&#xD;
		current_scenario_list.setCurrentPV_kW(gridConnection.getSupply().getPvInstalledKwp());&#xD;
	} else if (gridConnection.getSupply().getPvInstalledKwp() != null &amp;&amp; gridConnection.getSupply().getPvInstalledKwp() &gt; 0){			&#xD;
		//gridConnection.getSupply().getPvOrientation(); // Wat doen we hier mee????? Nog niets!&#xD;
		f_addEnergyProduction(companyGC, OL_EnergyAssetType.PHOTOVOLTAIC, "Rooftop Solar", gridConnection.getSupply().getPvInstalledKwp());&#xD;
		&#xD;
		//add to scenario: current&#xD;
		current_scenario_list.setCurrentPV_kW(gridConnection.getSupply().getPvInstalledKwp());&#xD;
		//current_scenario_list.currentPV_orient = gridConnection.getSupply().getPvOrientation();&#xD;
	} 	&#xD;
	//Wind&#xD;
	if (gridConnection.getSupply().getWindInstalledKw() != null &amp;&amp; gridConnection.getSupply().getWindInstalledKw() &gt; 0){&#xD;
		f_addEnergyProduction(companyGC, OL_EnergyAssetType.WINDMILL, "Wind mill", gridConnection.getSupply().getWindInstalledKw());&#xD;
&#xD;
		//add to scenario: current&#xD;
		current_scenario_list.setCurrentWind_kW(gridConnection.getSupply().getWindInstalledKw());&#xD;
	}&#xD;
}&#xD;
&#xD;
//Planned supply (PV)&#xD;
if (gridConnection.getSupply().getPvPlanned() != null &amp;&amp; gridConnection.getSupply().getPvPlanned()){&#xD;
	future_scenario_list.setPlannedPV_kW(current_scenario_list.getCurrentPV_kW() + (gridConnection.getSupply().getPvPlannedKwp() != null ? gridConnection.getSupply().getPvPlannedKwp() : 0)); &#xD;
	future_scenario_list.setPlannedPV_year(gridConnection.getSupply().getPvPlannedYear());&#xD;
	//gridConnection.getSupply().getPvPlannedOrientation();&#xD;
}&#xD;
else{&#xD;
	future_scenario_list.setPlannedPV_kW(current_scenario_list.getCurrentPV_kW());&#xD;
}&#xD;
&#xD;
//Planned supply (Wind)&#xD;
if (gridConnection.getSupply().getWindPlannedKw() != null &amp;&amp; gridConnection.getSupply().getWindPlannedKw() &gt; 0){&#xD;
	future_scenario_list.setPlannedWind_kW(current_scenario_list.getCurrentWind_kW() + (gridConnection.getSupply().getWindPlannedKw() != null ? gridConnection.getSupply().getWindPlannedKw() : 0));&#xD;
	// plannedWind_year // ???&#xD;
}&#xD;
else{&#xD;
	future_scenario_list.setPlannedWind_kW(current_scenario_list.getCurrentWind_kW());&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
////Gas and Heating&#xD;
&#xD;
//Initialize variables (outside of gas loop needed for heating)&#xD;
boolean hasHourlyGasData = false;&#xD;
boolean hasGasTimeSeriesInZorm = false;&#xD;
double yearlyGasConsumption_m3 = 0;&#xD;
double ratioGasUsedForHeating = 1;&#xD;
String heatProfileName = "default_building_heat_demand_fr";&#xD;
&#xD;
if (gridConnection.getNaturalGas().getHasConnection() != null &amp;&amp; gridConnection.getNaturalGas().getHasConnection()){&#xD;
	&#xD;
	//Determine how much gas goes towards heating&#xD;
	ratioGasUsedForHeating = ((gridConnection.getNaturalGas().getPercentageUsedForHeating() != null) ? gridConnection.getNaturalGas().getPercentageUsedForHeating() : 100)/100.0;&#xD;
	&#xD;
	&#xD;
	//Create heat demand profile using gas demand profile from zorm and create heating assets.&#xD;
	hasGasTimeSeriesInZorm = f_createHeatProfileFromGasTS(companyGC, gridConnection, ratioGasUsedForHeating);&#xD;
	&#xD;
	//If gas demand profile does not exist in zorm&#xD;
	if(!hasGasTimeSeriesInZorm){&#xD;
		yearlyGasConsumption_m3 = (gridConnection.getNaturalGas().getAnnualDemandM3() != null) ? gridConnection.getNaturalGas().getAnnualDemandM3() : 0; // Yearly electricity consumption (0 if value is null)&#xD;
	&#xD;
		//Check if hourly gas consumption values are available &#xD;
		try{&#xD;
			if (selectFirstValue(Double.class, "SELECT " + "ccid" + gridConnection.getSequence().toString() + "_demand FROM comp_gas_consumption LIMIT 1;") != null){&#xD;
				hasHourlyGasData = true;&#xD;
				heatProfileName = "ccid" + companyGC.p_gridConnectionID;&#xD;
			}&#xD;
		}&#xD;
		catch(Exception e) {&#xD;
			//No hourly data available?&#xD;
			//Update total Yearly gas consumption (if it is available it happens in the function where data is imported)&#xD;
			v_remainingGasConsumption_m3 -= yearlyGasConsumption_m3;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
	&#xD;
//Heating&#xD;
if(!hasGasTimeSeriesInZorm){ // If there is gas data, heating assets have already been made.&#xD;
	//Determine the current heating type&#xD;
	f_setHeatingTypeSurvey(companyGC, gridConnection, hasHourlyGasData);&#xD;
	&#xD;
	//Set the heating demand profile&#xD;
	if(!createElectricEA &amp;&amp; companyGC.p_heatingType == OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP){&#xD;
		//Dont create additional Electric heating assets on top of Electricity profile&#xD;
	}&#xD;
	else{&#xD;
		// Intermediate solution, if no gas demand check if district heating consumption, ifso: convert heat demand into gas, which will then be converted back to heat again while making the profile.&#xD;
		if(yearlyGasConsumption_m3 == 0 &amp;&amp; companyGC.p_heatingType == OL_GridConnectionHeatingType.DISTRICTHEAT){ 			&#xD;
			yearlyGasConsumption_m3 = gridConnection.getHeat().getAnnualDistrictHeatingDelivery_GJ()*277.777778 / avgc_data.p_gas_kWhpm3;&#xD;
			traceln("Heatgrid consumption detected equal to: " + yearlyGasConsumption_m3 + " [m3] of gas");&#xD;
		}&#xD;
		&#xD;
		f_addHeatDemandProfile(companyGC, yearlyGasConsumption_m3, hasHourlyGasData, ratioGasUsedForHeating, heatProfileName);&#xD;
	}&#xD;
}&#xD;
&#xD;
//add heating type to scenario: current and future&#xD;
current_scenario_list.setCurrentHeatingType(companyGC.p_heatingType);&#xD;
future_scenario_list.setPlannedHeatingType(companyGC.p_heatingType);&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
////Storage&#xD;
Float battery_power_kW = 0f;&#xD;
Float battery_capacity_kWh = 0f;&#xD;
&#xD;
if (gridConnection.getStorage().getHasBattery() != null &amp;&amp; gridConnection.getStorage().getHasBattery() &amp;&amp; createElectricEA){ // Check if battery present and if electric demand EA should be created&#xD;
	if (gridConnection.getStorage().getBatteryPowerKw() != null){&#xD;
		battery_power_kW = gridConnection.getStorage().getBatteryPowerKw();&#xD;
	}&#xD;
	if (gridConnection.getStorage().getBatteryCapacityKwh() != null){&#xD;
		battery_capacity_kWh = gridConnection.getStorage().getBatteryCapacityKwh();	&#xD;
	}&#xD;
}&#xD;
// Elke survey company krijgt hoe dan ook een batterij EA (ook als op dit moment nog geen batterij aanwezig is, maar dan is capaciteit gewoon 0)&#xD;
f_addStorage(companyGC, battery_power_kW, battery_capacity_kWh, OL_EnergyAssetType.STORAGE_ELECTRIC);&#xD;
companyGC.p_batteryAlgorithm = new J_BatteryManagementSelfConsumption(companyGC);&#xD;
&#xD;
//add to scenario: current&#xD;
current_scenario_list.setCurrentBatteryCapacity_kWh(battery_capacity_kWh);&#xD;
current_scenario_list.setCurrentBatteryPower_kW(battery_power_kW);&#xD;
&#xD;
	&#xD;
	&#xD;
if (gridConnection.getStorage().getHasThermalStorage() != null &amp;&amp; gridConnection.getStorage().getHasThermalStorage()){ // Check for thermal storage&#xD;
	//gridConnection.getStorage().getThermalStorageKw()&#xD;
	//J_EAStorageHeat(Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {&#xD;
	//J_EAStorageHeat(companyGC, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {&#xD;
	//Denk ook aan aansturing?!!&#xD;
}&#xD;
&#xD;
if (gridConnection.getStorage().getHasPlannedBattery() != null &amp;&amp; gridConnection.getStorage().getHasPlannedBattery()){ // Check for planned battery&#xD;
	future_scenario_list.setPlannedBatteryCapacity_kWh((gridConnection.getStorage().getPlannedBatteryCapacityKwh() != null ? gridConnection.getStorage().getPlannedBatteryCapacityKwh() : 0) + current_scenario_list.getCurrentBatteryCapacity_kWh());&#xD;
	future_scenario_list.setPlannedBatteryPower_kW((gridConnection.getStorage().getPlannedBatteryPowerKw() != null ? gridConnection.getStorage().getPlannedBatteryPowerKw() : 0) + current_scenario_list.getCurrentBatteryPower_kW());&#xD;
}&#xD;
else{&#xD;
future_scenario_list.setPlannedBatteryCapacity_kWh(current_scenario_list.getCurrentBatteryCapacity_kWh());&#xD;
future_scenario_list.setPlannedBatteryPower_kW(current_scenario_list.getCurrentBatteryPower_kW());&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
////Transport&#xD;
&#xD;
//Cars of comuters and visitors &#xD;
int nbDailyCarVisitors_notNull = (gridConnection.getTransport().getNumDailyCarVisitors() != null) ? gridConnection.getTransport().getNumDailyCarVisitors() : 0;&#xD;
int nbDailyCarCommuters_notNull = (gridConnection.getTransport().getNumDailyCarAndVanCommuters() != null) ? gridConnection.getTransport().getNumDailyCarAndVanCommuters() : 0;&#xD;
&#xD;
if (nbDailyCarCommuters_notNull + nbDailyCarVisitors_notNull &gt; 0){	&#xD;
	&#xD;
	int nbEVCarsComute = (gridConnection.getTransport().getNumCommuterAndVisitorChargePoints() != null) ? gridConnection.getTransport().getNumCommuterAndVisitorChargePoints() : 0; // Wat doen we hier mee????&#xD;
	int nbDieselCarsComute = gridConnection.getTransport().getNumDailyCarAndVanCommuters() + nbDailyCarVisitors_notNull - nbEVCarsComute;&#xD;
&#xD;
	boolean isDefaultVehicle = true;&#xD;
	double maxChargingPower_kW 		= avgc_data.p_avgEVMaxChargePowerCar_kW;	&#xD;
	&#xD;
	for (int i = 0; i&lt; nbDieselCarsComute; i++){&#xD;
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VEHICLE, isDefaultVehicle, 0);&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//check if charge power is filled in&#xD;
	if (gridConnection.getTransport().getCars().getPowerPerChargePointKw() != null){&#xD;
		maxChargingPower_kW 		= gridConnection.getTransport().getCars().getPowerPerChargePointKw();		&#xD;
		isDefaultVehicle			= false;&#xD;
	}&#xD;
	&#xD;
	if (createElectricEA){ // Check if electric demand EA should be created&#xD;
		for (int j = 0; j&lt; nbEVCarsComute; j++){&#xD;
			f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VEHICLE, isDefaultVehicle, 0, maxChargingPower_kW);&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	//add to scenario: current&#xD;
	current_scenario_list.setCurrentEVCars(nbEVCarsComute);&#xD;
	current_scenario_list.setCurrentDieselCars(nbDieselCarsComute);&#xD;
	&#xD;
	//Initialize future cars&#xD;
	future_scenario_list.setPlannedEVCars(current_scenario_list.getCurrentEVCars());&#xD;
&#xD;
}&#xD;
&#xD;
&#xD;
//Business vehicles&#xD;
if (gridConnection.getTransport().getHasVehicles() != null &amp;&amp; gridConnection.getTransport().getHasVehicles()){&#xD;
&#xD;
	//Cars&#xD;
	if (gridConnection.getTransport().getCars().getNumCars() != null &amp;&amp; gridConnection.getTransport().getCars().getNumCars() != 0){&#xD;
		&#xD;
		&#xD;
		//Update v_remaningAmount of cars (company owned only)&#xD;
		v_remainingNumberOfCars -= gridConnection.getTransport().getCars().getNumCars();&#xD;
		&#xD;
		//gridConnection.getTransport().getCars().getNumChargePoints(); // Wat doen we hier mee????????&#xD;
		&#xD;
		Integer nbEVCars = gridConnection.getTransport().getCars().getNumElectricCars();&#xD;
		if (nbEVCars == null) {&#xD;
		    nbEVCars = 0;&#xD;
		}&#xD;
		int nbDieselCars = gridConnection.getTransport().getCars().getNumCars() - nbEVCars;&#xD;
&#xD;
		&#xD;
		boolean isDefaultVehicle		= true;&#xD;
		double annualTravelDistance_km 	= 0;&#xD;
		double maxChargingPower_kW 		= avgc_data.p_avgEVMaxChargePowerCar_kW;		&#xD;
		&#xD;
		//check if annual travel distance is filled in&#xD;
		if (gridConnection.getTransport().getCars().getAnnualTravelDistancePerCarKm() != null){&#xD;
			annualTravelDistance_km 	= gridConnection.getTransport().getCars().getAnnualTravelDistancePerCarKm();&#xD;
			isDefaultVehicle			= false;&#xD;
		}&#xD;
		&#xD;
		//create diesel vehicle&#xD;
		for (int i = 0; i&lt; nbDieselCars; i++){&#xD;
		f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VEHICLE, isDefaultVehicle, annualTravelDistance_km);&#xD;
		}&#xD;
		&#xD;
		//check if charge power is filled in&#xD;
		if (gridConnection.getTransport().getCars().getPowerPerChargePointKw() != null){&#xD;
			maxChargingPower_kW 		= gridConnection.getTransport().getCars().getPowerPerChargePointKw();		&#xD;
			isDefaultVehicle			= false;		&#xD;
		}&#xD;
		&#xD;
		//create EV&#xD;
		if (createElectricEA){ // Check if electric demand EA should be created&#xD;
			for (int j = 0; j&lt; nbEVCars; j++){&#xD;
			f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VEHICLE, isDefaultVehicle, annualTravelDistance_km, maxChargingPower_kW);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//add to scenario: current&#xD;
		current_scenario_list.setCurrentEVCars(((current_scenario_list.getCurrentEVCars() != null) ? current_scenario_list.getCurrentEVCars() : 0) + nbEVCars);&#xD;
		current_scenario_list.setCurrentDieselCars(((current_scenario_list.getCurrentDieselCars() != null) ? current_scenario_list.getCurrentDieselCars() : 0) + nbDieselCars);&#xD;
		current_scenario_list.setCurrentEVCarChargePower_kW(maxChargingPower_kW);&#xD;
		&#xD;
		//Update Planned cars&#xD;
		future_scenario_list.setPlannedEVCars((gridConnection.getTransport().getCars().getNumPlannedElectricCars() != null ? gridConnection.getTransport().getCars().getNumPlannedElectricCars() : 0) + current_scenario_list.getCurrentEVCars());&#xD;
		future_scenario_list.setPlannedHydrogenCars((gridConnection.getTransport().getCars().getNumPlannedHydrogenCars() != null) ? gridConnection.getTransport().getCars().getNumPlannedHydrogenCars() : 0);&#xD;
		&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//Vans&#xD;
	if (gridConnection.getTransport().getVans().getNumVans() != null &amp;&amp; gridConnection.getTransport().getVans().getNumVans() != 0){&#xD;
		&#xD;
		//Update v_remaningAmount of vans&#xD;
		v_remainingNumberOfVans -= gridConnection.getTransport().getVans().getNumVans();&#xD;
		&#xD;
		&#xD;
		//gridConnection.getTransport().getVans().getNumChargePoints(); // Wat doen we hier mee????????&#xD;
		&#xD;
		Integer nbEVVans = gridConnection.getTransport().getVans().getNumElectricVans();	&#xD;
		if (nbEVVans == null) {&#xD;
		    nbEVVans = 0;&#xD;
		}	&#xD;
		int nbDieselVans = gridConnection.getTransport().getVans().getNumVans() - nbEVVans;&#xD;
&#xD;
		boolean isDefaultVehicle		= true;&#xD;
		double annualTravelDistance_km 	= 0;&#xD;
		double maxChargingPower_kW 		= avgc_data.p_avgEVMaxChargePowerVan_kW;		&#xD;
		&#xD;
		//check if annual travel distance is filled in&#xD;
		if (gridConnection.getTransport().getVans().getAnnualTravelDistancePerVanKm() != null){&#xD;
			annualTravelDistance_km 	= gridConnection.getTransport().getVans().getAnnualTravelDistancePerVanKm();&#xD;
			isDefaultVehicle			= false;&#xD;
		}&#xD;
		&#xD;
		//create diesel vehicles&#xD;
		for (int i = 0; i&lt; nbDieselVans; i++){&#xD;
			f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_VAN, isDefaultVehicle, annualTravelDistance_km);&#xD;
		}&#xD;
		&#xD;
		//check if charge power is filled in&#xD;
		if (gridConnection.getTransport().getVans().getPowerPerChargePointKw() != null){&#xD;
			maxChargingPower_kW 		= gridConnection.getTransport().getVans().getPowerPerChargePointKw();	&#xD;
			isDefaultVehicle			= false;		&#xD;
		}&#xD;
		&#xD;
		//create electric vehicles&#xD;
		if (createElectricEA){ // Check if electric demand EA should be created&#xD;
			for (int j = 0; j&lt; nbEVVans; j++){&#xD;
				f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_VAN, isDefaultVehicle, annualTravelDistance_km, maxChargingPower_kW);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//add to scenario: current&#xD;
		current_scenario_list.setCurrentEVVans(nbEVVans);&#xD;
		current_scenario_list.setCurrentDieselVans(nbDieselVans);&#xD;
		current_scenario_list.setCurrentEVVanChargePower_kW(maxChargingPower_kW);&#xD;
		&#xD;
		//Planned&#xD;
		future_scenario_list.setPlannedEVVans((gridConnection.getTransport().getVans().getNumPlannedElectricVans() != null ? gridConnection.getTransport().getVans().getNumPlannedElectricVans() : 0) + current_scenario_list.getCurrentEVVans());&#xD;
		future_scenario_list.setPlannedHydrogenVans((gridConnection.getTransport().getVans().getNumPlannedHydrogenVans() != null) ? gridConnection.getTransport().getVans().getNumPlannedHydrogenVans() : 0);&#xD;
	}&#xD;
	&#xD;
		&#xD;
	&#xD;
	//Trucks&#xD;
	if (gridConnection.getTransport().getTrucks().getNumTrucks() != null &amp;&amp; gridConnection.getTransport().getTrucks().getNumTrucks() != 0){&#xD;
		&#xD;
		//Update v_remaningAmount of trucks&#xD;
		v_remainingNumberOfTrucks -= gridConnection.getTransport().getTrucks().getNumTrucks();&#xD;
&#xD;
&#xD;
		//gridConnection.getTransport().getTrucks().getNumChargePoints(); // Wat doen we hier mee????????&#xD;
		&#xD;
		&#xD;
		Integer nbEVTrucks = gridConnection.getTransport().getTrucks().getNumElectricTrucks();		&#xD;
		if (nbEVTrucks == null) {&#xD;
		    nbEVTrucks = 0;&#xD;
		}&#xD;
		int nbDieselTrucks = gridConnection.getTransport().getTrucks().getNumTrucks() - nbEVTrucks;&#xD;
	&#xD;
		boolean isDefaultVehicle		= true;&#xD;
		double annualTravelDistance_km = 0;&#xD;
		double maxChargingPower_kW = avgc_data.p_avgEVMaxChargePowerTruck_kW;&#xD;
		&#xD;
		//check if annual travel distance is filled in&#xD;
		if (gridConnection.getTransport().getTrucks().getAnnualTravelDistancePerTruckKm() != null){&#xD;
			annualTravelDistance_km 	= gridConnection.getTransport().getTrucks().getAnnualTravelDistancePerTruckKm();&#xD;
			isDefaultVehicle			= false;&#xD;
		}&#xD;
		&#xD;
		//create diesel vehicles&#xD;
		for (int i = 0; i&lt; nbDieselTrucks; i++){&#xD;
			f_addDieselVehicle(companyGC, OL_EnergyAssetType.DIESEL_TRUCK, isDefaultVehicle, annualTravelDistance_km);&#xD;
		}&#xD;
		&#xD;
		//check if charge power is filled in&#xD;
		if (gridConnection.getTransport().getTrucks().getPowerPerChargePointKw() != null){&#xD;
			maxChargingPower_kW 		= gridConnection.getTransport().getTrucks().getPowerPerChargePointKw();&#xD;
			isDefaultVehicle			= false;		&#xD;
		}&#xD;
		&#xD;
		//create electric vehicles&#xD;
		if (createElectricEA){ // Check if electric demand EA should be created&#xD;
			for (int j = 0; j&lt; nbEVTrucks; j++){&#xD;
			f_addElectricVehicle(companyGC, OL_EnergyAssetType.ELECTRIC_TRUCK, isDefaultVehicle, annualTravelDistance_km, maxChargingPower_kW);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		//add to scenario: current&#xD;
		current_scenario_list.setCurrentEVTrucks(nbEVTrucks);&#xD;
		current_scenario_list.setCurrentDieselTrucks(nbDieselTrucks);&#xD;
		current_scenario_list.setCurrentEVTruckChargePower_kW(maxChargingPower_kW);&#xD;
		&#xD;
		//Planned&#xD;
		future_scenario_list.setPlannedEVTrucks((gridConnection.getTransport().getTrucks().getNumPlannedElectricTrucks() != null ? gridConnection.getTransport().getTrucks().getNumPlannedElectricTrucks() : 0) + current_scenario_list.getCurrentEVTrucks());&#xD;
		future_scenario_list.setPlannedHydrogenTrucks((gridConnection.getTransport().getTrucks().getNumPlannedHydrogenTrucks() != null) ? gridConnection.getTransport().getTrucks().getNumPlannedHydrogenTrucks() : 0);&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//Other&#xD;
	if (Objects.nonNull(gridConnection.getTransport().getOtherVehicles().getHasOtherVehicles())){&#xD;
	&#xD;
	// Wat doen we hier mee???&#xD;
	&#xD;
	}&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>Building_data</ReturnType>
						<Id>1737741603780</Id>
						<Name>f_createBuildingData_Vallum</Name>
						<X>470</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>companyGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>PandID</Name>
							<Type>String</Type>
						</Parameter>
						<Body>com.zenmo.bag.Pand pand_data_vallum = map_buildingData_Vallum.get(PandID);&#xD;
&#xD;
//Calculate surface area&#xD;
GISRegion gisRegion = zero_Interface.f_createGISObject(f_createGISObjectsTokens(pand_data_vallum.getGeometry().toString(), OL_GISObjectType.BUILDING));&#xD;
double surfaceArea_m2 = gisRegion.area();&#xD;
gisRegion.remove();&#xD;
&#xD;
&#xD;
//Create a building_data record&#xD;
Building_data building_data_record = Building_data.builder().&#xD;
&#xD;
address_id("verblijfsobject." + PandID).&#xD;
building_id(PandID).&#xD;
streetname(companyGC.p_address.getStreetName()).&#xD;
house_number(companyGC.p_address.getHouseNumber()).&#xD;
house_letter(companyGC.p_address.getHouseLetter()).&#xD;
house_addition(companyGC.p_address.getHouseAddition()).&#xD;
postalcode(companyGC.p_address.getPostalcode()).&#xD;
city(companyGC.p_address.getPostalcode()).&#xD;
build_year(pand_data_vallum.getBouwjaar()).	&#xD;
status(pand_data_vallum.getStatus()).&#xD;
//purpose(row.get( buildings.purpose )).&#xD;
address_floor_surface_m2(surfaceArea_m2).&#xD;
polygon_area_m2(surfaceArea_m2).&#xD;
annotation(companyGC.p_owner.p_actorID).&#xD;
//extra_info(row.get( buildings.extra_info )).&#xD;
//gridnode_id(row.get( buildings.gridnode_id )).&#xD;
//latitude(row.get( buildings.latitude )).&#xD;
//longitude(row.get( buildings.longitude )).&#xD;
polygon(pand_data_vallum.getGeometry().toString()).&#xD;
build();&#xD;
&#xD;
return building_data_record;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1737712184349</Id>
						<Name>f_createDieselTractors</Name>
						<X>820</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>companyGridConnection</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>agricultureSurveyData</Name>
							<Type>com.zenmo.zummon.companysurvey.Agriculture</Type>
						</Parameter>
						<Body>final double annualDiesel_L = Optional.ofNullable(agricultureSurveyData.getAnnualDieselUsage_L()).orElse(0.0);&#xD;
final int numTractors = Optional.ofNullable(agricultureSurveyData.getNumTractors()).orElse(annualDiesel_L &gt; 0.0 ? 1 : 0);&#xD;
&#xD;
if (numTractors &gt; 0 &amp;&amp; annualDiesel_L &lt;= 0.0) {&#xD;
    // TODO: this should be in Tractor constructor&#xD;
    throw new RuntimeException("Tractor diesel usage missing for " + companyGridConnection.p_gridConnectionID);&#xD;
}&#xD;
&#xD;
CustomProfile_data tractorProfile = findFirst(c_customProfiles_data, profile -&gt; profile.customProfileID().equals("TractorProfile")); ///????&#xD;
&#xD;
for (int i = 0; i &lt; numTractors; i++) {&#xD;
	if(tractorProfile == null){&#xD;
		throw new RuntimeException("Trying to make a tractor, without having loaded in a tractor profile for GC: " + companyGridConnection.p_gridConnectionID);&#xD;
	}&#xD;
    new J_EADieselTractor(companyGridConnection, annualDiesel_L / numTractors, tractorProfile.getValuesArray(), energyModel.p_timeStep_h);&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1738248965949</Id>
						<Name>f_createElectricityTimeSeriesAssets</Name>
						<X>460</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gridConnection</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>gridConnectionSurvey</Name>
							<Type>com.zenmo.zummon.companysurvey.GridConnection</Type>
						</Parameter>
						<Body>var electricitySurvey = gridConnectionSurvey.getElectricity();&#xD;
&#xD;
double[] deliveryTimeSeries_kWh = f_timeSeriesToQuarterHourlyDoubleArray(electricitySurvey.getQuarterHourlyDelivery_kWh());&#xD;
if (deliveryTimeSeries_kWh == null) {&#xD;
	// delivery is the minimum we require to do anything with timeseries data&#xD;
	return false;&#xD;
}&#xD;
&#xD;
double[] feedInTimeSeries_kWh = f_timeSeriesToQuarterHourlyDoubleArray(electricitySurvey.getQuarterHourlyFeedIn_kWh());&#xD;
double[] productionTimeSeries_kWh = f_timeSeriesToQuarterHourlyDoubleArray(electricitySurvey.getQuarterHourlyProduction_kWh());&#xD;
&#xD;
Double pvPower_kW = Optional.ofNullable(gridConnectionSurvey.getSupply().getPvInstalledKwp())&#xD;
	.map(it -&gt; (double) it)&#xD;
	.orElse(null);&#xD;
&#xD;
double[] heatPumpElectricityTimeSeries_kWh = f_timeSeriesToQuarterHourlyDoubleArray(gridConnectionSurvey.getHeat().getHeatPumpElectricityConsumptionTimeSeries_kWh());&#xD;
&#xD;
//Preprocess the arrays and create the consumption pattern&#xD;
f_createPreprocessedElectricityProfile_PV(gridConnection, deliveryTimeSeries_kWh, feedInTimeSeries_kWh, productionTimeSeries_kWh, pvPower_kW, heatPumpElectricityTimeSeries_kWh);&#xD;
&#xD;
gridConnection.v_hasQuarterHourlyValues = true;&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double[]</ReturnType>
						<Id>1738572338816</Id>
						<Name>f_timeSeriesToQuarterHourlyDoubleArray</Name>
						<X>1560</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>timeSeries</Name>
							<Type>com.zenmo.zummon.companysurvey.TimeSeries</Type>
						</Parameter>
						<Body>int targetYear = 2024;&#xD;
if (timeSeries == null) {&#xD;
	return null;&#xD;
}&#xD;
&#xD;
if (!timeSeries.hasNumberOfValuesForOneYear()) {&#xD;
	traceln("Time series has too few values for one year");&#xD;
	return null;&#xD;
}&#xD;
&#xD;
return f_convertFloatArrayToDoubleArray(timeSeries.convertToQuarterHourly().getFullYearOrFudgeIt(targetYear));</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1742915722586</Id>
						<Name>f_connectGCToExistingBuilding</Name>
						<X>810</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>connectingGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>existingBuilding</Name>
							<Type>GIS_Building</Type>
						</Parameter>
						<Parameter>
							<Name>connectingBuildingData</Name>
							<Type>Building_data</Type>
						</Parameter>
						<Body>//Get the total roof surface of the building&#xD;
double buildingRoofSurface = existingBuilding.p_roofSurfaceArea_m2;&#xD;
&#xD;
//Building roof surface removal from all earlier connected GC (so excluding the new one!)&#xD;
int currentAmountOfConnectedGCWithBuilding = existingBuilding.c_containedGridConnections.size();&#xD;
for(GridConnection earlierConnectedGC : existingBuilding.c_containedGridConnections){&#xD;
	earlierConnectedGC.p_roofSurfaceArea_m2 -= buildingRoofSurface/currentAmountOfConnectedGCWithBuilding;&#xD;
	&#xD;
	if(earlierConnectedGC.p_roofSurfaceArea_m2 &lt; 0){&#xD;
		new RuntimeException("Negative roofsurface for GC: " + earlierConnectedGC.p_gridConnectionID + " after removal of earlier distributed building roofsurface. This should never be possible!");&#xD;
	}&#xD;
}&#xD;
&#xD;
//Connect new GC to the building now&#xD;
existingBuilding.c_containedGridConnections.add(connectingGC);&#xD;
connectingGC.c_connectedGISObjects.add(existingBuilding);&#xD;
&#xD;
&#xD;
//Adding the newly distributed roof surfaces to the gc (now including the new one!)&#xD;
int newAmountOfConnectedGCWithBuilding = currentAmountOfConnectedGCWithBuilding + 1;&#xD;
for(GridConnection connectedGC : existingBuilding.c_containedGridConnections){&#xD;
	connectedGC.p_roofSurfaceArea_m2 += buildingRoofSurface/newAmountOfConnectedGCWithBuilding;&#xD;
}&#xD;
&#xD;
//Also add the new connecting building data address floor surface&#xD;
existingBuilding.p_floorSurfaceArea_m2 += connectingBuildingData.address_floor_surface_m2();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1745336464944</Id>
						<Name>f_createHeatProfileFromGasTS</Name>
						<X>460</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>gridConnectionSurvey</Name>
							<Type>com.zenmo.zummon.companysurvey.GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>ratioGasUsedForHeating</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double gasToHeatEfficiency = 0;&#xD;
double maxHeatOutputPower_kW = 0;&#xD;
double yearlyDemandHeat_kWh = 0;&#xD;
&#xD;
&#xD;
double[] quarterHourlyGasDeliveryTimeSeries_m3 = f_timeSeriesToQuarterHourlyDoubleArray(gridConnectionSurvey.getNaturalGas().getHourlyDelivery_m3());&#xD;
&#xD;
if (quarterHourlyGasDeliveryTimeSeries_m3 == null) {&#xD;
	return false;&#xD;
}&#xD;
&#xD;
//Set the heating type &#xD;
f_setHeatingTypeSurvey(parentGC, gridConnectionSurvey, true);&#xD;
&#xD;
//Check what the heat conversion efficiency is from gas&#xD;
switch (parentGC.p_heatingType){&#xD;
	case GASBURNER:&#xD;
	case HYBRID_HEATPUMP:&#xD;
		gasToHeatEfficiency = avgc_data.p_avgEfficiencyGasBurner_fr;&#xD;
		break;&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		gasToHeatEfficiency = avgc_data.p_avgEfficiencyCHP_thermal_fr;&#xD;
		break;&#xD;
}&#xD;
&#xD;
J_EAProfile profile = new J_EAProfile(parentGC, OL_EnergyCarriers.HEAT, null, OL_ProfileAssetType.HEATDEMAND , energyModel.p_timeStep_h);		&#xD;
profile.energyAssetName = parentGC.p_ownerID + " custom heat profile";&#xD;
&#xD;
//Initialize heat demand quarterhourly profile&#xD;
double[] quarterHourlyHeatDemandProfile_kWh = new double[quarterHourlyGasDeliveryTimeSeries_m3.length];&#xD;
double totalgasconsumption_m3 = 0;&#xD;
for (int i = 0; i &lt; quarterHourlyGasDeliveryTimeSeries_m3.length; i++) {&#xD;
	quarterHourlyHeatDemandProfile_kWh[i] = quarterHourlyGasDeliveryTimeSeries_m3[i] * avgc_data.p_gas_kWhpm3 * gasToHeatEfficiency * ratioGasUsedForHeating;&#xD;
	yearlyDemandHeat_kWh += quarterHourlyHeatDemandProfile_kWh[i];&#xD;
	&#xD;
	//Keep track of max value&#xD;
	if((quarterHourlyHeatDemandProfile_kWh[i]/energyModel.p_timeStep_h) &gt; maxHeatOutputPower_kW){&#xD;
		maxHeatOutputPower_kW = quarterHourlyHeatDemandProfile_kWh[i]/energyModel.p_timeStep_h;&#xD;
	}&#xD;
	totalgasconsumption_m3 += quarterHourlyGasDeliveryTimeSeries_m3[i];&#xD;
}	&#xD;
profile.a_energyProfile_kWh = quarterHourlyHeatDemandProfile_kWh;&#xD;
&#xD;
//Update v_remainingGasConsumption_m3&#xD;
v_remainingGasConsumption_m3 -= yearlyDemandHeat_kWh/(avgc_data.p_gas_kWhpm3 * gasToHeatEfficiency * ratioGasUsedForHeating);&#xD;
&#xD;
&#xD;
//Add heat asset&#xD;
f_addHeatAsset(parentGC, parentGC.p_heatingType, maxHeatOutputPower_kW);&#xD;
&#xD;
&#xD;
return true;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1745336570663</Id>
						<Name>f_addHeatAsset</Name>
						<X>820</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>heatAssetType</Name>
							<Type>OL_GridConnectionHeatingType</Type>
						</Parameter>
						<Parameter>
							<Name>maxHeatOutputPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//Initialize parameters&#xD;
double inputCapacityElectric_kW;&#xD;
double efficiency;&#xD;
double baseTemperature_degC;&#xD;
double outputTemperature_degC;&#xD;
OL_AmbientTempType ambientTempType;&#xD;
double sourceAssetHeatPower_kW;&#xD;
double belowZeroHeatpumpEtaReductionFactor;&#xD;
&#xD;
switch (heatAssetType){ // HOE gaan we om met meerdere heating types in survey???&#xD;
&#xD;
	case GASBURNER:&#xD;
		J_EAConversionGasBurner gasBurner = new J_EAConversionGasBurner(parentGC, maxHeatOutputPower_kW , avgc_data.p_avgEfficiencyGasBurner_fr, energyModel.p_timeStep_h, 90);&#xD;
		break;&#xD;
	&#xD;
	case HYBRID_HEATPUMP:&#xD;
		&#xD;
		//Add primary heating asset (heatpump) (if its not part of the basic profile already&#xD;
		if(!parentGC.v_hasQuarterHourlyValues || settings.createCurrentElectricityEA()){&#xD;
			inputCapacityElectric_kW = maxHeatOutputPower_kW / 3; //-- /3, kan nog kleiner want is hybride zodat gasbrander ook bij springt, dus kleiner MOETEN aanname voor hoe klein onderzoeken&#xD;
			efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHeatpump;&#xD;
			baseTemperature_degC = zero_Interface.energyModel.v_currentAmbientTemperature_degC;&#xD;
			outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHeatpump_degC;&#xD;
			ambientTempType = OL_AmbientTempType.AMBIENT_AIR;&#xD;
			sourceAssetHeatPower_kW = 0;&#xD;
			belowZeroHeatpumpEtaReductionFactor = 1;&#xD;
			&#xD;
			J_EAConversionHeatPump heatPumpHybrid = new J_EAConversionHeatPump(parentGC, inputCapacityElectric_kW, efficiency, energyModel.p_timeStep_h, outputTemperature_degC, baseTemperature_degC, sourceAssetHeatPower_kW, belowZeroHeatpumpEtaReductionFactor, ambientTempType);&#xD;
&#xD;
			zero_Interface.energyModel.c_ambientDependentAssets.add(heatPumpHybrid);&#xD;
		}&#xD;
		&#xD;
		//Add secondary heating asset (gasburner)&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyGasBurner;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureGasBurner_degC;&#xD;
		&#xD;
		J_EAConversionGasBurner gasBurnerHybrid = new J_EAConversionGasBurner(parentGC, maxHeatOutputPower_kW, efficiency, energyModel.p_timeStep_h, outputTemperature_degC);&#xD;
		parentGC.p_secondaryHeatingAsset = gasBurnerHybrid;&#xD;
		break;&#xD;
	&#xD;
	case ELECTRIC_HEATPUMP:&#xD;
&#xD;
		//Add primary heating asset (heatpump)&#xD;
		inputCapacityElectric_kW = maxHeatOutputPower_kW; // Could be a lot smaller due to high cop&#xD;
		efficiency = zero_Interface.energyModel.avgc_data.p_avgEfficiencyHeatpump;&#xD;
		baseTemperature_degC = zero_Interface.energyModel.v_currentAmbientTemperature_degC;&#xD;
		outputTemperature_degC = zero_Interface.energyModel.avgc_data.p_avgOutputTemperatureHeatpump_degC;&#xD;
		ambientTempType = OL_AmbientTempType.AMBIENT_AIR;&#xD;
		sourceAssetHeatPower_kW = 0;&#xD;
		belowZeroHeatpumpEtaReductionFactor = 1;&#xD;
		&#xD;
		new J_EAConversionHeatPump(parentGC, inputCapacityElectric_kW, efficiency, energyModel.p_timeStep_h, outputTemperature_degC, baseTemperature_degC, sourceAssetHeatPower_kW, belowZeroHeatpumpEtaReductionFactor, ambientTempType );		&#xD;
		break;&#xD;
	&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		&#xD;
		double outputCapacityElectric_kW = (maxHeatOutputPower_kW/avgc_data.p_avgEfficiencyCHP_thermal_fr) * avgc_data.p_avgEfficiencyCHP_electric_fr;&#xD;
		outputTemperature_degC = avgc_data.p_avgOutputTemperatureCHP_degC;&#xD;
		efficiency = avgc_data.p_avgEfficiencyCHP_thermal_fr + avgc_data.p_avgEfficiencyCHP_electric_fr;&#xD;
		&#xD;
		new J_EAConversionGasCHP(parentGC, outputCapacityElectric_kW, maxHeatOutputPower_kW, efficiency, energyModel.p_timeStep_h, outputTemperature_degC );&#xD;
		break;&#xD;
&#xD;
	case DISTRICTHEAT:&#xD;
		&#xD;
		outputTemperature_degC = avgc_data.p_avgOutputTemperatureDistrictHeatingDeliverySet_degC;&#xD;
		efficiency = avgc_data.p_avgEfficiencyDistrictHeatingDeliverySet_fr;&#xD;
		&#xD;
		new J_EAConversionHeatDeliverySet(parentGC, maxHeatOutputPower_kW, efficiency, energyModel.p_timeStep_h, outputTemperature_degC);&#xD;
		&#xD;
		//Add GC to heat grid&#xD;
		GridNode heatgrid = findFirst(energyModel.pop_gridNodes, node -&gt; node.p_energyCarrier == OL_EnergyCarriers.HEAT);&#xD;
		if(heatgrid == null){&#xD;
			heatgrid = f_createHeatGridNode();&#xD;
		}&#xD;
		parentGC.p_parentNodeHeatID = heatgrid.p_gridNodeID;&#xD;
			&#xD;
		break;&#xD;
&#xD;
	default:&#xD;
		traceln("HEATING TYPE NOT FOUND FOR GC: " + parentGC);&#xD;
}&#xD;
&#xD;
f_addHeatManagement(parentGC);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>GridNode</ReturnType>
						<Id>1747300761144</Id>
						<Name>f_createHeatGridNode</Name>
						<X>50</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>GridNode GN_heat = energyModel.add_pop_gridNodes();&#xD;
GN_heat.p_gridNodeID = "Heatgrid";&#xD;
&#xD;
// Check wether transformer capacity is known or estimated&#xD;
GN_heat.p_capacity_kW = 1000000;	&#xD;
GN_heat.p_realCapacityAvailable = false;&#xD;
&#xD;
// Basic GN information&#xD;
GN_heat.p_description = "Warmtenet";&#xD;
&#xD;
/*&#xD;
//Owner&#xD;
GN_heat.p_ownerGridOperator = Grid_Operator;&#xD;
*/&#xD;
&#xD;
//Define node type&#xD;
GN_heat.p_nodeType = OL_GridNodeType.HT;&#xD;
GN_heat.p_energyCarrier = OL_EnergyCarriers.HEAT;&#xD;
&#xD;
//Define GN location&#xD;
GN_heat.p_latitude = 0;&#xD;
GN_heat.p_longitude = 0;&#xD;
GN_heat.setLatLon(GN_heat.p_latitude, GN_heat.p_longitude);&#xD;
&#xD;
//Create gis region&#xD;
/*&#xD;
GN.gisRegion = zero_Interface.f_createGISObject(f_createGISNodesTokens(GN));&#xD;
zero_Interface.f_styleGridNodes(GN);&#xD;
zero_Interface.c_GISNodes.add(GN.gisRegion);&#xD;
*/&#xD;
&#xD;
return GN_heat;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747829476305</Id>
						<Name>f_addSliderSolarfarm</Name>
						<X>50</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gridNodeID</Name>
							<Type>String</Type>
						</Parameter>
						<Body>c_solarfarm_data.add(0, Solarfarm_data.builder().&#xD;
isSliderGC(true).&#xD;
&#xD;
gc_id("Slider solarfarm").&#xD;
gc_name("Slider solarfarm").&#xD;
owner_id("Slider solarfarm owner").&#xD;
streetname(null).&#xD;
house_number(null).&#xD;
house_letter(null).&#xD;
house_addition(null).&#xD;
postalcode(null).&#xD;
city(null).&#xD;
gridnode_id(gridNodeID).&#xD;
initially_active(false).&#xD;
&#xD;
capacity_electric_kw(0.0).&#xD;
connection_capacity_kw(0.0).&#xD;
contracted_delivery_capacity_kw(0.0).&#xD;
contracted_feed_in_capacity_kw(0.0).&#xD;
&#xD;
latitude(0).&#xD;
longitude(0).&#xD;
polygon(null).&#xD;
build());</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747829476307</Id>
						<Name>f_addSliderWindfarm</Name>
						<X>50</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gridNodeID</Name>
							<Type>String</Type>
						</Parameter>
						<Body>c_windfarm_data.add(0, Windfarm_data.builder().&#xD;
isSliderGC(true).&#xD;
&#xD;
gc_id("Slider windfarm").&#xD;
gc_name("Slider windfarm").&#xD;
owner_id("Slider windfarm owner").&#xD;
streetname(null).&#xD;
house_number(null).&#xD;
house_letter(null).&#xD;
house_addition(null).&#xD;
postalcode(null).&#xD;
city(null).&#xD;
gridnode_id(gridNodeID).&#xD;
initially_active(false).&#xD;
&#xD;
capacity_electric_kw(0.0).&#xD;
connection_capacity_kw(0.0).&#xD;
contracted_delivery_capacity_kw(0.0).&#xD;
contracted_feed_in_capacity_kw(0.0).&#xD;
&#xD;
latitude(0).&#xD;
longitude(0).&#xD;
polygon(null).&#xD;
build());&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747829476311</Id>
						<Name>f_addSliderBattery</Name>
						<X>50</X>
						<Y>368</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gridNodeID</Name>
							<Type>String</Type>
						</Parameter>
						<Body>c_battery_data.add(0, Battery_data.builder().&#xD;
isSliderGC(true).&#xD;
&#xD;
gc_id("Slider battery").&#xD;
gc_name("Slider battery").&#xD;
owner_id("Slider battery owner").&#xD;
streetname(null).&#xD;
house_number(null).&#xD;
house_letter(null).&#xD;
house_addition(null).&#xD;
postalcode(null).&#xD;
city(null).&#xD;
gridnode_id(gridNodeID).&#xD;
initially_active(false).&#xD;
&#xD;
capacity_electric_kw(0.0).&#xD;
connection_capacity_kw(0.0).&#xD;
contracted_delivery_capacity_kw(0.0).&#xD;
contracted_feed_in_capacity_kw(0.0).&#xD;
&#xD;
storage_capacity_kwh(0.0).&#xD;
operation_mode(OL_BatteryOperationMode.PEAK_SHAVING_PARENT_NODE).&#xD;
latitude(0).&#xD;
longitude(0).&#xD;
polygon(null).&#xD;
build());</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1747830228830</Id>
						<Name>f_initializeSpecificSliderGC</Name>
						<X>90</X>
						<Y>182</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Create slider GC data packages for assetGC that do not have a sliderGC data package yet &#xD;
Solarfarm_data sliderSolarfarm_data = findFirst(c_solarfarm_data, sf_data -&gt; sf_data.isSliderGC());&#xD;
Windfarm_data sliderWindfarm_data = findFirst(c_windfarm_data, wf_data -&gt; wf_data.isSliderGC());&#xD;
Battery_data sliderBattery_data = findFirst(c_battery_data, bat_data -&gt; bat_data.isSliderGC());&#xD;
&#xD;
//Get top gridnode id&#xD;
GridNode_data topGridNode = findFirst(c_gridNode_data, node_data -&gt; node_data.type().equals("HVMV"));&#xD;
if ( topGridNode == null ) {&#xD;
	throw new RuntimeException("Unable to find top GridNode of type HVMV to create slider assets.");&#xD;
}&#xD;
String topGridNodeID = topGridNode.gridnode_id();&#xD;
&#xD;
&#xD;
if(sliderSolarfarm_data == null){&#xD;
	f_addSliderSolarfarm(topGridNodeID);&#xD;
}&#xD;
if(sliderWindfarm_data == null){&#xD;
	f_addSliderWindfarm(topGridNodeID);&#xD;
}&#xD;
if(project_data.project_type() == OL_ProjectType.RESIDENTIAL){&#xD;
	for(GridNode_data nodeData : c_gridNode_data){&#xD;
		f_addSliderBattery(nodeData.gridnode_id());&#xD;
	}&#xD;
}&#xD;
else{&#xD;
	if(sliderBattery_data == null){&#xD;
		f_addSliderBattery(topGridNodeID);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>J_ProfilePointer</ReturnType>
						<Id>1749125189323</Id>
						<Name>f_createEngineProfile</Name>
						<Description>Functie van gillis voor inladen weer data!</Description>
						<X>99</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>profileID</Name>
							<Type>String</Type>
						</Parameter>
						<Parameter>
							<Name>arguments</Name>
							<Type>double[]</Type>
						</Parameter>
						<Parameter>
							<Name>values</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>TableFunction tf_profile = new TableFunction(arguments, values, TableFunction.InterpolationType.INTERPOLATION_LINEAR, 2, TableFunction.OutOfRangeAction.OUTOFRANGE_REPEAT, 0.0);&#xD;
J_ProfilePointer profilePointer = new J_ProfilePointer(profileID, tf_profile);&#xD;
energyModel.f_addProfile(profilePointer);&#xD;
return profilePointer;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749138089965</Id>
						<Name>f_setEngineProfiles</Name>
						<Description>Functie van gillis voor inladen weer data!</Description>
						<X>80</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Profile Arguments&#xD;
double[] a_arguments_hr = ListUtil.doubleListToArray(defaultProfiles_data.arguments_hr());&#xD;
&#xD;
//Weather data&#xD;
double[] a_ambientTemperatureProfile_degC = ListUtil.doubleListToArray(defaultProfiles_data.ambientTemperatureProfile_degC());&#xD;
double[] a_PVProductionProfile35DegSouth_fr = ListUtil.doubleListToArray(defaultProfiles_data.PVProductionProfile35DegSouth_fr());&#xD;
double[] a_PVProductionProfile15DegEastWest_fr = ListUtil.doubleListToArray(defaultProfiles_data.PVProductionProfile15DegEastWest_fr());&#xD;
double[] a_windProductionProfile_fr = ListUtil.doubleListToArray(defaultProfiles_data.windProductionProfile_fr());&#xD;
&#xD;
//EPEX data&#xD;
double[] a_epexProfile_eurpMWh = ListUtil.doubleListToArray(defaultProfiles_data.epexProfile_eurpMWh()); &#xD;
&#xD;
//Various demand data&#xD;
double[] a_defaultHouseElectricityDemandProfile_fr = ListUtil.doubleListToArray(defaultProfiles_data.defaultHouseElectricityDemandProfile_fr());&#xD;
double[] a_defaultHouseHotWaterDemandProfile_fr = ListUtil.doubleListToArray(defaultProfiles_data.defaultHouseHotWaterDemandProfile_fr());&#xD;
double[] a_defaultHouseCookingDemandProfile_fr = ListUtil.doubleListToArray(defaultProfiles_data.defaultHouseCookingDemandProfile_fr());&#xD;
double[] a_defaultOfficeElectricityDemandProfile_fr = ListUtil.doubleListToArray(defaultProfiles_data.defaultOfficeElectricityDemandProfile_fr());&#xD;
double[] a_defaultBuildingHeatDemandProfile_fr = ListUtil.doubleListToArray(defaultProfiles_data.defaultBuildingHeatDemandProfile_fr());&#xD;
&#xD;
//Create Weather engine profiles&#xD;
energyModel.pp_ambientTemperature_degC = f_createEngineProfile("ambient_temperature_degC", a_arguments_hr, a_ambientTemperatureProfile_degC);&#xD;
energyModel.pp_PVProduction35DegSouth_fr = f_createEngineProfile("pv_production_south_fr", a_arguments_hr, a_PVProductionProfile35DegSouth_fr);&#xD;
energyModel.pp_PVProduction15DegEastWest_fr = f_createEngineProfile("pv_production_eastwest_fr", a_arguments_hr, a_PVProductionProfile15DegEastWest_fr);&#xD;
energyModel.pp_windProduction_fr = f_createEngineProfile("wind_production_fr", a_arguments_hr, a_windProductionProfile_fr);&#xD;
&#xD;
//Create Epex engine profile&#xD;
energyModel.pp_dayAheadElectricityPricing_eurpMWh = f_createEngineProfile("epex_price_eurpMWh", a_arguments_hr, a_epexProfile_eurpMWh);&#xD;
&#xD;
//Create Consumption engine profiles:&#xD;
f_createEngineProfile("default_house_electricity_demand_fr", a_arguments_hr, a_defaultHouseElectricityDemandProfile_fr);&#xD;
f_createEngineProfile("default_house_hot_water_demand_fr", a_arguments_hr, a_defaultHouseHotWaterDemandProfile_fr);&#xD;
f_createEngineProfile("default_house_cooking_demand_fr", a_arguments_hr, a_defaultHouseCookingDemandProfile_fr);&#xD;
f_createEngineProfile("default_office_electricity_demand_fr", a_arguments_hr, a_defaultOfficeElectricityDemandProfile_fr);&#xD;
f_createEngineProfile("default_building_heat_demand_fr", a_arguments_hr, a_defaultBuildingHeatDemandProfile_fr);&#xD;
&#xD;
&#xD;
//Create custom engine profiles&#xD;
for(CustomProfile_data customProfile : c_customProfiles_data){&#xD;
	f_createEngineProfile(customProfile.customProfileID(), customProfile.getArgumentsArray(), customProfile.getValuesArray());&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749628581470</Id>
						<Name>f_addGridNodeProfile</Name>
						<X>70</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gridnode</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Parameter>
							<Name>profile_data_kWh</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>//Create gridconnection where the profile is attached to&#xD;
GridConnection GC_GridNode_profile = energyModel.add_pop_gridConnections();&#xD;
&#xD;
//Set GC id&#xD;
GC_GridNode_profile.p_gridConnectionID = "GridNode " + gridnode.p_gridNodeID + " profile GC";&#xD;
&#xD;
//Set gridnode as parent&#xD;
GC_GridNode_profile.p_parentNodeElectricID = gridnode.p_gridNodeID;&#xD;
&#xD;
//Set capacity same as gridnode&#xD;
GC_GridNode_profile.v_liveConnectionMetaData.physicalCapacity_kW = gridnode.p_capacity_kW;&#xD;
GC_GridNode_profile.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = gridnode.p_capacity_kW;&#xD;
GC_GridNode_profile.v_liveConnectionMetaData.contractedFeedinCapacity_kW = gridnode.p_capacity_kW;&#xD;
&#xD;
GC_GridNode_profile.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
GC_GridNode_profile.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
GC_GridNode_profile.v_liveConnectionMetaData.physicalCapacityKnown = false;&#xD;
&#xD;
//Set lat lon same as gridnode&#xD;
GC_GridNode_profile.p_latitude = gridnode.p_latitude; // Get latitude of first building (only used to get nearest trafo)&#xD;
GC_GridNode_profile.p_longitude = gridnode.p_longitude; // Get longitude of first building (only used to get nearest trafo)&#xD;
&#xD;
if(project_data.gridnode_profile_timestep_hr() == null){&#xD;
	new RuntimeException("Trying to load in gridnode profiles, without specifying the timestep of the data in the project_data");&#xD;
}&#xD;
&#xD;
double profileTimestep_hr = project_data.gridnode_profile_timestep_hr();&#xD;
&#xD;
//Add profile to the GC&#xD;
J_EAProfile profile = new J_EAProfile(GC_GridNode_profile, OL_EnergyCarriers.ELECTRICITY, profile_data_kWh, OL_ProfileAssetType.ELECTRICITYBASELOAD, profileTimestep_hr);	&#xD;
profile.setStartTime_h(v_simStartHour_h);&#xD;
profile.energyAssetName = "GridNode " + gridnode.p_gridNodeID + " profile";&#xD;
&#xD;
//Set boolean has profile data true&#xD;
gridnode.p_hasProfileData = true;&#xD;
c_gridNodeIDsWithProfiles.add(gridnode.p_gridNodeID);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>J_ChargingSession</ReturnType>
						<Id>1749648772203</Id>
						<Name>f_createChargingSession</Name>
						<X>490</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>chargingSessionData</Name>
							<Type>String</Type>
						</Parameter>
						<Body>String[] chargingSessionInfo = chargingSessionData.split("/"); &#xD;
&#xD;
int startIndex = Integer.parseInt(chargingSessionInfo[0]);&#xD;
int endIndex = Integer.parseInt(chargingSessionInfo[1]);&#xD;
double chargingDemand_kWh = Double.parseDouble(chargingSessionInfo[2]);&#xD;
double batteryCap_kWh = Double.parseDouble(chargingSessionInfo[3]);&#xD;
double chargingPower_kW = Double.parseDouble(chargingSessionInfo[5]);&#xD;
int socket = Integer.parseInt(chargingSessionInfo[6]);&#xD;
&#xD;
return new J_ChargingSession(startIndex, endIndex, chargingDemand_kWh, batteryCap_kWh, chargingPower_kW, socket, 0.25);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;J_ChargingSession&gt; </ReturnType>
						<Id>1749649169603</Id>
						<Name>f_createNewChargerProfile</Name>
						<X>470</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>chargerProfileData</Name>
							<Type>ChargerProfile_data</Type>
						</Parameter>
						<Body>// example: 2/54/50.3/72.1/21.8/10.8/2&#xD;
List&lt;String&gt; chargerProfileDataValues = chargerProfileData.valuesList();&#xD;
List&lt;J_ChargingSession&gt; chargerProfile = new ArrayList&lt;J_ChargingSession&gt;();		&#xD;
&#xD;
for(int i = 0; i &lt; chargerProfileDataValues.size(); i++){&#xD;
	chargerProfile.add(f_createChargingSession(chargerProfileDataValues.get(i)));&#xD;
}&#xD;
&#xD;
return chargerProfile;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;J_ChargingSession&gt; </ReturnType>
						<Id>1749649390125</Id>
						<Name>f_getChargerProfile</Name>
						<X>450</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>List&lt;J_ChargingSession&gt; chargerProfile;&#xD;
int randomIndex;&#xD;
&#xD;
if(c_chargerProfiles_data.size()&gt;0){&#xD;
	randomIndex = uniform_discr(0, c_chargerProfiles_data.size() - 1);&#xD;
	chargerProfile = f_createNewChargerProfile(c_chargerProfiles_data.get(randomIndex));&#xD;
	c_chargerProfiles_data.remove(randomIndex);&#xD;
	energyModel.c_chargerProfiles.add(chargerProfile);&#xD;
}&#xD;
else{&#xD;
	randomIndex = uniform_discr(0, energyModel.c_chargerProfiles.size() - 1);&#xD;
	chargerProfile = energyModel.c_chargerProfiles.get(randomIndex);&#xD;
}&#xD;
&#xD;
return chargerProfile;</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749726189312</Id>
						<Name>f_addCookingAsset</Name>
						<X>820</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gc</Name>
							<Type>GCHouse</Type>
						</Parameter>
						<Parameter>
							<Name>CookingType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>yearlyCookingDemand_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Body>switch(CookingType){&#xD;
&#xD;
	case ELECTRIC_HOB:&#xD;
		new J_EAConsumption(gc, OL_EnergyAssetType.ELECTRIC_HOB, "default_house_cooking_demand_fr", yearlyCookingDemand_kWh, OL_EnergyCarriers.ELECTRICITY, energyModel.p_timeStep_h, null);&#xD;
		gc.p_cookingMethod = OL_HouseholdCookingMethod.ELECTRIC;&#xD;
		traceln("Initial conditions of cooking has Electric cooking. TODO make sure the v_nbHousesWIthECooking is set correctly in electricity tab");&#xD;
		break;&#xD;
		&#xD;
	case GAS_PIT:&#xD;
		new J_EAConsumption(gc, OL_EnergyAssetType.GAS_PIT, "default_house_cooking_demand_fr", yearlyCookingDemand_kWh, OL_EnergyCarriers.METHANE, energyModel.p_timeStep_h, null);&#xD;
		gc.p_cookingMethod = OL_HouseholdCookingMethod.GAS;&#xD;
		break;&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749726279652</Id>
						<Name>f_addHotWaterDemand</Name>
						<X>820</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>houseGC</Name>
							<Type>GCHouse</Type>
						</Parameter>
						<Parameter>
							<Name>surface_m2</Name>
							<Type>double</Type>
						</Parameter>
						<Body>int aantalBewoners;&#xD;
if( surface_m2 &gt; 150){&#xD;
	aantalBewoners = uniform_discr(2,6);&#xD;
}&#xD;
else if (surface_m2 &gt; 50){&#xD;
	aantalBewoners = uniform_discr(1,4);&#xD;
}&#xD;
else {&#xD;
	aantalBewoners = uniform_discr(1,2);&#xD;
}&#xD;
 &#xD;
double yearlyHWD_kWh = aantalBewoners * 600;  //12 * surface_m2 * 3 ; Tamelijk willekeurige formule om HWD te schalen tussen 600 - 2400 kWh bij 50m2 tot 200m2, voor een quickfix&#xD;
&#xD;
J_EAConsumption hotwaterDemand = new J_EAConsumption( houseGC, OL_EnergyAssetType.HOT_WATER_CONSUMPTION, "default_house_hot_water_demand_fr", yearlyHWD_kWh, OL_EnergyCarriers.HEAT, energyModel.p_timeStep_h, null);&#xD;
&#xD;
//traceln("yearlyHWD_kWh "+ yearlyHWD_kWh);&#xD;
if( surface_m2 &gt; 200){&#xD;
	//traceln("House created with " + surface_m2 + "m2 surace area, will have large hot water demand");&#xD;
}&#xD;
if (surface_m2 &lt; 25){&#xD;
	//traceln("House created with " + surface_m2 + "m2 surace area, will have low hot water demand");&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749727623536</Id>
						<Name>f_addBuildingHeatModel</Name>
						<X>820</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>floorArea_m2</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double maxPowerHeat_kW = 1000; 				//Dit is hoeveel vermogen het huis kan afgeven/opnemen, mag willekeurige waarden hebben. Wordt alleen gebruikt in rekenstap van ratio of capacity&#xD;
double lossfactor_WpK; 						//Dit is wat bepaalt hoeveel warmte het huis verliest/opneemt per tijdstap per delta_T&#xD;
double initialTemp = uniform_discr(15,22); 	//starttemperatuur&#xD;
double heatCapacity_JpK; 					//hoeveel lucht zit er in je huis dat je moet verwarmen?&#xD;
double effectiveSolarAbsorptionSurface_m2; 	//hoeveel m2 effectieve dak en muur oppervlakte er is dat opwarmt door zonneinstraling&#xD;
 &#xD;
switch (parentGC.p_energyLabel){&#xD;
	case A:&#xD;
		lossfactor_WpK = 0.35 * floorArea_m2;&#xD;
	break;&#xD;
	case B:&#xD;
		lossfactor_WpK = 0.45 * floorArea_m2;&#xD;
	break;&#xD;
	case C:&#xD;
		lossfactor_WpK = 0.65 * floorArea_m2;&#xD;
	break;&#xD;
	case D:&#xD;
		lossfactor_WpK = 0.85 * floorArea_m2;&#xD;
	break;&#xD;
	default:&#xD;
		lossfactor_WpK = uniform (0.4, 1.2) * floorArea_m2;&#xD;
	break;&#xD;
}&#xD;
&#xD;
lossfactor_WpK = roundToDecimal(lossfactor_WpK,2);&#xD;
effectiveSolarAbsorptionSurface_m2 = floorArea_m2 * 0.1; //solar irradiance [W/m2]&#xD;
 &#xD;
heatCapacity_JpK = floorArea_m2 * 50000;&#xD;
 &#xD;
 &#xD;
parentGC.p_BuildingThermalAsset = new J_EABuilding( parentGC, maxPowerHeat_kW, lossfactor_WpK, energyModel.p_timeStep_h, initialTemp, heatCapacity_JpK, effectiveSolarAbsorptionSurface_m2 );&#xD;
energyModel.c_ambientDependentAssets.add( parentGC.p_BuildingThermalAsset );&#xD;
 &#xD;
double delayHeatReleaseInteriorHeatsink_hr = 0;&#xD;
double lossToExteriorFromInteriorHeatSink_fr;&#xD;
if(randomTrue(0.2)){&#xD;
	delayHeatReleaseInteriorHeatsink_hr = 3;&#xD;
}&#xD;
else {&#xD;
	delayHeatReleaseInteriorHeatsink_hr = 0.5;&#xD;
}&#xD;
&#xD;
parentGC.p_BuildingThermalAsset.addInteriorHeatBuffer(delayHeatReleaseInteriorHeatsink_hr);&#xD;
&#xD;
double delayHeatReleaseRoofAndWall_hr = 8.0;&#xD;
parentGC.p_BuildingThermalAsset.addExteriorHeatBuffer(delayHeatReleaseRoofAndWall_hr);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Building_data&gt;</ReturnType>
						<Id>1749728889982</Id>
						<Name>f_getBuildingsInSubScope</Name>
						<X>50</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialBuildingList</Name>
							<Type>List&lt;Building_data&gt;</Type>
						</Parameter>
						<Body>List&lt;Building_data&gt; scopedBuildingList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedBuildingList.addAll(initialBuildingList);&#xD;
}&#xD;
else{&#xD;
	for (Building_data dataBuilding : initialBuildingList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataBuilding.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedBuildingList.add(dataBuilding);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedBuildingList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749728889984</Id>
						<Name>f_createHouses</Name>
						<Description>Creates the houses using a single GC, and their building. After creation, they will be simulated using average values.</Description>
						<X>420</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>List&lt;Building_data&gt; buildingDataHouses = f_getBuildingsInSubScope(c_houseBuilding_data);&#xD;
&#xD;
traceln("Aantal panden met woonfunctie in BAG data: " + buildingDataHouses.size());&#xD;
&#xD;
int i = 0;&#xD;
&#xD;
//Add houses to the legend if in model&#xD;
if(buildingDataHouses.size()&gt;0){&#xD;
	zero_Interface.c_modelActiveDefaultGISBuildings.add(OL_GISBuildingTypes.HOUSE);&#xD;
}&#xD;
&#xD;
for (Building_data houseBuildingData : buildingDataHouses) {&#xD;
	GCHouse GCH = energyModel.add_Houses();&#xD;
	ConnectionOwner	COH = energyModel.add_pop_connectionOwners();&#xD;
	&#xD;
	//Set parameters for the Grid Connection&#xD;
 	GCH.p_gridConnectionID = houseBuildingData.address_id();&#xD;
	GCH.p_ownerID = "Woonhuis" + Integer.toString(i);	//aanname : huiseigenaar is eigenbaas&#xD;
&#xD;
	GCH.p_purposeBAG = houseBuildingData.purpose();&#xD;
	&#xD;
	//pand gegevens&#xD;
	GCH.p_heatingType = avgc_data.p_avgHouseHeatingMethod ;&#xD;
	GCH.p_bouwjaar = houseBuildingData.build_year();&#xD;
	GCH.p_eigenOprit = houseBuildingData.has_private_parking() != null ? houseBuildingData.has_private_parking() : false;&#xD;
	&#xD;
	//Nageisoleerd&#xD;
	if (houseBuildingData.energy_label() != null) {&#xD;
		GCH.p_energyLabel = houseBuildingData.energy_label();&#xD;
	}&#xD;
	else {&#xD;
		if (GCH.p_bouwjaar &lt; 1980) {&#xD;
			GCH.p_energyLabel = OL_GridConnectionIsolationLabel.D;&#xD;
		}&#xD;
		else if (GCH.p_bouwjaar &lt; 2000) {&#xD;
			GCH.p_energyLabel = OL_GridConnectionIsolationLabel.C;&#xD;
		}&#xD;
		else if (GCH.p_bouwjaar &lt; 2015) {&#xD;
			GCH.p_energyLabel = OL_GridConnectionIsolationLabel.B;&#xD;
		}&#xD;
		else {&#xD;
			GCH.p_energyLabel = OL_GridConnectionIsolationLabel.A;&#xD;
		}&#xD;
	}&#xD;
	//aansluiting gegevens&#xD;
	GCH.v_liveConnectionMetaData.physicalCapacity_kW = avgc_data.p_avgHouseConnectionCapacity_kW;&#xD;
	GCH.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = avgc_data.p_avgHouseConnectionCapacity_kW;&#xD;
	GCH.v_liveConnectionMetaData.contractedFeedinCapacity_kW = avgc_data.p_avgHouseConnectionCapacity_kW;&#xD;
	&#xD;
	GCH.v_liveConnectionMetaData.physicalCapacityKnown = false;&#xD;
	GCH.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
	GCH.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
	&#xD;
	// Address data&#xD;
	GCH.p_address = new J_Address();&#xD;
 	GCH.p_address.setStreetName( houseBuildingData.streetname());						 	&#xD;
 	if (houseBuildingData.house_number() == null) {&#xD;
 		GCH.p_address.setHouseNumber( 0 );&#xD;
 	} else {&#xD;
 		GCH.p_address.setHouseNumber( houseBuildingData.house_number()); &#xD;
 	}&#xD;
 	GCH.p_address.setHouseLetter( houseBuildingData.house_letter());&#xD;
 	GCH.p_address.setHouseAddition( houseBuildingData.house_addition());&#xD;
 	GCH.p_address.setPostalcode( houseBuildingData.postalcode());					 	&#xD;
 	GCH.p_address.setCity( houseBuildingData.city());&#xD;
&#xD;
	//locatie&#xD;
	GCH.p_longitude = houseBuildingData.longitude();&#xD;
	GCH.p_latitude = houseBuildingData.latitude();&#xD;
	GCH.setLatLon(GCH.p_latitude, GCH.p_longitude);&#xD;
	&#xD;
	//Connect GC to grid node&#xD;
	GCH.p_parentNodeElectricID = houseBuildingData.gridnode_id();&#xD;
		&#xD;
	//Set parameters for the Actor: ConnectionOwner&#xD;
	COH.p_actorID = GCH.p_ownerID;&#xD;
	COH.p_actorType = OL_ActorType.CONNECTIONOWNER;&#xD;
	COH.p_connectionOwnerType = OL_ConnectionOwnerType.HOUSEHOLD;&#xD;
	COH.p_detailedCompany = false;&#xD;
	GCH.p_owner = COH;&#xD;
	&#xD;
	&#xD;
	//Check wheter this building already exists&#xD;
	GIS_Building existingBuilding = findFirst(energyModel.pop_GIS_Buildings, gisBuilding -&gt; gisBuilding.p_id.equals(houseBuildingData.building_id()));&#xD;
	&#xD;
	if(existingBuilding == null){//Create new GIS building and connect&#xD;
		GIS_Building b = f_createGISBuilding( houseBuildingData, GCH );&#xD;
		GCH.p_roofSurfaceArea_m2 = houseBuildingData.polygon_area_m2();&#xD;
&#xD;
		//Style building&#xD;
		b.p_defaultFillColor = zero_Interface.v_houseBuildingColor;&#xD;
		b.p_defaultLineColor = zero_Interface.v_houseBuildingLineColor;&#xD;
		zero_Interface.f_styleAreas(b);&#xD;
	}&#xD;
	else{// Connect with existing building&#xD;
		f_connectGCToExistingBuilding(GCH, existingBuilding, houseBuildingData);&#xD;
	}&#xD;
	&#xD;
	//Floor surface of GC&#xD;
	GCH.p_floorSurfaceArea_m2 = houseBuildingData.address_floor_surface_m2();&#xD;
	&#xD;
	//Instantiate energy assets&#xD;
	double jaarlijksElectriciteitsVerbruik;&#xD;
	double jaarlijksGasVerbruik;&#xD;
	try {&#xD;
		jaarlijksElectriciteitsVerbruik = houseBuildingData.electricity_consumption_kwhpa();&#xD;
	}&#xD;
	catch (NullPointerException e){&#xD;
		jaarlijksElectriciteitsVerbruik = Double.valueOf(uniform_discr(1200, 3800));&#xD;
	}&#xD;
	try {&#xD;
		jaarlijksGasVerbruik = houseBuildingData.gas_consumption_kwhpa();&#xD;
	}&#xD;
	catch (NullPointerException e){&#xD;
		jaarlijksGasVerbruik =  Double.valueOf(uniform_discr(600, 2000));&#xD;
	}&#xD;
	&#xD;
	//GCH.p_initialPVpanels = houseBuildingData.pv_default();&#xD;
	GCH.v_liveAssetsMetaData.initialPV_kW = houseBuildingData.pv_installed_kwp() != null ? houseBuildingData.pv_installed_kwp() : 0;&#xD;
	GCH.v_liveAssetsMetaData.PVPotential_kW = houseBuildingData.pv_potential_kwp() != null ? houseBuildingData.pv_potential_kwp() : 0;&#xD;
&#xD;
	f_setHouseHeatingPreferences(GCH);&#xD;
	f_addEnergyAssetsToHouses(GCH, jaarlijksElectriciteitsVerbruik, jaarlijksGasVerbruik );	&#xD;
	&#xD;
	i ++;&#xD;
}	&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749728889986</Id>
						<Name>f_addEnergyAssetsToHouses</Name>
						<Description>Initialisation of the Energy assets using average values for houses</Description>
						<X>440</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>house</Name>
							<Type>GCHouse</Type>
						</Parameter>
						<Parameter>
							<Name>jaarlijksElectriciteitsVerbruik</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>jaarlijksGasVerbruik</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//Add generic electricity demand profile &#xD;
GridNode gn = randomWhere(energyModel.pop_gridNodes, x -&gt; x.p_gridNodeID.equals( house.p_parentNodeElectricID));&#xD;
if ( ! gn.p_hasProfileData ){&#xD;
	f_addElectricityDemandProfile(house, jaarlijksElectriciteitsVerbruik, null, false, "default_house_electricity_demand_fr");&#xD;
}&#xD;
&#xD;
//Add building heat model and asset&#xD;
f_addBuildingHeatModel(house, house.p_floorSurfaceArea_m2);&#xD;
house.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
double gasBurnerCapacity_kW = 50000;//40;//uniform_discr(3,5); &#xD;
f_addHeatAsset (house, house.p_heatingType, gasBurnerCapacity_kW);	&#xD;
&#xD;
//Add hot water and cooking demand&#xD;
f_addHotWaterDemand(house, house.p_floorSurfaceArea_m2);&#xD;
double yearlyCookingDemand_kWh = uniform_discr(200,600);&#xD;
f_addCookingAsset(house, OL_EnergyAssetType.GAS_PIT, yearlyCookingDemand_kWh);&#xD;
&#xD;
&#xD;
//Add pv&#xD;
double installedRooftopSolar_kW = house.v_liveAssetsMetaData.initialPV_kW != null ? house.v_liveAssetsMetaData.initialPV_kW : 0;&#xD;
if (gn.p_hasProfileData){ //dont count production if there is measured data on Node&#xD;
	installedRooftopSolar_kW = 0;&#xD;
}&#xD;
&#xD;
if (installedRooftopSolar_kW &gt; 0) {&#xD;
	f_addEnergyProduction(house, OL_EnergyAssetType.PHOTOVOLTAIC, "Residential Solar", installedRooftopSolar_kW );&#xD;
}&#xD;
&#xD;
//add TEST PT panel&#xD;
/*&#xD;
double PTCapacity_kW = house.p_roofSurfaceArea_m2*avgc_data.p_avgPTPower_kWpm2;&#xD;
f_addEnergyProduction(house, OL_EnergyAssetType.PHOTOTHERMAL, "PT Paneel", PTCapacity_kW);&#xD;
//Needed storage capacity buffer in kWh&#xD;
double heatBufferStorageCapacity_m3 = avgc_data.p_avgHeatBufferWaterVolumePerPTSurface_m3pm2 * PTCapacity_kW/avgc_data.p_avgPTPower_kWpm2;&#xD;
double deltaTempHeatBufferMinMax_k = avgc_data.p_avgMaxHeatBufferTemperature_degC - avgc_data.p_avgMinHeatBufferTemperature_degC; &#xD;
double heatBufferStorageCapacity_J = avgc_data.p_waterHeatCapacity_JpkgK/ deltaTempHeatBufferMinMax_k / (heatBufferStorageCapacity_m3*avgc_data.p_waterDensity_kgpm3);&#xD;
double heatBufferStorageCapacity_kWh = heatBufferStorageCapacity_J*3.6e6;&#xD;
f_addStorage(house, 100, heatBufferStorageCapacity_kWh, OL_EnergyAssetType.STORAGE_HEAT);&#xD;
*/&#xD;
&#xD;
&#xD;
//Oprit?&#xD;
if( house.p_eigenOprit){&#xD;
	if (randomTrue( 0.08)){&#xD;
		f_addElectricVehicle(house, OL_EnergyAssetType.ELECTRIC_VEHICLE, true, 0, 0);&#xD;
	}&#xD;
	else{&#xD;
		f_addDieselVehicle(house, OL_EnergyAssetType.DIESEL_VEHICLE, true, 0);&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	f_addDieselVehicle(house, OL_EnergyAssetType.DIESEL_VEHICLE, true, 0);&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749728889988</Id>
						<Name>f_setHouseHeatingPreferences</Name>
						<X>440</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>house</Name>
							<Type>GCHouse</Type>
						</Parameter>
						<Body>if( randomTrue(0.5) ){ //50% kans op ochtend ritme&#xD;
	house.v_nightTempSetpoint_degC = uniform_discr(12,18);&#xD;
	house.v_dayTempSetpoint_degC = uniform_discr(18, 24);&#xD;
	house.v_heatingOn_time = uniform_discr(5,10) + uniform_discr(0,4) / 4.0;&#xD;
	house.v_heatingOff_time = uniform_discr(21,23);&#xD;
	house.p_heatingKickinTreshold_degC = roundToDecimal(uniform(0,1),1);&#xD;
}&#xD;
else if (randomTrue(0.5) ){ // 25% kans op hele dag aan&#xD;
	house.v_nightTempSetpoint_degC = uniform_discr(18,21);&#xD;
	house.v_dayTempSetpoint_degC = house.v_nightTempSetpoint_degC;&#xD;
	house.v_heatingOn_time = -1;&#xD;
	house.v_heatingOff_time = 25;&#xD;
	house.p_heatingKickinTreshold_degC = roundToDecimal(uniform(0, 1),1);&#xD;
}&#xD;
else { // 25% kans op smiddags/savonds aan&#xD;
	house.v_nightTempSetpoint_degC = uniform_discr(12,18);&#xD;
	house.v_dayTempSetpoint_degC = uniform_discr(18, 24);&#xD;
	house.v_heatingOn_time = uniform_discr(14, 16) + uniform_discr(0,4) / 4.0;&#xD;
	house.v_heatingOff_time = uniform_discr(21,23);&#xD;
	house.p_heatingKickinTreshold_degC = roundToDecimal(uniform(0, 1),1);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749729268458</Id>
						<Name>f_createParkingSpots</Name>
						<X>430</X>
						<Y>870</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>List&lt;GCEnergyProduction&gt; carportGCList = new ArrayList&lt;GCEnergyProduction&gt;();&#xD;
&#xD;
for (ParkingSpace_data dataParkingSpace : f_getParkingSpacesInSubScope(c_parkingSpace_data)){&#xD;
&#xD;
	//Create parking gis object	&#xD;
	GIS_Object parkingSpace = f_createGISObject(dataParkingSpace.parking_id(), dataParkingSpace.latitude(), dataParkingSpace.longitude(), dataParkingSpace.polygon(), OL_GISObjectType.PARKING);&#xD;
	parkingSpace.p_annotation = "Parking space: " + dataParkingSpace.additional_info();&#xD;
	&#xD;
	//Set correct color and legend collection based on parking type&#xD;
	switch(dataParkingSpace.type()){&#xD;
		case PRIVATE:&#xD;
		case DISABLED:&#xD;
		case KISS_AND_RIDE:&#xD;
			parkingSpace.p_defaultFillColor = zero_Interface.v_parkingSpaceColor_private;&#xD;
			parkingSpace.p_defaultLineColor = zero_Interface.v_parkingSpaceLineColor_private;&#xD;
			zero_Interface.c_modelActiveParkingSpaceTypes.add(OL_ParkingSpaceType.PRIVATE);&#xD;
			break;&#xD;
		case PUBLIC:&#xD;
			parkingSpace.p_defaultFillColor = zero_Interface.v_parkingSpaceColor_public;&#xD;
			parkingSpace.p_defaultLineColor = zero_Interface.v_parkingSpaceLineColor_public;&#xD;
			zero_Interface.c_modelActiveParkingSpaceTypes.add(OL_ParkingSpaceType.PUBLIC);&#xD;
			break;&#xD;
		case ELECTRIC:&#xD;
			parkingSpace.p_defaultFillColor = zero_Interface.v_parkingSpaceColor_electric;&#xD;
			parkingSpace.p_defaultLineColor = zero_Interface.v_parkingSpaceLineColor_electric;&#xD;
			zero_Interface.c_modelActiveParkingSpaceTypes.add(OL_ParkingSpaceType.ELECTRIC);		&#xD;
			break;&#xD;
	}&#xD;
	&#xD;
	//Add to ordered collection on the interface&#xD;
	zero_Interface.c_orderedParkingSpaces.add(parkingSpace);&#xD;
&#xD;
	//Style gis object&#xD;
	parkingSpace.f_style(null, null, null, null);	&#xD;
	&#xD;
	//Get energyProduction GC	&#xD;
	GCEnergyProduction carportGC = findFirst(carportGCList, gc -&gt; gc.p_parentNodeElectricID.equals(dataParkingSpace.gridnode_id()));&#xD;
	&#xD;
	if(carportGC == null){ // If non existend -&gt; Create one.&#xD;
		carportGC = energyModel.add_EnergyProductionSites();&#xD;
		carportGC.p_gridConnectionID = "Parking space gridconnection: " + dataParkingSpace.parking_id();&#xD;
		carportGC.v_liveConnectionMetaData.physicalCapacity_kW = dataParkingSpace.pv_potential_kwp();&#xD;
		carportGC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW = 0.0;&#xD;
		carportGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW = dataParkingSpace.pv_potential_kwp();&#xD;
		&#xD;
		carportGC.v_liveConnectionMetaData.physicalCapacityKnown = false;&#xD;
		carportGC.v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
		carportGC.v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
		&#xD;
		carportGC.p_parentNodeElectricID = dataParkingSpace.gridnode_id();&#xD;
&#xD;
		carportGC.p_latitude = dataParkingSpace.latitude();		&#xD;
		carportGC.p_longitude = dataParkingSpace.longitude();&#xD;
		&#xD;
		//Address&#xD;
		carportGC.p_address = new J_Address();&#xD;
		carportGC.p_address.setStreetName(dataParkingSpace.street());&#xD;
		&#xD;
		//CO&#xD;
		ConnectionOwner COC = energyModel.add_pop_connectionOwners(); // Create Connection owner company&#xD;
			&#xD;
		COC.p_actorID = "Parking space connection owner: " + dataParkingSpace.parking_id();&#xD;
		COC.p_actorType = OL_ActorType.CONNECTIONOWNER;&#xD;
		COC.p_connectionOwnerType = OL_ConnectionOwnerType.PARKINGSPACE_OP;&#xD;
		COC.p_detailedCompany = false;&#xD;
		COC.b_dataSharingAgreed = true;&#xD;
		&#xD;
		carportGC.p_owner = COC;&#xD;
		carportGC.p_ownerID = COC.p_actorID;&#xD;
		&#xD;
		//Add to collections&#xD;
		parkingSpace.c_containedGridConnections.add(carportGC);&#xD;
		carportGC.c_connectedGISObjects.add(parkingSpace);&#xD;
		carportGCList.add(carportGC);&#xD;
	}&#xD;
	else{&#xD;
		carportGC.v_liveConnectionMetaData.physicalCapacity_kW += dataParkingSpace.pv_potential_kwp();&#xD;
		carportGC.v_liveConnectionMetaData.contractedFeedinCapacity_kW += dataParkingSpace.pv_potential_kwp();&#xD;
		&#xD;
		//Add to collections&#xD;
		parkingSpace.c_containedGridConnections.add(carportGC);&#xD;
		carportGC.c_connectedGISObjects.add(parkingSpace);&#xD;
	}&#xD;
	&#xD;
	//Update pv potential of carport energy production site&#xD;
	carportGC.v_liveAssetsMetaData.PVPotential_kW += dataParkingSpace.pv_potential_kwp() != null ? dataParkingSpace.pv_potential_kwp() : 0;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Solarfarm_data&gt;</ReturnType>
						<Id>1749739602491</Id>
						<Name>f_getSolarfarmsInSubScope</Name>
						<X>50</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialSolarfarmsList</Name>
							<Type>List&lt;Solarfarm_data&gt;</Type>
						</Parameter>
						<Body>List&lt;Solarfarm_data&gt; scopedSolarfarmsList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedSolarfarmsList.addAll(initialSolarfarmsList);&#xD;
}&#xD;
else{&#xD;
	for (Solarfarm_data dataSolarfarm : initialSolarfarmsList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataSolarfarm.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedSolarfarmsList.add(dataSolarfarm);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedSolarfarmsList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Windfarm_data&gt;</ReturnType>
						<Id>1750857080998</Id>
						<Name>f_getWindfarmsInSubScope</Name>
						<X>50</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialWindfarmsList</Name>
							<Type>List&lt;Windfarm_data&gt;</Type>
						</Parameter>
						<Body>List&lt;Windfarm_data&gt; scopedWindfarmsList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedWindfarmsList.addAll(initialWindfarmsList);&#xD;
}&#xD;
else{&#xD;
	for (Windfarm_data dataWindfarm : initialWindfarmsList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataWindfarm.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedWindfarmsList.add(dataWindfarm);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedWindfarmsList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Chargingstation_data&gt;</ReturnType>
						<Id>1750857082460</Id>
						<Name>f_getChargingstationsInSubScope</Name>
						<X>50</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialChargingstationsList</Name>
							<Type>List&lt;Chargingstation_data&gt;</Type>
						</Parameter>
						<Body>List&lt;Chargingstation_data&gt; scopedChargingstationsList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedChargingstationsList.addAll(initialChargingstationsList);&#xD;
}&#xD;
else{&#xD;
	for (Chargingstation_data dataChargingstation : initialChargingstationsList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataChargingstation.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedChargingstationsList.add(dataChargingstation);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedChargingstationsList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Electrolyser_data&gt;</ReturnType>
						<Id>1750857083468</Id>
						<Name>f_getElectrolysersInSubScope</Name>
						<X>50</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialElectrolysersList</Name>
							<Type>List&lt;Electrolyser_data&gt;</Type>
						</Parameter>
						<Body>List&lt;Electrolyser_data&gt; scopedElectrolysersList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedElectrolysersList.addAll(initialElectrolysersList);&#xD;
}&#xD;
else{&#xD;
	for (Electrolyser_data dataElectrolyser : initialElectrolysersList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataElectrolyser.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedElectrolysersList.add(dataElectrolyser);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedElectrolysersList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;ParkingSpace_data&gt;</ReturnType>
						<Id>1750857084547</Id>
						<Name>f_getParkingSpacesInSubScope</Name>
						<X>50</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialParkingSpaceList</Name>
							<Type>List&lt;ParkingSpace_data&gt;</Type>
						</Parameter>
						<Body>List&lt;ParkingSpace_data&gt; scopedParkingSpacesList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedParkingSpacesList.addAll(initialParkingSpaceList);&#xD;
}&#xD;
else{&#xD;
	for (ParkingSpace_data dataParkingSpace : initialParkingSpaceList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataParkingSpace.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedParkingSpacesList.add(dataParkingSpace);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedParkingSpacesList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Battery_data&gt;</ReturnType>
						<Id>1750861476829</Id>
						<Name>f_getBatteriesInSubScope</Name>
						<X>50</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>initialBatteriesList</Name>
							<Type>List&lt;Battery_data&gt;</Type>
						</Parameter>
						<Body>List&lt;Battery_data&gt; scopedBatteriesList = new ArrayList&lt;&gt;();&#xD;
&#xD;
if(settings.subscopesToSimulate() == null || settings.subscopesToSimulate().size() == 0){&#xD;
	scopedBatteriesList.addAll(initialBatteriesList);&#xD;
}&#xD;
else{&#xD;
	for (Battery_data dataBattery : initialBatteriesList) {&#xD;
		for (int i = 0; i &lt; c_gridNodeIDsInScope.size() ; i++){&#xD;
			if (dataBattery.gridnode_id().equals( c_gridNodeIDsInScope.get(i))){&#xD;
				scopedBatteriesList.add(dataBattery);&#xD;
			}&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
return scopedBatteriesList;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;Building_data&gt;</ReturnType>
						<Id>1752239414416</Id>
						<Name>f_getSurveyGCBuildingData</Name>
						<X>450</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>companyGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Parameter>
							<Name>vallumGC</Name>
							<Type>com.zenmo.zummon.companysurvey.GridConnection</Type>
						</Parameter>
						<Body>List&lt;Building_data&gt; connectedBuildingsData = new ArrayList&lt;Building_data&gt;();&#xD;
&#xD;
if ( vallumGC.getPandIds() != null &amp;&amp; !vallumGC.getPandIds().isEmpty()) {&#xD;
	for (var PID : vallumGC.getPandIds() ) {&#xD;
		List&lt;Building_data&gt; buildingsDataSameID = findAll(c_companyBuilding_data, b -&gt; b.building_id().equals(PID.getValue()));&#xD;
		Building_data connectedBuildingData = null;&#xD;
		if(buildingsDataSameID.size() == 1){ // Only one building package with same id, so this building package belongs to this GC&#xD;
			connectedBuildingData = buildingsDataSameID.get(0);&#xD;
		}&#xD;
		else{//Multiple building packages with this building id -&gt; Find the right one based on address, if none are found: pick a package without address&#xD;
			connectedBuildingData = findFirst(buildingsDataSameID, buildingData -&gt; buildingData.house_number() != null &amp;&amp; buildingData.house_number() == companyGC.p_address.getHouseNumber());&#xD;
			if(connectedBuildingData == null){ //If no matching house numbers, find first object that has no house number. &#xD;
				connectedBuildingData = findFirst(buildingsDataSameID, buildingData -&gt; buildingData.house_number() == null);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if (connectedBuildingData != null) {&#xD;
		    // Remove from company building data and add to survey&#xD;
		    c_companyBuilding_data.remove(connectedBuildingData);&#xD;
		    c_surveyCompanyBuilding_data.add(connectedBuildingData);&#xD;
		    // Set trafo ID&#xD;
		    companyGC.p_parentNodeElectricID = connectedBuildingData.gridnode_id();&#xD;
		}&#xD;
		else if (map_buildingData_Vallum != null &amp;&amp; !map_buildingData_Vallum.isEmpty()) {&#xD;
		        // Create new building package&#xD;
		        connectedBuildingData = f_createBuildingData_Vallum(companyGC, PID.getValue());&#xD;
		        c_vallumBuilding_data.add(connectedBuildingData);&#xD;
		}&#xD;
		&#xD;
		if (connectedBuildingData != null) {&#xD;
			connectedBuildingsData.add(connectedBuildingData);&#xD;
		}&#xD;
	}&#xD;
} &#xD;
else {// No building connected in zorm? -&gt; check if it is manually connected in excel (using gc_id column)&#xD;
	connectedBuildingsData = findAll(c_companyBuilding_data, b -&gt; b.gc_id() != null &amp;&amp; b.gc_id().equals(companyGC.p_gridConnectionID));&#xD;
	if(connectedBuildingsData == null){&#xD;
		traceln("GC %s has no building in zorm and also no manual connection with building in excel", companyGC.p_gridConnectionID);&#xD;
	}&#xD;
	else{&#xD;
		c_companyBuilding_data.removeAll(connectedBuildingsData);&#xD;
	}&#xD;
}&#xD;
&#xD;
return connectedBuildingsData;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753784800216</Id>
						<Name>f_addHeatManagement</Name>
						<X>1130</X>
						<Y>255</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>parentGC</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>if (!parentGC.v_activeEnergyCarriers.contains(OL_EnergyCarriers.HEAT)) {&#xD;
	return;&#xD;
}&#xD;
if (parentGC.c_heatingTypes.size() == 0) {&#xD;
	return;&#xD;
}&#xD;
&#xD;
if (parentGC.p_BuildingThermalAsset == null) {&#xD;
	// profile&#xD;
	if (c_heatingTypes.size() == 1) {&#xD;
		switch(parentGC.c_heatingTypes.get(0)) {&#xD;
			case GASBURNER:&#xD;
				parentGC.&#xD;
				break;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	// thermal model&#xD;
}&#xD;
&#xD;
for (OL_GridConnectionHeatingType heatingType : parentGC.c_heatingTypes) {&#xD;
	&#xD;
}&#xD;
&#xD;
&#xD;
//Set correct primary heating method (p_heatingType) (needed for now, till model can support multiple heating types)&#xD;
if (companyGC.c_heatingTypes.size()&gt;1){&#xD;
	&#xD;
	if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.HYBRID_HEATPUMP)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;&#xD;
		return;&#xD;
	}&#xD;
	else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER) &amp;&amp; companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.HYBRID_HEATPUMP;&#xD;
		return;&#xD;
	}&#xD;
	else if (companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP;&#xD;
		return;&#xD;
	}&#xD;
	else if(companyGC.c_heatingTypes.contains(OL_GridConnectionHeatingType.GASBURNER)){&#xD;
		companyGC.p_heatingType = OL_GridConnectionHeatingType.GASBURNER;&#xD;
		return;&#xD;
	} &#xD;
}&#xD;
</Body>
					</Function>
				</Functions>
				<Connectivity>
					<TextFile>
						<Id>1750947055322</Id>
						<Name>inputCSVcookingActivities</Name>
						<X>-370</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<FileType>FILE</FileType>
						<Url>null</Url>
						<ResourceReference>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>data_Generic/inputECookerPatterns.csv</ClassName>
						</ResourceReference>
						<FileMode>READ</FileMode>
						<CharsetName>null</CharsetName>
						<Separators>,</Separators>
					</TextFile>
					<TextFile>
						<Id>1750949192704</Id>
						<Name>inputCSVhouseholdTrips</Name>
						<X>-370</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<FileType>FILE</FileType>
						<Url>null</Url>
						<ResourceReference>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>data_Generic/AlbatrossProcessedVehicleTrips.csv</ClassName>
						</ResourceReference>
						<FileMode>READ</FileMode>
						<CharsetName>null</CharsetName>
						<Separators>,</Separators>
					</TextFile>
					<TextFile>
						<Id>1750949507008</Id>
						<Name>inputCSVtruckTrips</Name>
						<X>-370</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<FileType>FILE</FileType>
						<Url>null</Url>
						<ResourceReference>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>data_Generic/inputTruckTripPatterns.csv</ClassName>
						</ResourceReference>
						<FileMode>READ</FileMode>
						<CharsetName>null</CharsetName>
						<Separators>,</Separators>
					</TextFile>
				</Connectivity>
				<AgentLinks>
					<AgentLink>
						<Id>1726584206083</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<EmbeddedObjects>
					<EmbeddedObject>
						<Id>1726584206041</Id>
						<Name>energyModel</Name>
						<X>30</X>
						<Y>890</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>EnergyModel</ClassName>
								<ItemName>1658477103138</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_timeStep_h</Name>
							</Parameter>
							<Parameter>
								<Name>p_forecastTime_h</Name>
							</Parameter>
							<Parameter>
								<Name>p_truckTripsCsv</Name>
							</Parameter>
							<Parameter>
								<Name>p_householdTripsCsv</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingPatternCsv</Name>
							</Parameter>
							<Parameter>
								<Name>p_year</Name>
							</Parameter>
							<Parameter>
								<Name>avgc_data</Name>
							</Parameter>
							<Parameter>
								<Name>b_parallelizeConnectionOwners</Name>
							</Parameter>
							<Parameter>
								<Name>b_parallelizeGridConnections</Name>
							</Parameter>
							<Parameter>
								<Name>b_enableDLR</Name>
							</Parameter>
							<Parameter>
								<Name>p_winterWeekNumber</Name>
							</Parameter>
							<Parameter>
								<Name>p_summerWeekNumber</Name>
							</Parameter>
							<Parameter>
								<Name>p_runStartTime_h</Name>
							</Parameter>
							<Parameter>
								<Name>p_runEndTime_h</Name>
							</Parameter>
							<Parameter>
								<Name>b_isInitialized</Name>
							</Parameter>
							<Parameter>
								<Name>b_storePreviousRapidRunData</Name>
							</Parameter>
							<Parameter>
								<Name>p_regionName</Name>
							</Parameter>
							<Parameter>
								<Name>p_undergroundTemperature_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_plotInterval_h</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridNodeTimeSeriesExcel</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089957</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1726584829907</Id>
						<Name>avgc_data</Name>
						<X>-370</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zerointerfaceloader</PackageName>
							<ClassName>AVGC_data</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zerointerfaceloader</PackageName>
								<ClassName>AVGC_data</ClassName>
								<ItemName>1726584205523</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_avgHouseConnectionCapacity_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHouseHeatingMethod</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgUtilityConnectionCapacity_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgUtilityHeatingMethod</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHouseElectricityConsumption_kWh_yr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHouseGasConsumption_m3_yr</Name>
							</Parameter>
							<Parameter>
								<Name>p_shareOfElectricVehicleOwnership</Name>
							</Parameter>
							<Parameter>
								<Name>p_ratioHouseInstalledPV</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHousePVInstallationPower_kWp</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVStorageCar_kWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVMaxChargePowerCar_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVStorageVan_kWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVStorageTruck_kWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVMaxChargePowerVan_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVMaxChargePowerTruck_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVEnergyConsumptionCar_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVEnergyConsumptionVan_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVEnergyConsumptionTruck_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_gas_kWhpm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_hydrogenEnergyDensity_kWh_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_hydrogenDensity_kg_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_oxygenDensity_kg_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_oxygenProduction_kgO2pkgH2</Name>
							</Parameter>
							<Parameter>
								<Name>p_hydrogenSpecificEnergy_kWh_kg</Name>
							</Parameter>
							<Parameter>
								<Name>p_diesel_kWhpl</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgDieselConsumptionCar_kmpl</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgGasolineConsumptionCar_kmpl</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasoline_kWhpl</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgDieselConsumptionCar_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgGasolineConsumptionCar_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgDieselConsumptionVan_kmpl</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgDieselConsumptionVan_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgDieselConsumptionTruck_kmpl</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgDieselConsumptionTruck_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgCOPHeatpump</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgUtilityPVPower_kWp</Name>
							</Parameter>
							<Parameter>
								<Name>p_ratioElectricTrucks</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgCompanyHeatingMethod</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgPVPower_kWpm2</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgRatioBatteryCapacity_v_Power</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHydrogenConsumptionCar_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHydrogenConsumptionVan_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHydrogenConsumptionTruck_kWhpkm</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgRatioRoofPotentialPV</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEfficiencyHeatpump_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgOutputTemperatureHeatpump_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEfficiencyGasBurner_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgOutputTemperatureGasBurner_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEfficiencyHydrogenBurner_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgOutputTemperatureHydrogenBurner_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgVehiclesPerChargePoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgAnnualTravelDistanceVan_km</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgAnnualTravelDistanceCar_km</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgAnnualTravelDistanceTruck_km</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgFullLoadHoursPV_hr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgCompanyElectricityConsumption_kWhpm2</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgCompanyGasConsumption_m3pm2</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgCompanyHeatConsumption_kWhpm2</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgSolarFieldPower_kWppha</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEfficiencyCHP_thermal_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEfficiencyCHP_electric_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgOutputTemperatureCHP_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEfficiencyDistrictHeatingDeliverySet_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgOutputTemperatureDistrictHeatingDeliverySet_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_v2gProbability</Name>
							</Parameter>
							<Parameter>
								<Name>p_v1gProbability</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgEVsPerPublicCharger</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgPTPower_kWpm2</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHeatBufferWaterVolumePerHPPower_m3pkW</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgHeatBufferWaterVolumePerPTSurface_m3pm2</Name>
							</Parameter>
							<Parameter>
								<Name>p_waterHeatCapacity_JpkgK</Name>
							</Parameter>
							<Parameter>
								<Name>p_waterDensity_kgpm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgMaxHeatBufferTemperature_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_avgMinHeatBufferTemperature_degC</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089956</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
				</EmbeddedObjects>
				<Presentation>
					<Level>
						<Id>1726584205903</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1726584205905</Id>
								<Name>rect_canvas</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>1920</Width>
								<Height>980</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1726584205907</Id>
								<Name>rect_projectDataTracking</Name>
								<X>1440</X>
								<Y>20</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-65536</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>460</Width>
								<Height>490</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1726584205909</Id>
								<Name>rect_loader</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>169</Width>
								<Height>40</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205911</Id>
								<Name>txt_input</Name>
								<X>55</X>
								<Y>7</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16744448</Color>
								<Text>Loader</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205913</Id>
								<Name>txt_timeLoggers</Name>
								<X>1470</X>
								<Y>70</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Time loggers</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205915</Id>
								<Name>rect_connectedModels</Name>
								<X>0</X>
								<Y>840</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>290</Width>
								<Height>140</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205917</Id>
								<Name>t_connectedModels</Name>
								<X>20</X>
								<Y>850</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Connected Models</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205921</Id>
								<Name>txt_projectDataTracking</Name>
								<X>1460</X>
								<Y>40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Time and data Tracking</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205923</Id>
								<Name>rect_defaultStartup</Name>
								<X>20</X>
								<Y>60</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>340</Width>
								<Height>210</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1726584205925</Id>
								<Name>rect_dataCollections</Name>
								<X>-440</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-360334</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>437</Width>
								<Height>980</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1726584205927</Id>
								<Name>rect_GridNodeFunctions</Name>
								<X>20</X>
								<Y>490</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>340</Width>
								<Height>120</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205929</Id>
								<Name>txt_loaderStartupDefault</Name>
								<X>40</X>
								<Y>70</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Loader default startup:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205931</Id>
								<Name>txt_createGridNodes</Name>
								<X>40</X>
								<Y>500</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Create Grid node functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205933</Id>
								<Name>rect_dataInput</Name>
								<X>-440</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-360334</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>169</Width>
								<Height>40</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205935</Id>
								<Name>text</Name>
								<X>-400</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-360334</Color>
								<Text>Data input</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205937</Id>
								<Name>t_inputFiles</Name>
								<X>-380</X>
								<Y>720</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Basic Input files:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205939</Id>
								<Name>t_inputFileFunctions</Name>
								<X>-400</X>
								<Y>60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Read input files to database:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1726584205941</Id>
								<Name>txt_dataCollectionFill</Name>
								<X>-400</X>
								<Y>160</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Fill the data collections:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205943</Id>
								<Name>rect_ActorFunctions</Name>
								<X>20</X>
								<Y>410</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>340</Width>
								<Height>60</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205945</Id>
								<Name>txt_createActorFunctions</Name>
								<X>40</X>
								<Y>420</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Create Actor functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1726584205947</Id>
								<Name>rect_createEnergyGC</Name>
								<X>400</X>
								<Y>660</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>360</Width>
								<Height>240</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1726584205949</Id>
								<Name>txt_createEnergyGC</Name>
								<X>410</X>
								<Y>670</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Create Energy GC functions 
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Group>
								<Id>1726584205951</Id>
								<Name>gr_consumerGC_residential</Name>
								<X>570</X>
								<Y>550</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1726584205953</Id>
										<Name>rect_createConsumerGC_Residential</Name>
										<X>-170</X>
										<Y>-110</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>360</Width>
										<Height>200</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1726584205955</Id>
										<Name>txt_createConsumerGC_Residential</Name>
										<X>-160</X>
										<Y>-100</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Create Consumer GC functions 
(Residential)</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1726584205957</Id>
								<Name>gr_consumerGC_businesspark</Name>
								<X>570</X>
								<Y>230</Y>
								<Label>
									<X>9.883</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1726584205959</Id>
										<Name>rect_createConsumerGC_Businesspark</Name>
										<X>-170</X>
										<Y>-168.017</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>360</Width>
										<Height>358.017</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1726584205961</Id>
										<Name>txt_createConsumerGC_Businesspark</Name>
										<X>-158.134</X>
										<Y>-158.134</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Create Consumer GC functions 
(Businesspark)</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1726584205963</Id>
								<Name>gr_addEAFunctions</Name>
								<X>960</X>
								<Y>200</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1726584205965</Id>
										<Name>rect_addEA</Name>
										<X>-180</X>
										<Y>-140</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>450</Width>
										<Height>420</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1726584205967</Id>
										<Name>txt_addEnergyAssetFunctions</Name>
										<X>-160</X>
										<Y>-130</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Add EA functions</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Group>
								<Id>1726584205969</Id>
								<Name>gr_createGISObjects</Name>
								<X>960</X>
								<Y>630</Y>
								<Label>
									<X>9.938</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<Rectangle>
										<Id>1726584205971</Id>
										<Name>rect_createGISObjects</Name>
										<X>-180</X>
										<Y>-120</Y>
										<Label>
											<X>10</X>
											<Y>10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<ZHeight>10</ZHeight>
										<LineWidth>2</LineWidth>
										<LineColor>-16777216</LineColor>
										<LineMaterial>null</LineMaterial>
										<LineStyle>SOLID</LineStyle>
										<Width>380</Width>
										<Height>248.024</Height>
										<Rotation>0.0</Rotation>
										<FillColor>-1</FillColor>
										<FillMaterial>null</FillMaterial>
									</Rectangle>
									<Text>
										<Id>1726584205973</Id>
										<Name>txt_createGISObjects</Name>
										<X>-161.492</X>
										<Y>-109.13</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Create GIS objects</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>1</Style>
										</Font>
										<Alignment>LEFT</Alignment>
									</Text>
								</Presentation>
							</Group>
							<Text>
								<Id>1727792637339</Id>
								<Name>txt_overwriteDatabaseValues</Name>
								<X>-400</X>
								<Y>110</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Overwrite specific database values:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1730217549237</Id>
								<Name>rect_supportFunctions</Name>
								<X>1520</X>
								<Y>750</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>390</Width>
								<Height>220</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1730217578770</Id>
								<Name>txt_supportFunctions</Name>
								<X>1550</X>
								<Y>770</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Support Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1742919550888</Id>
								<Name>rect_connectToFunctions</Name>
								<X>780</X>
								<Y>780</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>380</Width>
								<Height>130</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1742919565761</Id>
								<Name>txt_connectToFunctions</Name>
								<X>800</X>
								<Y>800</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Connect To Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1744808981703</Id>
								<Name>txt_DebuggingDataCollections</Name>
								<X>-400</X>
								<Y>870</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Data collections used for Debugging</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1747830521606</Id>
								<Name>rect_addSpecificSliderGC</Name>
								<X>20</X>
								<Y>290</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>340</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1747830569531</Id>
								<Name>txt_addSpecificSliderGC</Name>
								<X>30</X>
								<Y>300</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Add specific slider GC</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1750856789809</Id>
								<Name>rect_subScopeFunctions</Name>
								<X>20</X>
								<Y>630</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>340</Width>
								<Height>180</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1750857047506</Id>
								<Name>txt_filterSubScopeFunctions</Name>
								<X>40</X>
								<Y>640</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>SubScope filter functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
					<Level>
						<Id>1726584205975</Id>
						<Name>level1</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1726584206081</Id>
						<Name>viewArea</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1709049506453</Id>
				<Name>Z_UnusedAgent</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1709049506459</Id>
					<Name>1709049506459</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089955</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1709049506456</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1709049506460</CurrentLevel>
				<ConnectionsId>1709049506454</ConnectionsId>
				<AgentLinks>
					<AgentLink>
						<Id>1709049506454</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<Presentation>
					<Level>
						<Id>1709049506460</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1709049506453</Id>
				<Name>Z_UnusedAgent2</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1709049506460</Id>
					<Name>1709049506460</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089954</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1709107200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1709049506456</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1709049506460</CurrentLevel>
				<ConnectionsId>1709049506454</ConnectionsId>
				<AgentLinks>
					<AgentLink>
						<Id>1709049506454</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<Presentation>
					<Level>
						<Id>1709049506460</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
		</ActiveObjectClasses>
		<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
		<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
		<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
		<AbsoluteAccuracy>1.0</AbsoluteAccuracy>
		<FixedTimeStep>1.0</FixedTimeStep>
		<RelativeAccuracy>1.0</RelativeAccuracy>
		<TimeAccuracy>0.1</TimeAccuracy>
		<Frame>
			<Id>1658477089982</Id>
			<Width>1920</Width>
			<Height>980</Height>
		</Frame>
		<Database>
			<Id>1658477089953</Id>
			<Logging>false</Logging>
			<AutoExport>false</AutoExport>
			<ShutdownCompact>false</ShutdownCompact>
			<ImportSettings/>
			<ExportSettings/>
		</Database>
		<RunConfiguration ActiveObjectClassId="1658477103140">
			<Id>1658477103163</Id>
			<Name>RunConfiguration</Name>
			<MaximumMemory>4096</MaximumMemory>
			<ModelTimeProperties>
				<StopOption>Stop at specified date</StopOption>
				<InitialDate>1672531200000</InitialDate>
				<InitialTime>0.0</InitialTime>
				<FinalDate>1704067200000</FinalDate>
				<FinalTime>8760.0</FinalTime>
			</ModelTimeProperties>
			<AnimationProperties>
				<StopNever>false</StopNever>
				<ExecutionMode>realTimeScaled</ExecutionMode>
				<RealTimeScale>5.0</RealTimeScale>
				<EnableZoomAndPanning>false</EnableZoomAndPanning>
				<EnableDeveloperPanel>false</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
			</AnimationProperties>
			<Inputs/>
			<Outputs/>
		</RunConfiguration>
		<JavaClasses>
			<JavaClass>
				<Id>1715862317301</Id>
				<Name>J_scenario_Current</Name>
				<Text>/**&#xD;
 * Scenario_future&#xD;
 */	&#xD;
public class J_scenario_Current implements Serializable {&#xD;
&#xD;
	private Agent parentAgent;&#xD;
	private boolean isCurrentlyActive = true;&#xD;
	private Double currentContractDeliveryCapacity_kW = 0.0;&#xD;
	private Double currentContractFeedinCapacity_kW = 0.0;&#xD;
	private Double currentPhysicalConnectionCapacity_kW = 0.0;&#xD;
	private Integer currentPV_kW = 0;&#xD;
	//String currentPV_orient;&#xD;
	private Float currentWind_kW = 0f;&#xD;
	private Float currentBatteryPower_kW = 0f;&#xD;
	private Float currentBatteryCapacity_kWh = 0f;&#xD;
	private OL_GridConnectionHeatingType currentHeatingType = OL_GridConnectionHeatingType.NONE;&#xD;
	private Integer currentDieselCars = 0;&#xD;
	private Integer currentDieselVans = 0;&#xD;
	private Integer currentDieselTrucks = 0;&#xD;
	private Integer currentHydrogenCars = 0; &#xD;
	private Integer currentHydrogenVans = 0;&#xD;
	private Integer currentHydrogenTrucks = 0;&#xD;
	private Integer currentEVCars = 0;&#xD;
	private Integer currentEVVans = 0;&#xD;
	private Integer currentEVTrucks = 0;&#xD;
	private Double currentEVCarChargePower_kW = 0.0;&#xD;
	private Double currentEVVanChargePower_kW = 0.0;&#xD;
	private Double currentEVTruckChargePower_kW = 0.0; &#xD;
		&#xD;
		&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_scenario_Current() {&#xD;
    }&#xD;
    &#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    /*&#xD;
    public J_scenario_Current() {&#xD;
    }&#xD;
    */&#xD;
    &#xD;
    // Setters&#xD;
    public void setParentAgent(Agent parentAgent) {&#xD;
        this.parentAgent = parentAgent;&#xD;
    }&#xD;
    &#xD;
    public void setIsCurrentlyActive(boolean isCurrentlyActive) {&#xD;
        this.isCurrentlyActive = isCurrentlyActive;&#xD;
    }&#xD;
    &#xD;
    public void setCurrentContractDeliveryCapacity_kW(Double currentContractDeliveryCapacity_kW) {&#xD;
    	this.currentContractDeliveryCapacity_kW = currentContractDeliveryCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public void setCurrentContractFeedinCapacity_kW(Double currentContractFeedinCapacity_kW) {&#xD;
    	this.currentContractFeedinCapacity_kW = currentContractFeedinCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public void setCurrentPhysicalConnectionCapacity_kW(Double currentPhysicalConnectionCapacity_kW) {&#xD;
    	this.currentPhysicalConnectionCapacity_kW = currentPhysicalConnectionCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public void setCurrentPV_kW(int currentPV_kW) {&#xD;
    	this.currentPV_kW = currentPV_kW;&#xD;
    }&#xD;
    &#xD;
    /*&#xD;
    public void setCurrentPV_orient(String currentPV_orient) {&#xD;
        this.currentPV_orient = currentPV_orient;&#xD;
    }&#xD;
	*/&#xD;
    public void setCurrentWind_kW(Float currentWind_kW) {&#xD;
        this.currentWind_kW = currentWind_kW;&#xD;
    }&#xD;
&#xD;
    public void setCurrentBatteryPower_kW(Float currentBatteryPower_kW) {&#xD;
        this.currentBatteryPower_kW = currentBatteryPower_kW;&#xD;
    }&#xD;
&#xD;
    public void setCurrentBatteryCapacity_kWh(Float currentBatteryCapacity_kWh) {&#xD;
        this.currentBatteryCapacity_kWh = currentBatteryCapacity_kWh;&#xD;
    }&#xD;
&#xD;
    public void setCurrentHeatingType(OL_GridConnectionHeatingType currentHeatingType) {&#xD;
        this.currentHeatingType = currentHeatingType;&#xD;
    }&#xD;
&#xD;
    public void setCurrentDieselCars(Integer currentDieselCars) {&#xD;
        this.currentDieselCars = currentDieselCars;&#xD;
    }&#xD;
&#xD;
    public void setCurrentDieselVans(Integer currentDieselVans) {&#xD;
        this.currentDieselVans = currentDieselVans;&#xD;
    }&#xD;
&#xD;
    public void setCurrentDieselTrucks(Integer currentDieselTrucks) {&#xD;
        this.currentDieselTrucks = currentDieselTrucks;&#xD;
    }&#xD;
  &#xD;
    public void setCurrentHydrogenCars(Integer currentHydrogenCars) {&#xD;
        this.currentHydrogenCars = currentHydrogenCars;&#xD;
    }&#xD;
&#xD;
    public void setCurrentHydrogenVans(Integer currentHydrogenVans) {&#xD;
        this.currentHydrogenVans = currentHydrogenVans;&#xD;
    }&#xD;
&#xD;
    public void setCurrentHydrogenTrucks(Integer currentHydrogenTrucks) {&#xD;
        this.currentHydrogenTrucks = currentHydrogenTrucks;&#xD;
    }&#xD;
    &#xD;
    public void setCurrentEVCars(Integer currentEVCars) {&#xD;
        this.currentEVCars = currentEVCars;&#xD;
    }&#xD;
&#xD;
    public void setCurrentEVVans(Integer currentEVVans) {&#xD;
        this.currentEVVans = currentEVVans;&#xD;
    }&#xD;
&#xD;
    public void setCurrentEVTrucks(Integer currentEVTrucks) {&#xD;
        this.currentEVTrucks = currentEVTrucks;&#xD;
    }&#xD;
    &#xD;
    public void setCurrentEVCarChargePower_kW(Double currentEVCarChargePower_kW) {&#xD;
        this.currentEVCarChargePower_kW = currentEVCarChargePower_kW;&#xD;
    }&#xD;
&#xD;
    public void setCurrentEVVanChargePower_kW(Double currentEVVanChargePower_kW) {&#xD;
        this.currentEVVanChargePower_kW = currentEVVanChargePower_kW;&#xD;
    }&#xD;
&#xD;
    public void setCurrentEVTruckChargePower_kW(Double currentEVTruckChargePower_kW) {&#xD;
        this.currentEVTruckChargePower_kW = currentEVTruckChargePower_kW;&#xD;
    }&#xD;
    &#xD;
    &#xD;
    // Getters&#xD;
    public Agent getParentAgent() {&#xD;
        return parentAgent;&#xD;
    }&#xD;
    &#xD;
    public boolean getIsCurrentlyActive() {&#xD;
        return isCurrentlyActive;&#xD;
    }&#xD;
    &#xD;
    public Double getCurrentContractDeliveryCapacity_kW() {&#xD;
    	return currentContractDeliveryCapacity_kW;&#xD;
    }&#xD;
&#xD;
    public Double getCurrentContractFeedinCapacity_kW() {&#xD;
    	return currentContractFeedinCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public Double getCurrentPhysicalConnectionCapacity_kW() {&#xD;
    	return currentPhysicalConnectionCapacity_kW;&#xD;
    }    &#xD;
    	&#xD;
    public Integer getCurrentPV_kW() {&#xD;
    	if (currentPV_kW == null) {&#xD;
    		return 0;&#xD;
    	}&#xD;
        return currentPV_kW;&#xD;
    }&#xD;
    &#xD;
    /*&#xD;
    public String getCurrentPV_orient() {&#xD;
        return currentPV_orient;&#xD;
    }&#xD;
	*/&#xD;
    &#xD;
    public Float getCurrentWind_kW() {&#xD;
        return currentWind_kW;&#xD;
    }&#xD;
    &#xD;
    public Float getCurrentBatteryPower_kW() {&#xD;
        return currentBatteryPower_kW;&#xD;
    }&#xD;
    &#xD;
    public Float getCurrentBatteryCapacity_kWh() {&#xD;
        return currentBatteryCapacity_kWh;&#xD;
    }&#xD;
    &#xD;
    public OL_GridConnectionHeatingType getCurrentHeatingType() {&#xD;
        return currentHeatingType;&#xD;
    }&#xD;
	&#xD;
    public Integer getCurrentDieselCars() {&#xD;
        return currentDieselCars;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentDieselVans() {&#xD;
        return currentDieselVans;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentDieselTrucks() {&#xD;
        return currentDieselTrucks;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentHydrogenCars() {&#xD;
        return currentHydrogenCars;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentHydrogenVans() {&#xD;
        return currentHydrogenVans;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentHydrogenTrucks() {&#xD;
        return currentHydrogenTrucks;&#xD;
    }&#xD;
    &#xD;
    public Integer getCurrentEVCars() {&#xD;
        return currentEVCars;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentEVVans() {&#xD;
        return currentEVVans;&#xD;
    }&#xD;
&#xD;
    public Integer getCurrentEVTrucks() {&#xD;
        return currentEVTrucks;&#xD;
    }&#xD;
    &#xD;
    public Double getCurrentEVCarChargePower_kW() {&#xD;
        return currentEVCarChargePower_kW;&#xD;
    }&#xD;
&#xD;
    public Double getCurrentEVVanChargePower_kW() {&#xD;
        return currentEVVanChargePower_kW;&#xD;
    }&#xD;
&#xD;
    public Double getCurrentEVTruckChargePower_kW() {&#xD;
        return currentEVTruckChargePower_kW;&#xD;
    }&#xD;
&#xD;
    &#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1715862317307</Id>
				<Name>J_scenario_Future</Name>
				<Text>/**&#xD;
 * Scenario_future&#xD;
 */	&#xD;
public class J_scenario_Future implements Serializable {&#xD;
&#xD;
	private Agent parentAgent;&#xD;
	private boolean isActiveInFuture = true; //Boolean used to see if gc is active in future scenario&#xD;
	private Double requestedContractDeliveryCapacity_kW = 0.0;&#xD;
	private Double requestedContractFeedinCapacity_kW = 0.0;&#xD;
	private Double requestedPhysicalConnectionCapacity_kW = 0.0;&#xD;
	private double plannedHeatSavings = 0;&#xD;
	private OL_GridConnectionHeatingType plannedHeatingType = OL_GridConnectionHeatingType.NONE;&#xD;
	private double plannedElectricitySavings = 0;&#xD;
	private boolean plannedCurtailment = false;&#xD;
	private Integer plannedPV_kW = 0;&#xD;
	private Integer plannedPV_year;&#xD;
	private Float plannedWind_kW = 0f;&#xD;
	private Float plannedBatteryPower_kW = 0f;&#xD;
	private Float plannedBatteryCapacity_kWh = 0f;&#xD;
	//Integer plannedWind_year;&#xD;
	private double plannedTransportSavings = 0;&#xD;
	private Integer plannedEVCars = 0;&#xD;
	private Integer plannedEVVans = 0;&#xD;
	private Integer plannedEVTrucks = 0;&#xD;
	private Integer plannedHydrogenCars = 0;&#xD;
	private Integer plannedHydrogenVans = 0;&#xD;
	private Integer plannedHydrogenTrucks = 0; &#xD;
&#xD;
	&#xD;
		&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_scenario_Future() {&#xD;
    }&#xD;
    &#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    /*&#xD;
    public J_scenario_Future(Agent parentAgent, Integer plannedPV_kW, Integer plannedPV_year, Float plannedWind_kW, Integer plannedEVCars, Integer plannedEVVans, Integer plannedEVTrucks) {&#xD;
&#xD;
		&#xD;
    }&#xD;
    */&#xD;
    &#xD;
    // Setters&#xD;
    public void setParentAgent(Agent parentAgent) {&#xD;
        this.parentAgent = parentAgent;&#xD;
    }&#xD;
    &#xD;
    public void setIsActiveInFuture(boolean isActiveInFuture) {&#xD;
        this.isActiveInFuture = isActiveInFuture;&#xD;
    }&#xD;
&#xD;
    public void setRequestedContractDeliveryCapacity_kW(Double requestedContractDeliveryCapacity_kW) {&#xD;
        this.requestedContractDeliveryCapacity_kW = requestedContractDeliveryCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public void setRequestedContractFeedinCapacity_kW(Double requestedContractFeedinCapacity_kW) {&#xD;
        this.requestedContractFeedinCapacity_kW = requestedContractFeedinCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public void setRequestedPhysicalConnectionCapacity_kW(Double requestedPhysicalConnectionCapacity_kW) {&#xD;
        this.requestedPhysicalConnectionCapacity_kW = requestedPhysicalConnectionCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedHeatSavings(double plannedHeatSavings) {&#xD;
    	this.plannedHeatSavings = plannedHeatSavings;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedHeatingType(OL_GridConnectionHeatingType plannedHeatingType) {&#xD;
    	this.plannedHeatingType = plannedHeatingType;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedElectricitySavings(double plannedElectricitySavings) {&#xD;
    	this.plannedElectricitySavings = plannedElectricitySavings;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedCurtailment(boolean plannedCurtailment) {&#xD;
    	this.plannedCurtailment = plannedCurtailment;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedPV_kW(Integer plannedPV_kW) {&#xD;
        this.plannedPV_kW = plannedPV_kW;&#xD;
    }&#xD;
&#xD;
    public void setPlannedPV_year(Integer plannedPV_year) {&#xD;
        this.plannedPV_year = plannedPV_year;&#xD;
    }&#xD;
&#xD;
    public void setPlannedWind_kW(Float plannedWind_kW) {&#xD;
        this.plannedWind_kW = plannedWind_kW;&#xD;
    }&#xD;
&#xD;
    public void setPlannedBatteryPower_kW(Float plannedBatteryPower_kW) {&#xD;
        this.plannedBatteryPower_kW = plannedBatteryPower_kW;&#xD;
    }&#xD;
&#xD;
    public void setPlannedBatteryCapacity_kWh(Float plannedBatteryCapacity_kWh) {&#xD;
        this.plannedBatteryCapacity_kWh = plannedBatteryCapacity_kWh;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedTransportSavings(double plannedTransportSavings) {&#xD;
    	this.plannedTransportSavings = plannedTransportSavings;&#xD;
    }&#xD;
    &#xD;
    public void setPlannedEVCars(Integer plannedEVCars) {&#xD;
        this.plannedEVCars = plannedEVCars;&#xD;
    }&#xD;
&#xD;
    public void setPlannedEVVans(Integer plannedEVVans) {&#xD;
        this.plannedEVVans = plannedEVVans;&#xD;
    }&#xD;
&#xD;
    public void setPlannedEVTrucks(Integer plannedEVTrucks) {&#xD;
        this.plannedEVTrucks = plannedEVTrucks;&#xD;
    }&#xD;
&#xD;
    public void setPlannedHydrogenCars(Integer plannedHydrogenCars) {&#xD;
        this.plannedHydrogenCars = plannedHydrogenCars;&#xD;
    }&#xD;
&#xD;
    public void setPlannedHydrogenVans(Integer plannedHydrogenVans) {&#xD;
        this.plannedHydrogenVans = plannedHydrogenVans;&#xD;
    }&#xD;
&#xD;
    public void setPlannedHydrogenTrucks(Integer plannedHydrogenTrucks) {&#xD;
        this.plannedHydrogenTrucks = plannedHydrogenTrucks;&#xD;
    }&#xD;
    &#xD;
    &#xD;
    // Getters&#xD;
    public Agent getParentAgent() {&#xD;
        return parentAgent;&#xD;
    }&#xD;
    &#xD;
    public boolean getIsActiveInFuture() {&#xD;
        return isActiveInFuture;&#xD;
    }&#xD;
    &#xD;
    public Double getRequestedContractDeliveryCapacity_kW() {&#xD;
        return requestedContractDeliveryCapacity_kW;&#xD;
    } &#xD;
    &#xD;
    public Double getRequestedContractFeedinCapacity_kW() {&#xD;
        return requestedContractFeedinCapacity_kW;&#xD;
    } &#xD;
&#xD;
    public Double getRequestedPhysicalConnectionCapacity_kW() {&#xD;
    	return requestedPhysicalConnectionCapacity_kW;&#xD;
    }&#xD;
    &#xD;
    public double getPlannedHeatSavings() {&#xD;
    	return plannedHeatSavings;&#xD;
    }&#xD;
    &#xD;
    public OL_GridConnectionHeatingType getPlannedHeatingType() {&#xD;
    	return plannedHeatingType;&#xD;
    }&#xD;
    &#xD;
    public double getPlannedElectricitySavings() {&#xD;
    	return plannedElectricitySavings;&#xD;
    } &#xD;
    &#xD;
    public boolean getPlannedCurtailment() {&#xD;
    	return plannedCurtailment;&#xD;
    }&#xD;
    &#xD;
    public Integer getPlannedPV_kW() {&#xD;
    	if (plannedPV_kW == null) {&#xD;
    		return 0;&#xD;
    	}&#xD;
        return plannedPV_kW;&#xD;
    }&#xD;
&#xD;
    public Integer getPlannedPV_year() {&#xD;
        return plannedPV_year;&#xD;
    }&#xD;
&#xD;
    public Float getPlannedWind_kW() {&#xD;
        return plannedWind_kW;&#xD;
    }&#xD;
&#xD;
    public Float getPlannedBatteryPower_kW() {&#xD;
    	if (plannedBatteryPower_kW == null) {&#xD;
    		return 0f;&#xD;
    	}&#xD;
        return plannedBatteryPower_kW;&#xD;
    }&#xD;
    &#xD;
    public Float getPlannedBatteryCapacity_kWh() {&#xD;
    	if (plannedBatteryCapacity_kWh == null) {&#xD;
    		return 0f;&#xD;
    	}&#xD;
        return plannedBatteryCapacity_kWh;&#xD;
    }&#xD;
    &#xD;
    public double getPlannedTransportSavings() {&#xD;
    	return plannedTransportSavings;&#xD;
    }&#xD;
    &#xD;
    public Integer getPlannedEVCars() {&#xD;
        return plannedEVCars;&#xD;
    }&#xD;
&#xD;
    public Integer getPlannedEVVans() {&#xD;
        return plannedEVVans;&#xD;
    }&#xD;
&#xD;
    public Integer getPlannedEVTrucks() {&#xD;
        return plannedEVTrucks;&#xD;
    }&#xD;
    &#xD;
    public Integer getPlannedHydrogenCars() {&#xD;
        return plannedHydrogenCars;&#xD;
    }&#xD;
&#xD;
    public Integer getPlannedHydrogenVans() {&#xD;
        return plannedHydrogenVans;&#xD;
    }&#xD;
&#xD;
    public Integer getPlannedHydrogenTrucks() {&#xD;
        return plannedHydrogenTrucks;&#xD;
    }&#xD;
    &#xD;
    &#xD;
       &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206084</Id>
				<Name>Battery_data</Name>
				<Text>/**&#xD;
 * Battery_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Battery_data {&#xD;
	//Database column name&#xD;
	String gc_id;&#xD;
	String gc_name;&#xD;
	String owner_id;&#xD;
	String streetname;&#xD;
	Integer house_number;&#xD;
	String house_letter;&#xD;
	String house_addition;&#xD;
	String postalcode;&#xD;
	String city;&#xD;
	String gridnode_id;&#xD;
	boolean initially_active;&#xD;
	boolean isSliderGC;&#xD;
	double storage_capacity_kwh;&#xD;
	double capacity_electric_kw;&#xD;
	double connection_capacity_kw;&#xD;
	Double contracted_delivery_capacity_kw;&#xD;
	Double contracted_feed_in_capacity_kw;&#xD;
	OL_BatteryOperationMode operation_mode;&#xD;
	double latitude;&#xD;
	double longitude;&#xD;
	String polygon;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206085</Id>
				<Name>Building_data</Name>
				<Text>/**&#xD;
 * Building_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Building_data {&#xD;
	//Database column name&#xD;
	String address_id;&#xD;
	String building_id;	&#xD;
	Integer pand_nr;&#xD;
	Integer pandcluster_nr;&#xD;
	String streetname;&#xD;
	Integer house_number;&#xD;
	String house_letter;&#xD;
	String house_addition;&#xD;
	String postalcode;&#xD;
	String city;&#xD;
	Integer build_year;	&#xD;
	String status;&#xD;
	String purpose;&#xD;
	Double address_floor_surface_m2;	&#xD;
	Double polygon_area_m2;&#xD;
	String gc_id;&#xD;
	String annotation;&#xD;
	String extra_info;&#xD;
	Double contracted_capacity_kw;&#xD;
	Double electricity_consumption_kwhpa;&#xD;
	Double gas_consumption_kwhpa;&#xD;
	Double pv_installed_kwp;&#xD;
	Double pv_potential_kwp;&#xD;
	OL_GridConnectionIsolationLabel energy_label;&#xD;
	Boolean has_private_parking;&#xD;
	String gridnode_id;&#xD;
	Double latitude;&#xD;
	Double longitude;&#xD;
	String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206086</Id>
				<Name>Cable_data</Name>
				<Text>/**&#xD;
 * Cable_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Cable_data {&#xD;
		String fid;&#xD;
		OL_GISObjectType type; // LV_CABLE or MV_CABLE, maybe more in future&#xD;
		boolean status;&#xD;
		Double nominal_voltage_v;&#xD;
		String label;&#xD;
		String description;&#xD;
		double latitude;&#xD;
		double longitude;&#xD;
		String line;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206087</Id>
				<Name>Chargingstation_data</Name>
				<Text>/**&#xD;
 * Chargingstation_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Chargingstation_data {&#xD;
	//Database column name&#xD;
	String gc_id;&#xD;
	String gc_name;&#xD;
	String owner_id;&#xD;
	String streetname;&#xD;
	Integer house_number;&#xD;
	String house_letter;&#xD;
	String house_addition;&#xD;
	String postalcode;&#xD;
	String city;&#xD;
	String gridnode_id;&#xD;
	Double connection_capacity_kw;	&#xD;
	boolean is_charging_centre;&#xD;
	OL_EnergyAssetType vehicle_type;&#xD;
	Integer number_of_chargers;&#xD;
	double power_per_charger_kw;&#xD;
	boolean initially_active;&#xD;
	double latitude;&#xD;
	double longitude;&#xD;
	String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206088</Id>
				<Name>Electrolyser_data</Name>
				<Text>/**&#xD;
 * Electrolyser_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Electrolyser_data {&#xD;
		String gc_id;&#xD;
		String gc_name;&#xD;
		String owner_id;&#xD;
		String streetname;&#xD;
		Integer house_number;&#xD;
		String house_letter;&#xD;
		String house_addition;&#xD;
		String postalcode;&#xD;
		String city;&#xD;
		String gridnode_id;&#xD;
		boolean initially_active;&#xD;
		double capacity_electric_kw;&#xD;
		double connection_capacity_kw;&#xD;
		Double contracted_delivery_capacity_kw;&#xD;
		Double contracted_feed_in_capacity_kw;&#xD;
		OL_ElectrolyserOperationMode default_operation_mode;&#xD;
		double conversion_efficiency;&#xD;
		double min_production_ratio;&#xD;
		double idle_consumption_power_ratio;&#xD;
		double start_up_time_shutdown_s;&#xD;
		double start_up_time_standby_s;&#xD;
		double start_up_time_idle_s;&#xD;
		double load_change_time_s;&#xD;
		double latitude;&#xD;
		double longitude;&#xD;
		String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206089</Id>
				<Name>GridNode_data</Name>
				<Text>/**&#xD;
 * GridNode_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class GridNode_data {&#xD;
		String gridnode_id;&#xD;
		String fid;&#xD;
		boolean status;&#xD;
		String type;&#xD;
		String description;&#xD;
		double latitude;&#xD;
		double longitude;&#xD;
		String parent_node_id;&#xD;
		boolean is_capacity_available;&#xD;
		double capacity_kw;&#xD;
		String subscope;&#xD;
		String service_area_polygon;&#xD;
		double[] profile_data_kWh;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206090</Id>
				<Name>Neighbourhood_data</Name>
				<Text>/**&#xD;
 * Neighbourhood_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Neighbourhood_data {&#xD;
	String districtcode;&#xD;
	String districtname;&#xD;
	String neighbourhoodcode;&#xD;
	String neighbourhoodtype; // OL van maken&#xD;
	double latitude;&#xD;
	double longitude;&#xD;
	String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206091</Id>
				<Name>Parcel_data</Name>
				<Text>/**&#xD;
 * Parcel_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Parcel_data {&#xD;
		String parcel_id;&#xD;
		String name;&#xD;
		String streetname;&#xD;
		Integer house_number;&#xD;
		String house_letter;&#xD;
		String house_addition;&#xD;
		String postalcode;&#xD;
		String city;&#xD;
		double polygon_area_m2;&#xD;
		double latitude;&#xD;
		double longitude;&#xD;
		String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206093</Id>
				<Name>Project_data</Name>
				<Text>/**&#xD;
 * Project_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Project_data {&#xD;
		&#xD;
		//Project settings&#xD;
		String project_name;&#xD;
		OL_ProjectType project_type;&#xD;
		OL_SurveyType survey_type;&#xD;
		&#xD;
		//Zorm project names&#xD;
		String[] zorm_project_names;&#xD;
		&#xD;
		//Database names&#xD;
		List&lt;String[]&gt; databaseNames;&#xD;
		&#xD;
		//Map centre coordinates&#xD;
		Double map_centre_latitude;&#xD;
		Double map_centre_longitude;&#xD;
		Double map_scale;&#xD;
		&#xD;
		//Project specific actors&#xD;
		String grid_operator;&#xD;
		Boolean hasCongestionPricing;&#xD;
		String energy_coop;&#xD;
		String energy_supplier;&#xD;
		&#xD;
		//Project totals&#xD;
		Double total_electricity_consumption_companies_kWh_p_yr;&#xD;
		Double total_gas_consumption_companies_m3_p_yr;&#xD;
		Double avg_electricity_consumption_house_kWh_p_yr;&#xD;
		Double avg_gas_consumption_house_m3_p_yr;&#xD;
		Double avg_number_of_cars_per_household;&#xD;
		Integer total_cars_houses;&#xD;
		Integer total_cars_companies;&#xD;
		Integer total_vans_companies;&#xD;
		Integer total_trucks_companies;&#xD;
		&#xD;
		//Project data parameters&#xD;
		Double gridnode_profile_timestep_hr;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206094</Id>
				<Name>Settings</Name>
				<Text>/**&#xD;
 * Settings&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Settings {&#xD;
		&#xD;
		//Simulation settings&#xD;
		boolean reloadDatabase; // Reloads the excels into the project database&#xD;
		boolean createCurrentElectricityEA; // Create current Electric assets if a real electricity profile or total is present. &#xD;
											//--&gt; Put on 'false' to prevent electric assets from being made on top of real &#xD;
											//electricity total or profile, to prevent wrong energy totals.&#xD;
		boolean runHeadlessAtStartup;// Runs year simulation on starting of the model&#xD;
		Boolean showKPISummary;		// Setting used to active the KPI summary of the resultsUI. If on true, it will be shown after a year simulation&#xD;
		ArrayList&lt;String&gt; subscopesToSimulate;	// Selected subscopes to simulate (used for larger models that have memory/speed problems).&#xD;
		OL_RadioButtonSetup resultsUIRadioButtonSetup; // Selected (radiobuttons -&gt; graphs) setup for the resultsUI. &#xD;
		boolean isPublicModel; // Boolean used to control if the model should be ran in a public version mode:&#xD;
								// Connection owners where dataSharingAgreed = false, cant be clicked. Just like low level gridnodes.&#xD;
		List&lt;OL_MapOverlayTypes&gt; activeMapOverlayTypes; //If defined it will override the default map overlay setup as defined in the generic interface/loader.&#xD;
														//Add all map overlays to this list that you want to be usable in the simulation&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206095</Id>
				<Name>Solarfarm_data</Name>
				<Text>/**&#xD;
 * Solarfarm_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Solarfarm_data {&#xD;
&#xD;
		String gc_id;&#xD;
		String gc_name;&#xD;
		String owner_id;&#xD;
		String streetname;&#xD;
		Integer house_number;&#xD;
		String house_letter;&#xD;
		String house_addition;&#xD;
		String postalcode;&#xD;
		String city;&#xD;
		String gridnode_id;&#xD;
		boolean initially_active;&#xD;
		boolean isSliderGC;&#xD;
		double capacity_electric_kw;&#xD;
		double connection_capacity_kw;&#xD;
		Double contracted_delivery_capacity_kw;&#xD;
		Double contracted_feed_in_capacity_kw;&#xD;
		double latitude;&#xD;
		double longitude;&#xD;
		String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206096</Id>
				<Name>User</Name>
				<Text>/**&#xD;
 * User&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class User {&#xD;
		&#xD;
		//User&#xD;
		String PROJECT_CLIENT_ID;&#xD;
		String PROJECT_CLIENT_SECRET;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726584206097</Id>
				<Name>Windfarm_data</Name>
				<Text>/**&#xD;
 * Windfarm_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class Windfarm_data {&#xD;
		&#xD;
		String gc_id;&#xD;
		String gc_name;&#xD;
		String owner_id;&#xD;
		String streetname;&#xD;
		Integer house_number;&#xD;
		String house_letter;&#xD;
		String house_addition;&#xD;
		String postalcode;&#xD;
		String city;&#xD;
		String gridnode_id;&#xD;
		boolean initially_active;&#xD;
		boolean isSliderGC;&#xD;
		double capacity_electric_kw;&#xD;
		double connection_capacity_kw;&#xD;
		Double contracted_delivery_capacity_kw;&#xD;
		Double contracted_feed_in_capacity_kw;&#xD;
		double latitude;&#xD;
		double longitude;&#xD;
		String polygon;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1737714961123</Id>
				<Name>ListUtil</Name>
				<Text>&#xD;
public class ListUtil {&#xD;
    private ListUtil() {&#xD;
    }&#xD;
&#xD;
	static double[] doubleListToArray(List&lt;Double&gt; list) {&#xD;
		 double[] array = new double[list.size()];&#xD;
		 for (int i = 0; i &lt; array.length; i++) {&#xD;
			 array[i] = list.get(i);&#xD;
		 }&#xD;
		 return array;&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1744204067723</Id>
				<Name>J_InfoText</Name>
				<Text>/**&#xD;
 * J_InfoText&#xD;
 */	&#xD;
public class J_InfoText implements Serializable {&#xD;
&#xD;
	&#xD;
	public String lorumIpsum = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui	officia deserunt mollit anim id est laborum.";&#xD;
    &#xD;
	//// Main Interface \\\\&#xD;
	// TODO&#xD;
	&#xD;
	//// Public version&#xD;
	public String publicVersionWarning = "In de publieke variant zijn een aantal functionaliteiten uitgezet en zijn bepaalde bedrijven en hun data afgeschermd.";&#xD;
	&#xD;
	//// TABS \\\\&#xD;
	//// Electricity Tab&#xD;
    public String electricityDemandReduction = "Met deze slider kun je het basisverbruik van stroom voor huizen en bedrijven aanpassen. Een positief percentage betekent dat ze minder verbruiken dan in het basis scenario. Een negatief percentage betekent dat het verbruik is toegenomen. Dit past niet de hoeveelheid stroombehoefte aan voor specifieke apparaten die apart in het model zitten zoals warmtepompen en elektrische auto's. Zie hiervoor de besparingsslider in de tabjes warmte of transport.";&#xD;
    public String householdElectricityDemandReduction = "Met deze slider kun je het basisverbruik van stroom voor huizen aanpassen. Een positief percentage betekent dat ze minder verbruiken dan in het basis scenario. Een negatief percentage betekent dat het verbruik is toegenomen. Dit past niet de hoeveelheid stroombehoefte aan voor specifieke apparaten die apart in het model zitten zoals warmtepompen en elektrische auto's. Zie hiervoor de besparingsslider in de tabjes warmte of transport.";&#xD;
    public String companyElectricityDemandReduction = "Met deze slider kun je het basisverbruik van stroom voor bedrijven aanpassen. Een positief percentage betekent dat ze minder verbruiken dan in het basis scenario. Een negatief percentage betekent dat het verbruik is toegenomen. Dit past niet de hoeveelheid stroombehoefte aan voor specifieke apparaten die apart in het model zitten zoals warmtepompen en elektrische auto's. Zie hiervoor de besparingsslider in de tabjes warmte of transport.";&#xD;
    public String householdRooftopPV = "Met deze slider kun je instellen welk aandeel van de huizen zonnepanelen op hun dak heeft liggen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String companyRooftopPV = "Met deze slider kun je instellen welk deel van alle daken van de bedrijven zonnepanelen bevat. Het aantal zonnepanelen voor een bedrijf wordt geschaald naar het dak oppervlak van het bedrijf. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String landPV = "Met deze slider kun je instellen hoeveel zonneparken er in het model zitten. 1 hectare zonnepark heeft een piek opwek van 1 MW. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String landWind = "Met deze slider kun je instellen hoeveel windmolens er in het model zitten. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdBatteries = "Met deze slider kun je instellen welk aandeel van de huizen die zonnepanelen op hun dak hebben liggen een batterij hebben. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdPrivateParking = "Met deze slider kun je instellen welk aandeel huizen met een eigen oprit een EV heeft.";&#xD;
	public String householdPublicParking = "Met deze slider kun je instellen hoe veel publieke laadpalen er in het model zitten. Door meer publieke laadpalen toe te voegen verdwijnen er auto's die op fossiele brandstoffen rijden.";&#xD;
	public String householdGridAwareCharging = "?";&#xD;
	public String neighbourhoodBatteries = "Met deze slider kun je instellen hoeveel buurtbatterijen er in het model zitten. Deze batterijen proberen het profiel van het gehele model vlak te trekken.";		&#xD;
	public String householdElectricCooking = "Met deze slider kun je instellen welk aandeel van de huizen elektrisch koken.";&#xD;
	public String householdElectricityConsumptionGrowth = "Met deze slider kun je het basisverbruik van stroom voor huizen aanpassen. Een positief percentage betekent dat ze meer verbruiken dan in het basis scenario. Een negatief percentage betekent dat het verbruik is afgenomen. Dit past niet de hoeveelheid stroombehoefte aan voor specifieke apparaten die apart in het model zitten zoals warmtepompen en elektrische auto's. Zie hiervoor de besparingsslider in de tabjes warmte of transport.";&#xD;
	public String householdPublicChargersBehaviour = "Met deze knoppen kun je instellen wat het laadgedrag is van de publieke laadpalen. Met V1G wordt uitgesteld laden of 'slim' laden bedoeld. Met V2G kunnen de voertuigen ook terugleveren aan het net.";&#xD;
	public String householdPublicParkingV1G = "Met deze slider kun je instellen welk aandeel van de publieke laadpalen, die V1G ondersteunen, dit ook doen.";&#xD;
	public String householdPublicParkingV2G = "Met deze slider kun je instellen welk aandeel van de publieke laadpalen, die V2G ondersteunen, dit ook doen.";&#xD;
	&#xD;
	//// Heat Tab&#xD;
	// generic&#xD;
    public String heatDemandReduction = "Met deze slider kun je de behoefte aan warmte voor huizen en bedrijven aanpassen. Een positief percentage betekent dat ze minder warmte nodig hebben dan in het basis scenario. Een negatief percentage betekent dat ze meer warmte nodig hebben. Dit verandert niet de temperatuur in het gebouw, maar de benodigde hoeveelheid energie om te verwarmen. Deze slider gaat bijvoorbeeld over betere isolatie in de gebouwen.";&#xD;
	public String gasBoiler = "Met deze slider kun je instellen welk aandeel van de huizen en bedrijven verwarmen met een gasboiler. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String electricHeatpump = "Met deze slider kun je instellen welk aandeel van de huizen en bedrijven verwarmen met een elektrische warmtepomp. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String hybridHeatpump = "Met deze slider kun je instellen welk aandeel van de huizen en bedrijven verwarmen met een hybride warmtepomp. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String heatGrid = "Met deze slider kun je instellen welk aandeel van de huizen en bedrijven verwarmen via een warmtenet. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String electricBoiler = "Met deze slider kun je instellen welk aandeel van de huizen en bedrijven verwarmen met een elektrische boiler. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	// household&#xD;
	public String householdHeatDemandReduction = "Met deze slider kun je de behoefte aan warmte voor huizen aanpassen. Een positief percentage betekent dat ze minder warmte nodig hebben dan in het basis scenario. Een negatief percentage betekent dat ze meer warmte nodig hebben. Dit verandert niet de temperatuur in het gebouw, maar de benodigde hoeveelheid energie om te verwarmen. Deze slider gaat bijvoorbeeld over betere isolatie in de gebouwen.";&#xD;
	public String householdGasBoiler = "Met deze slider kun je instellen welk aandeel van de huizen verwarmen met een gasboiler. Dit heeft betrekking op het verwarmen van de ruimtes en de vraag naar warm water. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdElectricHeatpump = "Met deze slider kun je instellen welk aandeel van de huizen verwarmen met een elektrische warmtepomp. Dit heeft betrekking op het verwarmen van de ruimtes en de vraag naar warm water. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdHybridHeatpump = "Met deze slider kun je instellen welk aandeel van de huizen verwarmen met een hybride warmtepomp. Dit heeft betrekking op het verwarmen van de ruimtes en de vraag naar warm water. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdHeatGrid = "Met deze slider kun je instellen welk aandeel van de huizen verwarmen via een warmtenet. Dit heeft betrekking op het verwarmen van de ruimtes en de vraag naar warm water. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdElectricBoiler = "Met deze slider kun je instellen welk aandeel van de huizen verwarmen met een elektrische boiler. Dit heeft betrekking op het verwarmen van de ruimtes en de vraag naar warm water. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String householdHTDistrictHeating = "Met deze knop kun je alle huizen aansluiten op een hoog-temperatuur warmtenet. Als er geen warmtebron ingesteld is voor het warmtenet dan wordt de warmte als import gerekend.";&#xD;
	public String householdLTDistrictHeating = "Met deze knop kun je alle huizen aansluiten op een laag-temperatuur warmtenet. In de huizen wordt een warmtepomp geplaatst om de warmte verder op te waarderen. Als er geen warmtebron ingesteld is voor het warmtenet dan wordt de warmte als import gerekend.";&#xD;
	public String householdAirconditioning = "Met deze slider kun je instellen welk aandeel van de huizen een air conditioning unit hebben.";&#xD;
	public String householdAdditionalInsulation = "Met deze slider kun je instellen welk aandeel van de huizen extra geisoleerd zijn. Deze huizen hebben 30% minder warmtebehoefte voor het verwarmen van ruimtes.";&#xD;
	&#xD;
	// company&#xD;
	public String companyHeatDemandReduction = "Met deze slider kun je de behoefte aan warmte voor bedrijven aanpassen. Een positief percentage betekent dat ze minder warmte nodig hebben dan in het basis scenario. Een negatief percentage betekent dat ze meer warmte nodig hebben. Dit verandert niet de temperatuur in het gebouw, maar de benodigde hoeveelheid energie om te verwarmen. Deze slider gaat bijvoorbeeld over betere isolatie in de gebouwen.";&#xD;
	public String companyGasBoiler = "Met deze slider kun je instellen welk aandeel van de bedrijven verwarmen met een gasboiler. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String companyElectricHeatpump = "Met deze slider kun je instellen welk aandeel van de bedrijven verwarmen met een elektrische warmtepomp. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String companyHybridHeatpump = "Met deze slider kun je instellen welk aandeel van de bedrijven verwarmen met een hybride warmtepomp. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String companyHeatGrid = "Met deze slider kun je instellen welk aandeel van de bedrijven verwarmen via een warmtenet. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String companyElectricBoiler = "Met deze slider kun je instellen welk aandeel van de bedrijven verwarmen met een elektrische boiler. Dit heeft betrekking op het verwarmen van de ruimtes, de vraag naar warm water en eventuele bedrijfsprocessen. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
&#xD;
	//// Mobility Tab&#xD;
	public String mobilityDemandReduction = "Met deze slider kun je de hoeveelheid transportbewegingen van wagens aanpassen. Een positief percentage betekent dat ze minder kilometers per jaar rijden dan in het basis scenario. Een negatief percentage betekent dat ze meer kilometers gaan rijden. Deze slider verandert niet het aantal voertuigen.";&#xD;
	public String chargingBehaviour = "Hier kun je verschillende laadstrategieën selecteren. Standaard wordt er dom geladen, dat wil zeggen dat de wagen op moment van aankomst inprikt en op vol vermogen laad tot de batterij vol is. Bij Max Spread kijkt de wagen op moment van aankomst wanneer hij weer moet vertrekken en verdeelt hij zijn laadbehoefte gelijk over deze tijd. Bij Max Power probeert hij te laden op het maximale vermogen wat nog binnen de aansluiting past, echter als de accu daardoor niet vol zou zijn voordat de wagen vertrekt wordt aan het einde alsnog op vol vermogen geladen. Hierdoor kan de aansluitingscapaciteit alsnog worden overschreden.";&#xD;
	// trucks&#xD;
	public String electricTrucks = "Met deze slider kun je instellen welk aandeel van alle vrachtwagens elektrisch is. Als je deze slider verhoogt dan wordt eerst geprobeerd vrachtwagens die rijden op fossiele brandstof te vervangen door elektrische vrachtwagens. Eventueel daarna worden vrachtwagens die rijden op waterstof omgezet in elektrische vrachtwagens. Als je deze slider verlaagt dan worden elektrische vrachtwagens omgezet naar vrachtwagens die rijden op fossiele brandstof. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String hydrogenTrucks = "Met deze slider kun je instellen welk aandeel van alle vrachtwagens op waterstof rijdt. Als je deze slider verhoogt dan wordt eerst geprobeerd vrachtwagens die rijden op fossiele brandstof te vervangen door vrachtwagens die rijden op waterstof. Eventueel daarna worden elektrische vrachtwagens omgezet in vrachtwagens die rijden op waterstof. Als je deze slider verlaagt dan worden vrachtwagens die rijden op waterstof omgezet naar vrachtwagens die rijden op fossiele brandstof. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String fossilTrucks = "Met deze slider kun je instellen welk aandeel van alle vrachtwagens op fossiele brandstof rijdt. Als je deze slider verhoogt dan wordt eerst geprobeerd elektrische vrachtwagens te vervangen door vrachtwagens die rijden op fossiele brandstof. Eventueel daarna worden vrachtwagens die rijden op waterstof omgezet in vrachtwagens die rijden op fossiele brandstof. Als je deze slider verlaagt dan worden vrachtwagens die rijden op fossiele brandstof omgezet naar elektrische vrachtwagens. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	// vans&#xD;
	public String electricVans = "Met deze slider kun je instellen welk aandeel van alle busjes elektrisch is. Als je deze slider verhoogt dan worden busjes die rijden op fossiele brandstof vervangen door elektrische busjes. Als je deze slider verlaagt dan worden elektrische busjes omgezet naar busjes die rijden op fossiele brandstof. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String fossilVans = "Met deze slider kun je instellen welk aandeel van alle busjes op fossiele brandstof rijdt. Als je deze slider verhoogt dan worden elektrische busjes vervangen door busjes die rijden op fossiele brandstof. Als je deze slider verlaagt dan worden busjes die rijden op fossiele brandstof omgezet naar elektrische busjes. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	// cars&#xD;
	public String electricCars = "Met deze slider kun je instellen welk aandeel van alle auto's elektrisch is. Als je deze slider verhoogt dan worden auto's die rijden op fossiele brandstof vervangen door elektrische auto's. Als je deze slider verlaagt dan worden elektrische auto's omgezet naar auto's die rijden op fossiele brandstof. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
	public String fossilCars = "Met deze slider kun je instellen welk aandeel van alle auto's op fossiele brandstof rijdt. Als je deze slider verhoogt dan worden elektrische auto's vervangen door auto's die rijden op fossiele brandstof. Als je deze slider verlaagt dan worden auto's die rijden op fossiele brandstof omgezet naar elektrische auto's. De minimum waarde van de slider is gezet op de hoveelheid die al in het huidige scenario aanwezig is.";&#xD;
&#xD;
	//// E-Hub Tab&#xD;
	//TODO&#xD;
	&#xD;
	////Map overlays&#xD;
	&#xD;
	//Congestion&#xD;
	public String i_mapOverlayLegend_congestion_Degrees = "Als een GIS-object (zoals een pand of transformator) groen wordt weergegeven, is er nog voldoende beschikbare capaciteit. Een oranje object duidt erop dat tijdens de jaarsimulatie de grens van 70% van de capaciteit (voor panden: de contractcapaciteit) is overschreden. Een rood object betekent dat de volledige capaciteit (100%) is overschreden.";&#xD;
	public String i_mapOverlayLegend_congestion_Types = "Met deze knoppen kun je selecteren welk type belasting je wilt visualiseren: Afname, teruglevering, of de maximum belasting van beide.";&#xD;
	&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_InfoText() {&#xD;
    }&#xD;
    &#xD;
    //public Pair&lt;String, Integer&gt; getLorumIpsum(int width_ch, String descriptionText) {&#xD;
    	//return this.restrictWidth(descriptionText, width_ch);&#xD;
    //}&#xD;
&#xD;
    public Pair&lt;String, Integer&gt; restrictWidth( String txt, int width_ch ) {&#xD;
    	StringBuilder output = new StringBuilder();&#xD;
    	int remainingTextSize = txt.length();&#xD;
    	int currentIndex = 0;&#xD;
    	int lines = 0;&#xD;
    	while (remainingTextSize &gt; width_ch) {&#xD;
    		int i = 0;&#xD;
    		while (!Character.isWhitespace(txt.charAt(currentIndex + width_ch - i))) {&#xD;
	    		i++;&#xD;
	    		if (i &gt; width_ch) {&#xD;
	    			throw new RuntimeException("Impossible to format string to fit within width.");&#xD;
	    		}&#xD;
    		}&#xD;
			output.append(txt.substring(currentIndex, currentIndex + width_ch - i));&#xD;
    		output.append('\n');&#xD;
    		currentIndex += width_ch - i + 1;&#xD;
    		remainingTextSize -= width_ch - i + 1;&#xD;
    		lines++;&#xD;
    	}&#xD;
    	output.append(txt.substring(currentIndex, txt.length()));&#xD;
		lines++;&#xD;
    	return new Pair(output.toString(), lines);&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749138380458</Id>
				<Name>CustomProfile_data</Name>
				<Text>/**&#xD;
 * CustomProfile_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class CustomProfile_data {&#xD;
	&#xD;
	String customProfileID;&#xD;
	List&lt;Double&gt; argumentsList;&#xD;
	List&lt;Double&gt; valuesList;&#xD;
	&#xD;
	double[] getArgumentsArray() {&#xD;
		return ListUtil.doubleListToArray(argumentsList);&#xD;
	}&#xD;
	double[] getValuesArray() {&#xD;
		return ListUtil.doubleListToArray(valuesList);&#xD;
	}&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749549699201</Id>
				<Name>DefaultProfiles_data</Name>
				<Text>/**&#xD;
 * DefaultProfiles_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class DefaultProfiles_data {&#xD;
		&#xD;
	//Arguments&#xD;
	List&lt;Double&gt; arguments_hr;&#xD;
&#xD;
	// Weather data&#xD;
	List&lt;Double&gt; ambientTemperatureProfile_degC;&#xD;
	List&lt;Double&gt; PVProductionProfile35DegSouth_fr;&#xD;
	List&lt;Double&gt; PVProductionProfile15DegEastWest_fr;&#xD;
	List&lt;Double&gt; windProductionProfile_fr;&#xD;
	&#xD;
	//EPEX data&#xD;
	List&lt;Double&gt; epexProfile_eurpMWh;&#xD;
	&#xD;
	// Various demand profiles&#xD;
	List&lt;Double&gt; defaultHouseElectricityDemandProfile_fr;&#xD;
	List&lt;Double&gt; defaultHouseHotWaterDemandProfile_fr;&#xD;
	List&lt;Double&gt; defaultHouseCookingDemandProfile_fr;&#xD;
	List&lt;Double&gt; defaultOfficeElectricityDemandProfile_fr;&#xD;
	List&lt;Double&gt; defaultBuildingHeatDemandProfile_fr;&#xD;
	&#xD;
	//Maximum getters&#xD;
	public double getDefaultOfficeElectricityDemandProfileMaximum_fr() {&#xD;
		return Collections.max(defaultOfficeElectricityDemandProfile_fr);&#xD;
	}&#xD;
	public double getDefaultBuildingHeatDemandProfileMaximum_fr() {&#xD;
		return Collections.max(defaultBuildingHeatDemandProfile_fr);&#xD;
	}&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749649742298</Id>
				<Name>ChargerProfile_data</Name>
				<Text>/**&#xD;
 * ChargerProfile_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class ChargerProfile_data {&#xD;
	&#xD;
	String chargerProfileID;&#xD;
	List&lt;String&gt; valuesList;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749738288352</Id>
				<Name>ParkingSpace_data</Name>
				<Text>/**&#xD;
 * ParkingSpace_data&#xD;
 */	&#xD;
@lombok.Builder&#xD;
@lombok.Value&#xD;
@lombok.experimental.Accessors(fluent = true)&#xD;
public class ParkingSpace_data {&#xD;
	//Database column name&#xD;
	String parking_id;	&#xD;
	String street;&#xD;
	OL_ParkingSpaceType type;	&#xD;
	String additional_info;&#xD;
	&#xD;
	Double pv_potential_kwp;&#xD;
	&#xD;
	String gridnode_id;	&#xD;
&#xD;
	Double latitude;&#xD;
	Double longitude;&#xD;
	String polygon;&#xD;
}</Text>
			</JavaClass>
		</JavaClasses>
		<RequiredLibraryReference>
			<LibraryName>zero_engine</LibraryName>
			<VersionMajor>0</VersionMajor>
			<VersionMinor>0</VersionMinor>
			<VersionBuild>0</VersionBuild>
		</RequiredLibraryReference>
		<RequiredLibraryReference>
			<LibraryName>digital_twin_results</LibraryName>
			<VersionMajor>0</VersionMajor>
			<VersionMinor>0</VersionMinor>
			<VersionBuild>0</VersionBuild>
		</RequiredLibraryReference>
		<ClassPathEntry>
			<ResourceReference>
				<PackageName>zerointerfaceloader</PackageName>
				<ClassName>lombok.jar</ClassName>
			</ResourceReference>
			<Imported>true</Imported>
			<Folder>false</Folder>
		</ClassPathEntry>
		<ClassPathEntry>
			<ResourceReference>
				<PackageName>zerointerfaceloader</PackageName>
				<ClassName>vallum-production-741-d257d2f-all.jar</ClassName>
			</ResourceReference>
			<Imported>true</Imported>
			<Folder>false</Folder>
		</ClassPathEntry>
		<CloudModelUuid>ebade042-5518-4162-8eb5-f55439c67c64</CloudModelUuid>
		<ModelResources>
			<Resource>
				<Id>1658477089999</Id>
				<Path>icon_arrow.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089998</Id>
				<Path>icon_greater_than.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089997</Id>
				<Path>icon_i.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089996</Id>
				<Path>icon_loading.gif</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089995</Id>
				<Path>logo_TUe_white.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089994</Id>
				<Path>logo_zenmo.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089993</Id>
				<Path>logo_TUe_red.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089992</Id>
				<Path>noun-electricity-3408805.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089991</Id>
				<Path>noun-fire-2429630.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089990</Id>
				<Path>noun-car-1777731.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089989</Id>
				<Path>data_Generic/AlbatrossProcessedVehicleTrips.csv</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089988</Id>
				<Path>data_Generic/inputTruckTripPatterns.csv</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089987</Id>
				<Path>data_Generic/inputECookerPatterns.csv</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089986</Id>
				<Path>lombok.jar</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089985</Id>
				<Path>logo holon.png</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089983</Id>
				<Path>Export_ModelData.xlsx</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1753777513193</Id>
				<Path>vallum-production-741-d257d2f-all.jar</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
		</ModelResources>
	</Model>
	<ConvertersApplied>
		<Uuid>9f7858c9-b2c8-4ead-9244-fd08833f642b</Uuid>
		<Uuid>404652e6-561a-404c-aab2-ab7415f40ef5</Uuid>
		<Uuid>6fd6cd57-6dfe-4fc6-be0b-c74065351957</Uuid>
		<Uuid>3325dc48-3ad4-41e3-836f-dfd0e98fe1ed</Uuid>
		<Uuid>3f69ef3d-706e-41a6-8af0-11658c5eef68</Uuid>
		<Uuid>3f6fe405-e047-4304-91d6-6eee206d1106</Uuid>
		<Uuid>820d2b51-5b4a-48e7-b0b6-e46418e3c0f2</Uuid>
		<Uuid>630818fa-8975-4b70-976f-03180dce01db</Uuid>
		<Uuid>7c7e471c-004e-495e-a4ad-d840620ab38e</Uuid>
		<Uuid>3e38ff63-1f70-4ec0-b42c-e879b146785d</Uuid>
		<Uuid>b1eb86e4-14b3-405c-8257-56b80f1b485d</Uuid>
		<Uuid>d55f9fb6-86bb-45ea-9db1-79cecfa0ce91</Uuid>
		<Uuid>ab77aafd-8f02-4354-b789-928d45b1f73c</Uuid>
		<Uuid>e4f14fd7-1c4a-42e9-b91d-db2415f475db</Uuid>
		<Uuid>6d208120-6c7a-45a6-b411-402f18890d9b</Uuid>
		<Uuid>1816cdd0-177c-4973-9e88-dd8b95318556</Uuid>
		<Uuid>5c23f62f-06dc-46ad-8ead-688ec434e3e5</Uuid>
		<Uuid>5c7d7990-3f35-41eb-ae16-d0c16098acc6</Uuid>
		<Uuid>02a16c52-a834-4f30-b6af-a6aee51a294e</Uuid>
		<Uuid>f0988929-2718-4984-a1b6-c1f2ce152f1f</Uuid>
		<Uuid>1c9d9cfe-ea2b-43f9-8f62-dc31d8ed3ae1</Uuid>
		<Uuid>34cb742a-8ba4-47a7-87e6-f2685fe69e97</Uuid>
		<Uuid>4fe10751-c399-4752-94b7-30113ad45070</Uuid>
		<Uuid>c13fe5ac-6466-446e-886a-12df1431b1eb</Uuid>
		<Uuid>714f9ca2-426e-4bff-8569-2d18f58fdcf8</Uuid>
		<Uuid>045aeb5f-1087-4ac7-9702-a49404e7f7e8</Uuid>
		<Uuid>840e9a0a-de98-4b7d-a172-f9bbda2d6b98</Uuid>
		<Uuid>e342358b-75ed-4812-9376-6043fb6cb473</Uuid>
		<Uuid>f3d5ccdc-1bb3-466f-871d-f6b92a26cbb4</Uuid>
		<Uuid>59acb6fb-561c-4038-b722-a596a748b3c7</Uuid>
		<Uuid>be7e6726-05c0-4228-821d-a8df91aeb5bc</Uuid>
		<Uuid>df4a6a60-9ce8-4c6c-91c0-ad5a5d732259</Uuid>
		<Uuid>47491eb9-4606-42bd-8399-125a2b95fded</Uuid>
		<Uuid>9b2d1306-5d19-439a-8f2c-b144dd7e22fa</Uuid>
		<Uuid>ef421152-8732-4f97-9acb-c8e9a6890d5e</Uuid>
		<Uuid>d48f8080-25b1-44f5-8322-7bf2712ff974</Uuid>
		<Uuid>6c4de826-daad-4cd4-b703-51dfe803e822</Uuid>
		<Uuid>01af22d6-6889-4e98-a3df-e6eddc40fc92</Uuid>
		<Uuid>ea3b3dbe-cca2-4bde-957b-feaef7e18789</Uuid>
		<Uuid>e737c8c6-b526-4f88-b89e-554e205b0614</Uuid>
		<Uuid>efd24e87-d7f7-425f-9cb0-3ee17c7b2116</Uuid>
		<Uuid>a62607e6-047e-4910-a1ec-5426bf9283b5</Uuid>
		<Uuid>64dceb5b-de05-47c7-8e40-e9b293e80d75</Uuid>
		<Uuid>8d51c652-6aee-4de8-ba03-47b289a13ec5</Uuid>
		<Uuid>51d7b5ce-5664-4750-b1a0-fabcdc31e49a</Uuid>
		<Uuid>6522e3af-aa9e-421c-b667-e11db73cd8ca</Uuid>
		<Uuid>9ac073a0-7abf-4dff-826f-9c44d4780590</Uuid>
		<Uuid>2da9c21c-adc7-405a-a36e-46fbd9dfcd42</Uuid>
		<Uuid>fe4d1053-9c84-4221-bac7-cb489a7064ff</Uuid>
		<Uuid>1f005f88-e6d7-4bdc-81fa-3acf4c89cf64</Uuid>
		<Uuid>42dc5a7c-d7b1-4653-92b9-9359b46cc2d4</Uuid>
		<Uuid>e25721a9-34f9-479c-a4c3-31f5ec9e117d</Uuid>
		<Uuid>506d1de3-06df-4131-9e88-e43f1768e3d8</Uuid>
		<Uuid>e6625695-25a2-43d0-9056-1e9a1a594b1e</Uuid>
		<Uuid>91990287-4edf-4e38-aa6c-66d0e906807b</Uuid>
		<Uuid>2216cdd0-177c-5678-9e88-dd8b95312234</Uuid>
	</ConvertersApplied>
</AnyLogicWorkspace>
